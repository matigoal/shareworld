{"version":3,"sources":["src/assets/logo.png","src/helpers/DateHelper.tsx","src/helpers/StringHelper.tsx","src/components/ListOfferComponent.tsx","src/services/offerService.ts","src/components/Styles.ts","src/screens/HomeScreen.tsx","src/screens/NotificationScreen.tsx","src/services/geoService.ts","src/components/AddressModalContent.tsx","src/services/categoryService.ts","src/components/CategoriesModalContent.tsx","src/components/StateModalContent.tsx","src/screens/AddScreen.tsx","src/screens/SearchScreen.tsx","src/constant/colors.ts","src/screens/profile/UserActionsScreen.tsx","src/store/actionsCreator.ts","src/store/actionsTypes.ts","src/services/auth.service.ts","src/functions/initObject.ts","src/screens/authScreen/SignIn.tsx","src/screens/ProfileScreen.tsx","src/screens/profile/MyDonnationsScreen.tsx","src/screens/offers/UpdateOfferScreen.tsx","src/screens/offers/OfferActionsScreen.tsx","src/screens/offers/WantedByUserScreen.tsx","src/screens/authScreen/SignUp.tsx","src/functions/checkInput.ts","src/routes/navigator.tsx","src/store/reducers.ts","App.tsx"],"names":["module","exports","DateHelper","date","date1","Date","getTime","date2","now","diff","Math","floor","StringHelper","text","start","length","slice","styles","StyleSheet","create","titleStyle","color","textAlignVertical","fontSize","fontWeight","itemContainerStyle","display","flexDirection","justifyContent","alignItems","width","height","padding","textLabelStyle","textAlign","marginBottom","infoStyle","imageStyle","borderRadius","OfferListComponent","props","data","Object","values","FlatList","renderItem","item","View","key","id","style","pictures","url","Image","source","uri","require","Text","label","marginRight","Ionicons","name","size","exchange_address","distance","created_at","keyExtractor","toString","numColumns","showsVerticalScrollIndicator","offerService","params","a","async","search","latitude","longitude","days","page_size","page_number","category","state","sort_by","url_params","forEach","e","fetch","fetchResult","json","jsonResult","Error","description","display_phone","display_mail","images","is_owner_address","owner","formData","FormData","append","JSON","stringify","Promise","all","map","img","base64Response","blob","requestOptions","method","body","COLORS","container","flex","backgroundColor","containerListOffers","titleContainerStyle","subTitleContainerStyle","borderBottomWidth","borderBottomColor","errorMsgStyle","HomeScreen","useState","offersData","setOffersData","storeData","coord","jsonValue","AsyncStorage","setItem","console","log","conditions","setConditions","errorFound","setErrorFound","errorMsg","setErrorMsg","useEffect","getItem","coords","parse","undefined","hasPermission","getData","results","offers","setTimeout","message","refresh","Location","status","location","ListOfferComponent","ActivityIndicator","NotificationScreen","geoService","trim","replace","split","i","result","features","filter","properties","housenumber","AddressModalContent","getAddress","geocodageResult","setGeocodageResult","TextInput","input","onChangeText","searchString","handleAddress","placeholder","TouchableOpacity","importance","marginVertical","onPress","showsHorizontalScrollIndicator","borderWidth","borderColor","categoryService","CategoriesModalContent","getCategory","chooseCategory","setChooseCategory","categories","setCategories","count","CategoryList","RenderCategoryItem","buttons","itemCategory","image_url","marginTop","StateModalContent","getState","chooseState","setChooseState","getStateFilter","StateList","AddScreen","navigation","route","modalChoice","setModalChoice","modalCategories","setModalCategories","modalState","setModalState","modalAddress","setModalAddress","setImages","title","setTitle","setDescription","offer","setOffer","address","setAddress","offerCategory","setOfferCategory","offerState","setOfferState","chooseAddress","setChooseAddress","displayPhone","setDisplayPhone","displayMail","setDisplayMail","user","mail","city","number","street","zipcode","complement","newOffer","validateForm","Alert","alert","ScrollView","centeredView","picturesList","newList","handleDeletePicture","deleteButton","deleteText","imagesStyle","photoButton","activeOpacity","value","multiline","numberOfLines","buttonOpenModal","viewOpenModalButtons","MaterialIcons","toggleButtonsOn","toggleButtonsOff","toggleTextOn","toggleTextOff","paddingHorizontal","navigate","screen","handleSubmitOffer","viewButtons","textStyle","isVisible","onBackdropPress","margin","modalViewChoice","viewAllButtons","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","v4","pickFromCamera","pickFromGallery","modalViewOptions","titleModal","c","handleCategory","s","handleState","modalAddressHeader","closeButton","modalViewAdress","postcode","context","geometry","coordinates","borderStyle","position","top","elevation","alignSelf","zIndex","marginLeft","modalText","searchView","paddingTop","searchInput","labelCategoryStyle","SearchScreen","inlineImageLeft","onFocus","categoryId","categoryLabel","TouchableHighlight","button","paddingVertical","UserActionsScreen","userId","setUserId","useNavigation","my_user","useSelector","parseInt","addUser","simulateHttpRequest","type","action","dispatch","axios","config","Status","State","authService","login_service","password","then","response","first_name","last_name","full_name","phone","url_avatar","credit","note","number_notes","accessToken","refreshToken","store","catch","error","loginrequest","register_service","fistname","lastname","window","localStorage","registerrequest","logout_service","disconnect","removeItem","SignInScreen","email","setEmail","setPassword","navigationHook","useDispatch","marginHorizontal","contentInput","labelInput","testID","secureTextEntry","loginBtn","logo","inputView","forgot_button","ProfileScreen","render","setRender","generateView","addListener","contentList","contentImage","contentText","image","MyDonnationsScreen","listOffers","setListOffers","loading","setLoading","getListOffers","ip","port","res","currentOffer","toUpperCase","wanted_by_users","itemOffer","index","initOffer","EnCours","CommeNeuf","user_name","category_id","contentItem","icon","labelInputAddress","ownerAddress","UpdateOfferScreen","setOptions","updateOffer","headers","Accept","onChangeLabel","onChangeDescription","onChangeDisplayPhone","onChangeDisplayMail","onChangeNumberAddress","onChangeStreetAddress","onChangeZipcodeAddress","onChangeCityAddress","onChangeComlementAddress","onChangeIsOwnerAddress","generateRadioButtonState","states","BonEtat","EtatMoyen","ABricoler","push","RadioButton","newState","onChangeState","generateRadioButtonCategories","indexCategories","onChangeCategory","displayPictures","deletePicture","horizontal","pickImageFromGallery","savePicture","takePicture","modal","Dimensions","get","left","Platform","OS","base64","reload","newPictures","oldPicture","displayModal","Checkbox","fontStyle","Switch","onValueChange","OfferActionsScreen","users","offerId","err","Address_input","WantedByUserScreen","listUsers","setListUsers","updateDemand","_newValue","newListUsers","oldUser","user_want_offers","validate_by_owner","newValue","EMAIL_REGEX","PASSWORD_REGEX","checkMail","test","checkPassword","checkStr","str","lenMin","lenMax","buttonText","SignUpScreen","setLastName","firstname","setFirstName","setPhone","setUrlAvatar","setMail","confirmpassword","setConfirmPassword","updateAddressInput","champ","newAddress","CITY","COMPLEMENT","NUMBER_STREET","STREET","ZIPCODE","placeholderTextColor","urlavatar","comparePassword","Tab","createBottomTabNavigator","HomeStack","createStackNavigator","HomeStackScreen","Navigator","screenOptions","headerStyle","headerTintColor","Screen","component","options","NotificationStack","NotificationStackScreen","AddStack","AddStackScreen","SearchStack","SearchStackScreen","headerShown","ProfileStack","ProfileStackScreen","background","buttonIcon","tabBarOptions","tabBarIcon","iconName","focused","tabBarLabel","tabBarButton","pointerEvents","initialUserState","reducer","newUser","deleteUser","createStore","composeWithDevTools","applyMiddleware","thunk","App","NavigationContainer"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,kC,mPCY9BC,EAZW,SAACC,GACvB,IAAIC,EAAQ,IAAIC,KAAKF,GAAMG,UACvBC,EAAQF,KAAKG,MACXC,EAAOC,KAAKC,OAAOJ,EAAQH,GAAS,IAAO,GAAK,GAAK,IAE3D,OAAY,GAARK,EACK,MAGFA,GAAQ,EAAOA,EAAf,QAAgCA,EAAhC,UCGIG,EAXU,SAACC,EAAcC,EAAeC,GAEjD,OAAIF,EAAKE,OAASA,EAEJF,EAAKG,MAAMF,EAAOC,GAA5B,OAGGF,GCkDLI,EAASC,IAAWC,OAAO,CAC/BC,WAAY,CACVC,MAAO,UACPC,kBAAmB,SACnBC,SAAU,GACVC,WAAY,OAEdC,mBAAoB,CAClBC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,IACPC,OAAQ,IACRC,QAAS,GAEXC,eAAgB,CACdC,UAAW,SACXC,aAAc,GAEhBC,UAAW,CACTV,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAElBS,WAAY,CACVP,MAAO,IACPC,OAAQ,IACRO,aAAc,GACdH,aAAc,KAGHI,EA3E4C,SAACC,GAC1D,IAAMC,EAAOC,OAAOC,OAAOH,GA+B3B,OACE,kBAACI,EAAA,EAAD,CACEH,KAAMA,EACNI,WAhCoD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtD,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAKG,GAAIC,MAAOjC,EAAOQ,oBAC/BqB,EAAKK,SAAS,IAAML,EAAKK,SAAS,GAAGC,IACpC,kBAACC,EAAA,EAAD,CACEH,MAAOjC,EAAOoB,WACdiB,OAAQ,CAAEC,IAAKT,EAAKK,SAAS,GAAGC,OAGlC,kBAACC,EAAA,EAAD,CACEH,MAAOjC,EAAOoB,WACdiB,OAAQE,EAAQ,OAGpB,kBAACC,EAAA,EAAD,CAAMP,MAAOjC,EAAOgB,gBACjB,IACArB,EAA4BkC,EAAKY,MAAO,EAAG,IAAK,KAEnD,kBAACX,EAAA,EAAD,CAAMG,MAAOjC,EAAOmB,WAClB,kBAACqB,EAAA,EAAD,CAAMP,MAAO,CAAES,YAAa,IAC1B,kBAACC,EAAA,EAAD,CAAUC,KAAK,WAAWxC,MAAM,MAAMyC,KAAM,KAAO,IAClDhB,EAAKiB,iBAAiBC,SAFzB,OAIA,kBAACP,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAUC,KAAK,OAAOxC,MAAM,MAAMyC,KAAM,KAAO,IAC9C5D,EAA2B4C,EAAKmB,gBASrCC,aAAc,SAACpB,GAAD,OAAUA,EAAKG,GAAGkB,YAChCC,WAAY,EACZC,8BAA8B,KCoDvBC,EArGK,SAAOC,GAAP,yCAAAC,EAAAC,OAAA,uDAGNC,EAAkGH,EAAlGG,OAAQC,EAA0FJ,EAA1FI,SAAUC,EAAgFL,EAAhFK,UAAWZ,EAAqEO,EAArEP,SAAUa,EAA2DN,EAA3DM,KAAMC,EAAqDP,EAArDO,UAAWC,EAA0CR,EAA1CQ,YAAaC,EAA6BT,EAA7BS,SAAUC,EAAmBV,EAAnBU,MAAOC,EAAYX,EAAZW,QAE1FC,EAAa,GAEbT,IACAS,GAAU,UAAcT,EAAd,KAEVM,IACAG,GAAU,YAAgBH,EAAhB,KAEVC,IAAc,MAALA,OAAA,EAAAA,EAAOlE,QAAS,GACzBkE,EAAMG,SAAQ,SAAAC,GACVF,GAAU,WAAeE,EAAf,OAGdV,GAAYC,GAAaZ,IACzBmB,GAAU,YAAgBR,EAAhB,cAAsCC,EAAtC,aAA4DZ,EAA5D,KAEVa,IACAM,GAAU,QAAYN,EAAZ,KAGVC,GAAaC,IACbI,GAAU,aAAiBL,EAAjB,gBAA0CC,EAA1C,KAGVG,IACAC,GAAU,WAAeD,GAGvB9B,EAjCQ,uCAiCqC+B,EAjCrC,YAAAX,EAAA,MAmCYc,MAAMlC,IAnClB,eAmCRmC,EAnCQ,mBAAAf,EAAA,MAoCiCe,EAAYC,QApC7C,WAoCRC,EApCQ,8BAuCJC,MAAM,mBAvCF,iCA0CPD,GA1CO,8DAqGLnB,EAvDK,SAAOC,GAAP,yCAAAC,EAAAC,OAAA,uDAENf,EAUJa,EAVIb,MACJiC,EASApB,EATAoB,YACAC,EAQArB,EARAqB,cACAC,EAOAtB,EAPAsB,aACAZ,EAMAV,EANAU,MACAlB,EAKAQ,EALAR,iBACA+B,EAIAvB,EAJAuB,OACAC,EAGAxB,EAHAwB,iBACAf,EAEAT,EAFAS,SACAgB,EACAzB,EADAyB,OAGEC,EAAW,IAAIC,UAEZC,OAAO,QAASzC,GACzBuC,EAASE,OAAO,cAAeR,GAC/BM,EAASE,OAAO,gBAAiBP,EAAczB,YAC/C8B,EAASE,OAAO,eAAgBN,EAAa1B,YAC7C8B,EAASE,OAAO,QAASlB,GACzBgB,EAASE,OAAO,cAAenB,EAASb,YACxC8B,EAASE,OAAO,mBAAoBJ,EAAiB5B,YACrD8B,EAASE,OAAO,WAAYH,EAAM7B,YAClC8B,EAASE,OAAO,mBAAoBC,KAAKC,UAAUtC,IAxBrC,YAAAS,EAAA,MA2Bc8B,QAAQC,IAEhCT,EAAOU,KAAI,SAAOC,GAAP,iBAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MAEoBc,MAAMmB,IAF1B,cAEHC,EAFG,kBAAAlC,EAAA,MAGUkC,EAAeC,QAHzB,OAGHA,EAHG,OAIPV,EAASE,OAAO,SAAUQ,GAJnB,iEA7BD,sBAsCRC,EAAiB,CACnBC,OAAQ,OACRC,KAAMb,GAxCI,2CAAAzB,EAAA,MA6CYc,MA7CZ,+BA6CuBsB,IA7CvB,eA6CRrB,EA7CQ,mBAAAf,EAAA,MA8CWe,EAAYC,QA9CvB,WA8CRC,EA9CQ,8BAiDJC,MAAM,mBAjDF,iCAoDPD,GApDO,8DClDLsB,EACA,UADAA,EAEE,OAFFA,EAGE,UAHFA,EAIC,UAJDA,EAKC,UALDA,EAMA,U,ikBCYb,IAkKM9F,EAASC,IAAWC,OAAO,CAC7B6F,UAAW,CACPC,KAAM,EACNC,gBAAiBH,GAErBI,oBAAqB,CACjBF,KAAM,EACNC,gBAAiBH,EACjBlF,WAAY,SACZG,QAAS,IAEboF,oBAAqB,CACjBF,gBAAiBH,EACjBE,KAAM,IACNpF,WAAY,SACZD,eAAgB,UAEpByF,uBAAwB,CACpBJ,KAAM,IACNpF,WAAY,SACZD,eAAgB,SAChB0F,kBAAmB,EACnBC,kBAAmB,WAEvBnG,WAAY,CACRC,MAAO0F,EACPzF,kBAAmB,SACnBC,SAAU,GACVC,WAAY,OAEhBgG,cAAe,CACXtF,UAAW,SACXb,MAAO0F,EACPxF,SAAU,MAIHkG,EAvMc,WAEzB,MAAoCC,mBAA+B,IAAnE,WAAOC,EAAP,KAAmBC,EAAnB,KAGMC,EAAY,SAAOC,GAAP,eAAAtD,EAAAC,OAAA,gEAEJsD,EAAY3B,KAAKC,UAAUyB,GAFvB,WAAAtD,EAAA,MAGJwD,IAAaC,QAAQ,cAAeF,IAHhC,sDAKVG,QAAQC,IAAR,MALU,gEAQlB,EAAoCT,mBAChC,CAEI7C,KAAM,IACNC,UAAW,GACXC,YAAa,EACbf,SAAU,GACVkB,QAAS,SAPjB,WAAOkD,EAAP,KAAmBC,EAAnB,KAWA,EAAoCX,oBAAS,GAA7C,WAAOY,EAAP,KAAmBC,EAAnB,KAEA,EAAgCb,mBAAS,IAAzC,WAAOc,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,YACU,yBAAAlE,EAAAC,OAAA,2EAAAD,EAAA,MAGgBwD,IAAaW,QAAQ,gBAHrC,OAGFZ,EAHE,OAIJa,EAAqB,GACR,MAAbb,IACAa,EAASxC,KAAKyC,MAAMd,SAGAe,IAApBF,EAAOjE,SAEP0D,EAAc,EAAD,KACND,GADM,IAETzD,SAAQ,SAAEiE,QAAF,EAAE,EAAQjE,SAClBC,UAAS,SAAEgE,QAAF,EAAE,EAAQhE,aAIvBmE,IAlBI,gDAsBRb,QAAQC,IAAR,MAtBQ,gEA0BhBa,KAGD,IAEHN,qBAAU,YAEU,uBAAAlE,EAAAC,OAAA,2EAAAD,EAAA,MAIWF,EAAuB8D,IAJlC,OAIF3F,EAJE,OAKRmF,EAAa,MAACnF,GAAD,SAACA,EAAMwG,cAAP,EAAC,EAAeC,QAExBzG,EAAKwG,SACNV,GAAc,GAEkB,IAA5B,MAAJ9F,GAAA,SAAAA,EAAMwG,cAAN,IAAeC,OAAOnI,SACtBoI,YAAW,WAAcZ,GAAc,KAAU,KAX7C,gDAeRL,QAAQC,IAAI,QAAS,KAAMiB,SAC3Bb,GAAc,GAhBN,gEAmBhBc,KAED,CAACjB,IAGJ,IAAMW,EAAgB,8BAAAvE,EAAAC,OAAA,kEAAAD,EAAA,MAEK8E,OAFL,mBAIH,YAJG,EAEZC,OAFY,uBAKdd,EAAY,4CALE,4CAAAjE,EAAA,MASG8E,IAAiC,KATpC,OASdE,EATc,OAUdhB,EACAN,QAAQC,IAAIK,GAELgB,IAEPnB,EAAc,EAAD,KACND,GADM,IAETzD,SAAU6E,EAASZ,OAAOjE,SAC1BC,UAAW4E,EAASZ,OAAOhE,aAGzBkD,EAAQ,CACVnD,SAAU6E,EAASZ,OAAOjE,SAC1BC,UAAW4E,EAASZ,OAAOhE,WAE/BsD,QAAQC,IAAI,oBAEZN,EAAUC,IA3BI,8DAiCtB,OACI,kBAAC/E,EAAA,EAAD,CAAMG,MAAOjC,EAAO+F,WAEhB,kBAACjE,EAAA,EAAD,CAAMG,MAAOjC,EAAOmG,qBAChB,kBAAC3D,EAAA,EAAD,CAAMP,MAAOjC,EAAOG,YAApB,2CAEJ,kBAAC2B,EAAA,EAAD,CAAMG,MAAOjC,EAAOoG,wBAChB,kBAAC5D,EAAA,EAAD,CAAMP,MAAK,OAAOjC,EAAOG,YAAd,IAA0BI,WAAY,MAAOH,MAAO,UAAWE,SAAU,MAApF,uCAGA,kBAACkC,EAAA,EAAD,CAAMP,MAAK,OAAOjC,EAAOG,YAAd,IAA0BI,WAAY,MAAOH,MAAO,UAAWE,SAAU,MAApF,wCAIJ,kBAACwB,EAAA,EAAD,CAAMG,MAAOjC,EAAOkG,qBAEdQ,GAAcA,EAAW5G,OAAS,EAChC,kBAAC0I,EAAuB9B,GAExB,kBAAC5E,EAAA,EAAD,CAAMG,MAAO,CAAEtB,eAAgB,SAAUqF,KAAM,KAC1CqB,EACG,kBAACvF,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,EAAOuG,eAApB,WAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,EAAOuG,eAApB,oEAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,EAAOuG,eAApB,wBAKJ,kBAACkC,EAAA,EAAD,CAAmB5F,KAAK,QAAQzC,MAAM,gBC9JnDsI,EATsB,WACjC,OACI,kBAAC5G,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,6B,6FC+BCmG,EAnCK,SAAOlF,GAAP,uBAAAF,EAAAC,OAAA,uDAEVU,EAAa,GAEbT,GAAUA,EAAO3D,OAAS,EACV2D,EAAOmF,OAAOC,QAAQ,IAAK,IAAIC,MAAM,KAC7C3E,SAAQ,SAACC,EAAG2E,EAAGxF,GACfwF,IAAMxF,EAAEzD,OAAS,EACjBoE,GAAU,GAAOE,EAEjBF,GAAiBE,EAAP,OAIlBF,GAAc,MAIZ/B,EAlBQ,8CAkB4C+B,EAlB5C,wCAAAX,EAAA,MAqBYc,MAAMlC,IArBlB,cAqBRmC,EArBQ,kBAAAf,EAAA,MAsBmCe,EAAYC,QAtB/C,UAsBRC,EAtBQ,8BAyBJC,MAAM,mBAzBF,eA6BRuE,EAASxE,EAAWyE,SAASC,QAAO,SAAC3F,GAAD,OAAOA,EAAE4F,WAAWC,eA7BhD,kBA+BPJ,GA/BO,8DCqFHK,EA5E8B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAE5C,EAA8C7C,mBAA6B,IAA3E,WAAO8C,EAAP,KAAwBC,EAAxB,KACA,EAAoC/C,oBAAS,GAA7C,WAAOY,EAAP,KAAmBC,EAAnB,KA8BA,OACI,kBAACxF,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,KACI,kBAAC2H,EAAA,EAAD,CACIxH,MAAOjC,GAAO0J,MACdC,aAAc,SAACvF,GAAD,OAjCR,SAAOwF,GAAP,eAAArG,EAAAC,OAAA,mDAClBgG,EAAmB,IADD,SAIdlC,GAAc,KACVsC,EAAa9J,OAAS,GALZ,kCAAAyD,EAAA,MAMSoF,EAAqBiB,IAN9B,OAMNZ,EANM,OAOVQ,EAAmBR,GAPT,yDAWd/B,QAAQC,IAAR,MACAI,GAAc,GAZA,iEAiCeuC,CAAczF,IACnC0F,YAAY,4BAGpB,kBAAChI,EAAA,EAAD,KACMyH,IAAkC,MAAfA,OAAA,EAAAA,EAAiBzJ,QAAS,EAC3C,kBAAC6B,EAAA,EAAD,CACIH,KAAM+H,EACN3H,WAzBwC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxD,kBAAEkI,EAAA,EAAF,CAAmBhI,IAAK,CAACF,EAAKsH,WAAWnH,GAAIH,EAAKsH,WAAWa,YAAY9G,WACrEjB,MAAO,CAAEgI,eAAgB,GAAI5D,kBAAmB,EAAGC,kBAAmBR,GACtEoE,QAAS,WACLZ,EAAWzH,KAGf,kBAACC,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KAAOX,EAAKsH,WAAW1G,MAAvB,QAkBQQ,aAAc,SAACpB,GAAD,MAAU,CAACA,EAAKsH,WAAWnH,GAAIH,EAAKsH,WAAWa,YAAY9G,YACzEC,WAAY,EACZgH,gCAAgC,IAGpC,kBAACrI,EAAA,EAAD,CAAMG,MAAO,CAAEtB,eAAgB,SAAUqF,KAAM,KAC1CqB,GACG,kBAACvF,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,WAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,6DAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,4BAgB1BvG,GAASC,IAAWC,OAAO,CAC7BwJ,MAAO,CACHU,YAAa,EACbC,YAAavE,EACbzE,aAAc,EACdN,QAAS,GACTkJ,eAAgB,IAEpB1D,cAAe,CACXtF,UAAW,SACXb,MAAO0F,EACPxF,SAAU,MClFLgK,GAfS,4BAAA/G,EAAAC,OAAA,oGAAAD,EAAA,MAKQc,MALR,mDAKZC,EALY,kBAAAf,EAAA,MAM+Be,EAAYC,QAN3C,UAMZC,EANY,6BASRC,MAAM,mBATE,gCAYXD,GAZW,8DCmIP+F,GAzHiC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE/C,EAA4C/D,mBAA+B,IAA3E,WAAOgE,EAAP,KAAuBC,EAAvB,KAEA,EAAoCjE,mBAAiC,IAArE,WAAOkE,EAAP,KAAmBC,EAAnB,KACA,EAAoCnE,oBAAS,GAA7C,WAAOY,EAAP,KAAmBC,EAAnB,KACA,EAA0Bb,mBAAS,GAAnC,WAAOoE,EAAP,UAEApD,qBAAU,YAEU,mBAAAlE,EAAAC,OAAA,2EAAAD,EAAA,MAIW+G,MAJX,OAIF9I,EAJE,OAKRoJ,EAAcpJ,GAETA,GACD8F,GAAc,GAEC,GAAf9F,EAAK1B,QACLoI,YAAW,WAAcZ,GAAc,KAAU,KAX7C,gDAeRL,QAAQC,IAAI,QAAS,KAAMiB,SAC3Bb,GAAc,GAhBN,gEAmBhBc,KAED,CAACyC,IAEJ,IAKMC,EAAe,WACjB,OACI,kBAAChJ,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMG,MAAO,CAAEnB,OAAQ,MACjB6J,IAAwB,MAAVA,OAAA,EAAAA,EAAY7K,QAAS,EACjC,kBAAC6B,EAAA,EAAD,CACIH,KAAMmJ,EACN/I,WAAYmJ,EACZ9H,aAAc,SAACpB,GAAD,OAAUA,EAAKG,GAAGkB,YAChCC,WAAY,EACZgH,gCAAgC,IAIpC,kBAACrI,EAAA,EAAD,CAAMG,MAAO,CAAEtB,eAAgB,SAAUqF,KAAM,KAC1CqB,EACG,kBAACvF,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,WAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,oEAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,wBAKJ,kBAACkC,EAAA,EAAD,CAAmB5F,KAAK,QAAQzC,MAAO0F,MAKvD,kBAACiE,EAAA,EAAD,CACI9H,MAAOjC,GAAOgL,QACdd,QAAS,WACLM,EAAYC,KAEhB,kBAACjI,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,EAAkB7E,UAAW,WAAjE,oBAUV8J,EAA2D,SAAC,GAAc,IAAZlJ,EAAW,EAAXA,KAEhE,OACI,kBAAEkI,EAAA,EAAF,CAAmBhI,IAAKF,EAAKG,GACzBC,MAAOjC,GAAOiL,aACdf,QAAS,WACLQ,EAAkB,CACd1I,GAAIH,EAAKG,GACTS,MAAOZ,EAAKY,MACZyI,UAAWrJ,EAAKqJ,YA5DhCJ,MAiEQ,kBAAChJ,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KAAQX,EAAKY,MAAb,MAGJ,kBAACX,EAAA,EAAD,KACM2I,EAAezI,IAAMH,EAAKG,IACxB,kBAACW,EAAA,EAAD,CAAUC,KAAK,YAAYC,KAAM,GAAIzC,MAAO0F,OAMhE,OACI,kBAAChE,EAAA,EAAD,KACI,kBAACgJ,EAAD,QAQN9K,GAASC,IAAWC,OAAO,CAC7B+K,aAAc,CACVlK,QAAS,EACTkJ,eAAgB,EAChBnJ,OAAQ,GACRL,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAEpB4F,cAAe,CACXtF,UAAW,SACXb,MAAO0F,EACPxF,SAAU,IAEd0K,QAAS,CACL/E,gBAAiBH,EACjB/E,QAAS,GACTM,aAAc,EACdH,aAAc,EACdiK,UAAW,IAEfvL,KAAM,CACFU,SAAU,MChCH8K,GA/G4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE1C,EAAsC5E,mBAAgB,CAAEzC,MAAO,YAA/D,WAAOsH,EAAP,KAAoBC,EAApB,KAGMC,EAAiB,WAEnBC,KAGEA,EAAY,WACd,OACI,kBAAC3J,EAAA,EAAD,KACI,kBAACA,EAAA,EAAD,CAAMG,MAAO,CAAEnB,OAAQ,MACnB,kBAACgB,EAAA,EAAD,KACI,kBAAEiI,EAAA,EAAF,CACI9H,MAAOjC,GAAOiL,aACdf,QAAS,WACLqB,EAAe,CAAEvH,MAAO,iBAG5B,kBAAClC,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,oBAEJ,kBAACV,EAAA,EAAD,KAC2B,cAArBwJ,EAAYtH,OACV,kBAACrB,EAAA,EAAD,CAAUC,KAAK,YAAYC,KAAM,GAAIzC,MAAO0F,OAK5D,kBAAChE,EAAA,EAAD,KACI,kBAAEiI,EAAA,EAAF,CACI9H,MAAOjC,GAAOiL,aACdf,QAAS,WACLqB,EAAe,CAAEvH,MAAO,gBACxBwH,MAGJ,kBAAC1J,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,GAAOJ,MAApB,gBAEJ,kBAACkC,EAAA,EAAD,KAC2B,eAArBwJ,EAAYtH,OACV,kBAACrB,EAAA,EAAD,CAAUC,KAAK,YAAYC,KAAM,GAAIzC,MAAO0F,OAK5D,kBAAChE,EAAA,EAAD,KACI,kBAAEiI,EAAA,EAAF,CACI9H,MAAOjC,GAAOiL,aACdf,QAAS,WACLqB,EAAe,CAAEvH,MAAO,kBAAiBwH,MAI7C,kBAAC1J,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,GAAOJ,MAApB,kBAEJ,kBAACkC,EAAA,EAAD,KAC2B,iBAArBwJ,EAAYtH,OACV,kBAACrB,EAAA,EAAD,CAAUC,KAAK,YAAYC,KAAM,GAAIzC,MAAO0F,OAK5D,kBAAChE,EAAA,EAAD,KACI,kBAAEiI,EAAA,EAAF,CACI9H,MAAOjC,GAAOiL,aACdf,QAAS,WACLqB,EAAe,CAAEvH,MAAO,kBAAiBwH,MAI7C,kBAAC1J,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,GAAOJ,MAApB,kBAEJ,kBAACkC,EAAA,EAAD,KAC2B,iBAArBwJ,EAAYtH,OACV,kBAACrB,EAAA,EAAD,CAAUC,KAAK,YAAYC,KAAM,GAAIzC,MAAO0F,QAOhE,kBAACiE,EAAA,EAAD,CACI9H,MAAOjC,GAAOgL,QACdd,QAAS,WACLmB,EAASC,EAAYtH,SAEzB,kBAACxB,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,EAAkB7E,UAAW,WAAjE,gBAUhB,OACI,kBAACa,EAAA,EAAD,KACI,kBAAC2J,EAAD,QAQNzL,GAASC,IAAWC,OAAO,CAC7B+K,aAAc,CACVlK,QAAS,EACTkJ,eAAgB,EAChBnJ,OAAQ,GACRL,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAGpBqK,QAAS,CACL/E,gBAAiBH,EACjB/E,QAAS,GACTM,aAAc,EACdH,aAAc,EACdiK,UAAW,IAEfvL,KAAM,CACFU,SAAU,M,qkBCtHlB,IA6eeoL,GA7esC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAEpD,GAF4E,EAAZC,MAE1BnF,oBAAS,IAA/C,WAAOoF,EAAP,KAAoBC,EAApB,KACA,EAA8CrF,oBAAS,GAAvD,WAAOsF,EAAP,KAAwBC,EAAxB,KACA,EAAoCvF,oBAAS,GAA7C,WAAOwF,EAAP,KAAmBC,EAAnB,KACA,EAAwCzF,oBAAS,GAAjD,WAAO0F,EAAP,KAAqBC,EAArB,KACA,EAA4B3F,mBAAqB,IAAjD,WAAO5B,EAAP,KAAewH,EAAf,KACA,EAA0B5F,mBAAS,IAAnC,WAAO6F,EAAP,KAAcC,EAAd,KACA,EAAsC9F,mBAAS,IAA/C,WAAO/B,EAAP,KAAoB8H,EAApB,KACA,EAA0B/F,mBAA+B,CAAE7B,cAAc,EAAOD,eAAe,IAA/F,YAAO8H,GAAP,MAAcC,GAAd,MACA,GAA8BjG,mBAA6B,IAA3D,aAAOkG,GAAP,MAAgBC,GAAhB,MACA,GAA0CnG,mBAAS,YAAnD,aAAOoG,GAAP,MAAsBC,GAAtB,MACA,GAAoCrG,mBAAS,SAA7C,aAAOsG,GAAP,MAAmBC,GAAnB,MACA,GAA0CvG,mBAAS,WAAnD,aAAOwG,GAAP,MAAsBC,GAAtB,MAEA,GAAwCzG,mBAAS,OAAjD,aAAO0G,GAAP,MAAqBC,GAArB,MACA,GAAsC3G,mBAAS,OAA/C,aAAO4G,GAAP,MAAoBC,GAApB,MA8NMC,GAAyB,GAC/B9F,qBAAU,WACN,GAAI8F,GAAKC,KAAM,CACXZ,GAAW,CACP5K,GAAIuL,GAAKZ,QAAQ3K,GACjByL,KAAMF,GAAKZ,QAAQc,KACnBC,OAAQH,GAAKZ,QAAQe,OACrBC,OAAQJ,GAAKZ,QAAQgB,OACrBC,QAASL,GAAKZ,QAAQiB,QACtBC,WAAYN,GAAKZ,QAAQkB,WACzBnK,SAAU6J,GAAKZ,QAAQjJ,SACvBC,UAAW4J,GAAKZ,QAAQhJ,YAE5B,IAAMmK,EAAiCrB,GACvCqB,EAAShJ,kBAAmB,EAC5B4H,GAASoB,MAMd,IAEH,IAAMC,GAAe,WAEjB,IACItL,EAIAgK,GAJAhK,MACAuB,EAGAyI,GAHAzI,MACAa,EAEA4H,GAFA5H,OACAd,EACA0I,GADA1I,SAGJ,OAAqB,GAAjBc,EAAO/E,QACPkO,IAAMC,MAAM,yCACL,GAENxL,GAAyB,GAAhBA,EAAM3C,QAAwB,KAAT2C,EAK9BuB,GAAyB,GAAhBA,EAAMlE,QAAwB,KAATkE,IAI9BD,IACDiK,IAAMC,MAAM,uCACL,IALPD,IAAMC,MAAM,iCACL,IANPD,IAAMC,MAAM,oCACL,IAuDf,OACI,kBAACC,EAAA,EAAD,CAAYjM,MAAOjC,GAAOmO,aACtB/K,8BAA8B,GAC9B,kBAACZ,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAI2J,eAAgB,IAA7C,UAEA,kBAACnI,EAAA,EAAD,CAAMG,MAAOjC,GAAOoO,cACfvJ,EAAO/E,OAAS,GAAK+E,EAAOU,KAAI,SAAC1D,GAC9B,OACI,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAKG,IACZ,kBAAC+H,EAAA,EAAD,CACIG,QAAS,kBAtQT,SAAClI,GACzB,IAAMqM,EAAUxJ,EAAOqE,QAAO,SAACrH,GAAD,OAAUA,EAAKG,KAAOA,KACpDqK,EAAUgC,GAoQ6BC,CAAoBzM,EAAKG,KACxCC,MAAOjC,GAAOuO,aACdxM,IAAKF,EAAKG,IACV,kBAACQ,EAAA,EAAD,CAAMP,MAAOjC,GAAOwO,YAApB,MAIJ,kBAACpM,EAAA,EAAD,CACIC,OAAQ,CAAEC,IAAKT,EAAKS,KACpBL,MAAOjC,GAAOyO,kBAM7B5J,EAAO/E,OAAS,GAEb,kBAACiK,EAAA,EAAD,CAAkB9H,MAAOjC,GAAO0O,YAC5BC,cAAe,GACfzE,QAAS,kBAAM4B,GAAe,KAC9B,kBAACnJ,EAAA,EAAD,CAAUC,KAAK,SAASC,KAAM,GAAIzC,MAAM,cAIpD,kBAAC0B,EAAA,EAAD,CAAMG,MAAO,CAAEkJ,UAAW,IAEtB,kBAAC1B,EAAA,EAAD,CACIxH,MAAOjC,GAAO0J,MACdC,aA7RI,SAAC/J,GACjB,IAAMkO,EAAiCrB,GACvCqB,EAASrL,MAAQ7C,EACjB8M,GAASoB,GACTvB,EAAS3M,IA0RGkK,YAAY,QACZ8E,MAAOtC,IAEX,kBAAC7C,EAAA,EAAD,CACIxH,MAAOjC,GAAO0J,MACdC,aA5RU,SAAC/J,GACvB,IAAMkO,EAAiCrB,GACvCqB,EAASpJ,YAAc9E,EACvB8M,GAASoB,GACTtB,EAAe5M,IAyRHkK,YAAY,cACZ+E,WAAS,EACTC,cAAe,EACfF,MAAOlK,IAEX,kBAACqF,EAAA,EAAD,CAAkB9H,MAAOjC,GAAO+O,gBAAiB7E,QAAS,kBAAM8B,GAAmB,KAC/E,kBAAClK,EAAA,EAAD,CAAMG,MAAOjC,GAAOgP,sBACE,YAAjBnC,GACK,kBAACrK,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,IAApC,iBAIF,kBAACtD,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,IAC/B+G,IAGT,kBAACoC,EAAA,EAAD,CAAerM,KAAK,uBAAuBC,KAAM,GAAIzC,MAAO0F,MAGpE,kBAACiE,EAAA,EAAD,CAAkB9H,MAAOjC,GAAO+O,gBAAiB7E,QAAS,kBAAMgC,GAAc,KAC1E,kBAACpK,EAAA,EAAD,CAAMG,MAAOjC,GAAOgP,sBACD,SAAdjC,GACK,kBAACvK,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,IAApC,4CAIF,kBAACtD,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,IAC/BiH,IAGT,kBAACkC,EAAA,EAAD,CAAerM,KAAK,uBAAuBC,KAAM,GAAIzC,MAAO0F,MAGpE,kBAACiE,EAAA,EAAD,CAAkB9H,MAAOjC,GAAO+O,gBAAiB7E,QAAS,kBAAMkC,GAAgB,KAC5E,kBAACtK,EAAA,EAAD,CAAMG,MAAOjC,GAAOgP,sBAChB,kBAAClN,EAAA,EAAD,CAAMG,MAAOjC,GAAOgP,sBAChB,kBAACrM,EAAA,EAAD,CAAUC,KAAK,WAAWC,KAAM,GAAIzC,MAAO0F,IAC1C6G,GAAQc,KAEL,kBAACjL,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,IAC/B6G,GAAQe,OADb,IACsBf,GAAQgB,OAD9B,KACwChB,GAAQc,MAGhD,kBAACjL,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,IAC/BmH,KAIb,kBAACnL,EAAA,EAAD,KACI,kBAACmN,EAAA,EAAD,CAAerM,KAAK,uBAAuBC,KAAM,GAAIzC,MAAO0F,QAK5E,kBAAChE,EAAA,EAAD,CAAMG,MAAO,CAAEvB,cAAe,MAAOC,eAAgB,iBACjD,kBAACmB,EAAA,EAAD,CAAMG,MAAO,CAAErB,WAAY,WACvB,kBAAC4B,EAAA,EAAD,CAAMP,MAAO,CAAEgI,eAAgB,GAAI3J,SAAU,KAA7C,gCACA,kBAACyJ,EAAA,EAAD,CACI9H,MAAwB,OAAhBkL,GACJnN,GAAOkP,gBAAkBlP,GAAOmP,iBAEpCjF,QAAS,WAEDkD,GADgB,OAAhBD,GACgB,MAEA,SAIxB,kBAACrL,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAwB,OAAhBkL,GAAyBnN,GAAOoP,aAAepP,GAAOqP,eAAgBlC,OAIhG,kBAACrL,EAAA,EAAD,CAAMG,MAAO,CAAErB,WAAY,WACvB,kBAAC4B,EAAA,EAAD,CAAMP,MAAO,CAAEgI,eAAgB,GAAI3J,SAAU,KAA7C,sBACA,kBAACyJ,EAAA,EAAD,CACI9H,MACoB,OAAfoL,GACGrN,GAAOkP,gBAAkBlP,GAAOmP,iBAExCjF,QAAS,WAEDoD,GADe,OAAfD,GACe,MAEA,SAIvB,kBAACvL,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAuB,OAAfoL,GAAwBrN,GAAOoP,aAAepP,GAAOqP,eAAgBhC,QAMnG,kBAACvL,EAAA,EAAD,CAAMG,MAAO,CAAEf,aAAc,GAAIoO,kBAAmB,KAChD,kBAACvF,EAAA,EAAD,CAAkB9H,MAAOjC,GAAOgL,QAASd,QAAS,YArLpC,qBAAA3G,EAAAC,OAAA,mDAElBtB,EAAW2C,EAAOU,KAAI,SAACnB,GACvB,OAAOA,EAAE9B,QAGPwL,EAAiCrB,IAE9B5H,OAAS3C,EAClB4L,EAAS/I,MAAQ,EACjB+I,EAASlJ,aAA+B,OAAfyI,GACzBS,EAASnJ,cAAiC,OAAhBwI,GAE1BT,GAASoB,IAELC,KAfkB,oCAAAxK,EAAA,MAiBGF,EAAuBoJ,KAjB1B,QAmBH,OAnBG,SAoBdJ,EAAU,IACVS,GAAiB,YACjBE,GAAc,SACdE,GAAiB,WACjBI,GAAe,OACfF,GAAgB,OAChBb,EAAS,IACTC,EAAe,IACfI,GAAW,IACXF,GAAS,IAGTf,EAAW4D,SAAS,gBAAiB,CACjCC,OAAQ,wBAjCE,6DAsLVC,KAGA,kBAAC3N,EAAA,EAAD,CAAMG,MAAOjC,GAAO0P,aAChB,kBAAClN,EAAA,EAAD,CAAMP,MAAK,SAAOjC,GAAO2P,WAAd,IAAyBpP,WAAY,OAAQD,SAAU,GAAIF,MAAO0F,KAA7E,eAMZ,mBAlVa,kBACjB,kBAAC,IAAD,CACI8J,UAAW/D,EACXgE,gBAAiB,kBAAM/D,GAAe,IACtC7J,MAAO,CAAE6N,OAAQ,EAAGnP,eAAgB,aACpC,kBAACmB,EAAA,EAAD,CAAMG,MAAOjC,GAAO+P,iBAChB,kBAACjO,EAAA,EAAD,CAAMG,MAAOjC,GAAOgQ,gBAChB,kBAACjG,EAAA,EAAD,CACI9H,MAAOjC,GAAOgL,QACdd,QAAS,kBAzGN,4BAAA3G,EAAAC,OAAA,kEAAAD,EAAA,MACM0M,OADN,mBAEJ,YAFI,EACX3H,OADW,gBAGf0F,IAAMC,MAAM,6DAHG,0CAAA1K,EAAA,MAMI0M,IAA8B,CAC7CC,WAAYD,IAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,MAVE,SAMXtH,EANW,QAcHuH,WACRlE,EAAU,GAAD,WAAKxH,GAAL,CAAa,CAClB7C,GAAIwO,cACJlO,IAAK0G,EAAO1G,QAKhBuC,EAAO/E,OAAS,GAChBgM,GAAe,GAvBJ,6DAyGY2E,KAEf,kBAAC3O,EAAA,EAAD,CAAMG,MAAOjC,GAAO0P,aAChB,kBAAC/M,EAAA,EAAD,CAAUC,KAAK,iBAAiBC,KAAM,GAAIzC,MAAM,SAChD,kBAACoC,EAAA,EAAD,CAAMP,MAAOjC,GAAO2P,WAApB,YAGR,kBAAC5F,EAAA,EAAD,CACI9H,MAAOjC,GAAOgL,QACdd,QAAS,kBAjJL,4BAAA3G,EAAAC,OAAA,kEAAAD,EAAA,MACK0M,OADL,mBAEL,YAFK,EACZ3H,OADY,gBAGhB0F,IAAMC,MAAM,6DAHI,0CAAA1K,EAAA,MAMG0M,IAAoC,CACnDC,WAAYD,IAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,MAVG,QAMZtH,EANY,OAahB/B,QAAQC,IAAI8B,GAGPA,EAAOuH,WACRlE,EAAU,GAAD,WAAKxH,GAAL,CAAa,CAClB7C,GAAIwO,cACJlO,IAAK0G,EAAO1G,QAKpBwJ,GAAe,GACXjH,EAAO/E,OAAS,GAChBgM,GAAe,GA1BH,6DAiJW4E,KAEf,kBAAC5O,EAAA,EAAD,CAAMG,MAAOjC,GAAO0P,aAChB,kBAAC/M,EAAA,EAAD,CAAUC,KAAK,iBAAiBC,KAAM,GAAIzC,MAAM,SAChD,kBAACoC,EAAA,EAAD,CAAMP,MAAOjC,GAAO2P,WAApB,cAIZ,kBAAC7N,EAAA,EAAD,CAAMG,MAAO,CAAEkJ,UAAW,GAAIjK,aAAc,GAAIoO,kBAAmB,KAC/D,kBAACvF,EAAA,EAAD,CAAkB9H,MAAOjC,GAAOgL,QAASd,QAAS,kBAAM4B,GAAe,KACnE,kBAAChK,EAAA,EAAD,CAAMG,MAAOjC,GAAO0P,aAChB,kBAAClN,EAAA,EAAD,CAAMP,MAAK,SAAOjC,GAAO2P,WAAd,IAAyBpP,WAAY,OAAQD,SAAU,GAAIF,MAAO0F,KAA7E,iBAqThB,MACA,mBA9SgB,kBACpB,kBAAC,IAAD,CACI8J,UAAW7D,EACX8D,gBAAiB,kBAAM7D,GAAmB,IAC1C/J,MAAO,CAAE6N,OAAQ,EAAGnP,eAAgB,aACpC,kBAACmB,EAAA,EAAD,CAAMG,MAAOjC,GAAO2Q,kBAChB,kBAACnO,EAAA,EAAD,CAAMP,MAAOjC,GAAO4Q,YAApB,iBAEA,kBAAC,GAAD,CAAwBpG,YAAa,SAACqG,GAAD,OArF1B,SAACA,GACpB,IAAM/C,EAAiCrB,GACvCqB,EAAS/J,SAAW8M,EAAE7O,GACtB0K,GAASoB,GACThB,GAAiB+D,EAAEpO,OACnBuJ,GAAmB,GAgFiC8E,CAAeD,UAsS/D,MACA,mBAjSW,kBACf,kBAAC,IAAD,CACIjB,UAAW3D,EACX4D,gBAAiB,kBAAM3D,GAAc,IACrCjK,MAAO,CAAE6N,OAAQ,EAAGnP,eAAgB,aACpC,kBAACmB,EAAA,EAAD,CAAMG,MAAOjC,GAAO2Q,kBAChB,kBAACnO,EAAA,EAAD,CAAMP,MAAOjC,GAAO4Q,YAApB,WACA,kBAAC,GAAD,CAAmBvF,SAAU,SAAC0F,GAAD,OA1GrB,SAAChE,GACjBC,GAAcD,GACd,IAAMe,EAAiCrB,GACvCqB,EAAS9J,MAAQ+I,EACjBL,GAASoB,GACT5B,GAAc,GAqG8B8E,CAAYD,UA0RpD,MACA,mBArRa,kBACjB,kBAAC,IAAD,CACInB,UAAWzD,EACX0D,gBAAiB,kBAAMzD,GAAgB,IACvCnK,MAAO,CAAE6N,OAAQ,EAAGnP,eAAgB,aACpC,kBAACmB,EAAA,EAAD,CAAMG,MAAO,CAAE+D,KAAM,IAEjB,kBAAClE,EAAA,EAAD,CAAMG,MAAOjC,GAAOiR,oBAChB,kBAACzO,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,EAAkB7E,UAAW,WAAjE,gBACA,kBAAC8I,EAAA,EAAD,CACI9H,MAAOjC,GAAOkR,YACdhH,QAAS,WACLkC,GAAgB,KAEpB,kBAAC5J,EAAA,EAAD,CAAMP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,EAAkB7E,UAAW,WAAjE,OAKR,kBAACa,EAAA,EAAD,CAAMG,MAAOjC,GAAOmR,iBAEhB,kBAAC,EAAD,CAAqB7H,WAAY,SAAC/F,GAAD,OArH3B,SAACA,GAEnB,GAAIA,EAAE4F,WAAWC,YAAa,CAC1BgD,GAAgB,GAChBQ,GAAW,CACPa,KAAMlK,EAAE4F,WAAWsE,KACnBC,OAAQnK,EAAE4F,WAAWC,YACrBuE,OAAQpK,EAAE4F,WAAWwE,OACrBC,QAASrK,EAAE4F,WAAWiI,SACtBvD,WAAYtK,EAAE4F,WAAWkI,QACzB3N,SAAUH,EAAE+N,SAASC,YAAY,GACjC5N,UAAWJ,EAAE+N,SAASC,YAAY,KAGtCrE,GAAiB3J,EAAE4F,WAAW1G,OAE9B,IAAMqL,EAAiCrB,GACvCqB,EAAShL,iBAAmB,CACxB2K,KAAMlK,EAAE4F,WAAWsE,KACnBC,OAAQnK,EAAE4F,WAAWC,YACrBuE,OAAQpK,EAAE4F,WAAWwE,OACrBC,QAASrK,EAAE4F,WAAWiI,SACtBvD,WAAYtK,EAAE4F,WAAWkI,QACzB3N,SAAUH,EAAE+N,SAASC,YAAY,GACjC5N,UAAWJ,EAAE+N,SAASC,YAAY,IAEtCzD,EAAShJ,kBAAmB,EAC5B4H,GAASoB,IA0FuCjE,CAActG,WAgQ9D,QAONvD,GAASC,IAAWC,OAAO,CAC7BiO,aAAc,CACVnI,KAAM,EACNjF,QAAS,GACTkF,gBAAiBH,GAErBiK,gBAAiB,CACb9J,gBAAiBH,EACjBE,KAAM,IAEV0I,YAAa,CACT7N,MAAO,GACPC,OAAQ,GACRsJ,YAAa,EACbC,YAAavE,EACb0L,YAAa,SACbnQ,aAAc,EACdN,QAAS,EACTJ,eAAgB,SAChBC,WAAY,UAEhB6N,YAAa,CACT5N,MAAO,GACPC,OAAQ,IACRO,aAAc,EACdqB,YAAa,GAEjBsI,QAAS,CACL/E,gBAAiBH,EACjB/E,QAAS,GACTM,aAAc,EACdH,aAAc,GACdiK,UAAW,IAEf6E,eAAgB,CACZtP,cAAe,MACfC,eAAgB,eAChBC,WAAY,SACZuK,UAAW,IAEfuE,YAAa,CACThP,cAAe,MACfC,eAAgB,eAChBC,WAAY,UAEhBoO,qBAAsB,CAClBtO,cAAe,MACfC,eAAgB,gBAChBC,WAAY,UAEhBwN,aAAc,CACV1N,cAAe,MACfC,eAAgB,aAChBC,WAAY,UAEhB2N,aAAc,CACVlN,aAAc,GACdgJ,YAAavE,EACbsE,YAAa,EACbqH,SAAU,WACVC,KAAM,GACNC,UAAW,EACXC,UAAW,WACX3L,gBAAiBH,EACjBjF,MAAO,GACPgR,OAAQ,GAEZrD,WAAY,CACRzN,QAAS,EACTX,MAAO0F,EACP7E,UAAW,UAEf0O,UAAW,CACPvP,MAAO0F,EACPgM,WAAY,GAEhBC,UAAW,CACP7Q,aAAc,GACdD,UAAW,UAEfyI,MAAO,CACHU,YAAa,EACbC,YAAavE,EACbzE,aAAc,EACdN,QAAS,GACTkJ,eAAgB,IAEpB8E,gBAAiB,CACb9I,gBAAiBH,EACjBuE,YAAavE,EACb/E,QAAS,EACTM,aAAc,EACd4I,eAAgB,GAChBG,YAAa,GAEjBa,aAAc,CACVhF,gBAAiBH,EACjB/E,QAAS,EACTkJ,eAAgB,EAChBnJ,OAAQ,GACRL,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAEpBiQ,WAAY,CACRtQ,SAAU,GACVC,WAAY,QAEhBgG,cAAe,CACXtF,UAAW,SACXb,MAAO0F,EACPxF,SAAU,IAEdqQ,iBAAkB,CACd1K,gBAAiBH,EACjB/E,QAAS,GACTiF,KAAM,IAEVmL,gBAAiB,CACblL,gBAAiBH,EACjB/E,QAAS,GACTiF,KAAM,GAEViL,mBAAoB,CAChBhL,gBAAiBH,EACjBhF,OAAQ,GACRJ,cAAe,MACfE,WAAY,SACZD,eAAgB,gBAChBI,QAAS,IAEbmQ,YAAa,CACT7P,aAAc,GACdR,MAAO,GACPwJ,YAAavE,EACbsE,YAAa,EACbzJ,eAAgB,SAChBC,WAAY,UAEhBuO,iBAAkB,CACdlJ,gBAAiBH,EACjBuE,YAAavE,EACbsE,YAAa,EACb/I,aAAc,EACdN,QAAS,GACTG,aAAc,GACdiK,UAAW,GACXtK,MAAO,IAEXqO,gBAAiB,CACbjJ,gBAAiBH,EACjBzE,aAAc,EACdN,QAAS,GACTG,aAAc,GACdiK,UAAW,GACXtK,MAAO,IAEXuO,aAAc,CACVhP,MAAO0F,EACP7E,UAAW,UAEfoO,cAAe,CACXjP,MAAO0F,EACP7E,UAAW,Y,SCrjBbjB,GAASC,IAAWC,OAAO,CAC7B6F,UAAW,CACPC,KAAM,EACNC,gBAAiB,QAErBC,oBAAqB,CACjBF,KAAM,EACNC,gBAAiB,OACjBrF,WAAY,SACZG,QAAS,IAEbwF,cAAe,CACXtF,UAAW,SACXb,MAAO,UACPE,SAAU,IAEd0R,WAAY,CACRjR,QAAS,GACTkR,WAAY,GACZjM,KAAM,GACNvF,QAAS,OACTC,cAAe,MACfE,WAAY,SACZqF,gBAAiBH,EACjB6L,UAAW,GAEfO,YAAa,CACT7H,YAAavE,EACbsE,YAAa,EACb/I,aAAc,GACdP,OAAQ,GACRD,MAAO,IACPiR,WAAY,GAGZ1R,MAAO0F,EACPwJ,kBAAmB,IAEvBlO,WAAY,CACRP,MAAO,IACPC,OAAQ,KAEZN,mBAAoB,CAChBC,QAAS,OACTC,cAAe,SACfK,QAAS,IAEboR,mBAAoB,CAChB/R,MAAO0F,EACP7E,UAAW,SACXX,SAAU,GACVC,WAAY,UAIL6R,GAlKyC,SAAC,GAAoD,IAAlDzG,EAAiD,EAAjDA,WAEvD,GAFwG,EAArCC,MAE/BnF,oBAAS,IAA7C,WAAOY,EAAP,KAAmBC,EAAnB,KAEA,EAAgCb,mBAAS,IAAzC,WAEA,GAFA,UAEoCA,mBAAiC,KAArE,WAAOkE,EAAP,KAAmBC,EAAnB,KACAnD,qBAAU,YAEU,mBAAAlE,EAAAC,OAAA,2EAAAD,EAAA,MAIW+G,MAJX,OAIF9I,EAJE,OAKRoJ,EAAcpJ,GAETA,GACD8F,GAAc,GAEC,GAAf9F,EAAK1B,QACLoI,YAAW,WAAcZ,GAAc,KAAU,KAX7C,gDAeRL,QAAQC,IAAI,QAAS,KAAMiB,SAC3Bb,GAAc,GAhBN,gEAoBhBc,KAED,IA6BH,OACI,kBAACtG,EAAA,EAAD,CAAMG,MAAOjC,GAAO+F,WAChB,kBAACjE,EAAA,EAAD,CAAMG,MAAOjC,GAAOgS,YAChB,kBAACrP,EAAA,EAAD,CAAUC,KAAK,SAASC,KAAM,GAAIzC,MAAO0F,IACzC,kBAAC2D,EAAA,EAAD,CAAWxH,MAAOjC,GAAOkS,YACrBG,gBAAgB,cAChBC,QAAS,kBAAM3G,EAAW4D,SAAS,mBAAoB,CACnDgD,gBAAY1K,EACZ2K,mBAAe3K,KAEnBiC,YAAY,uBAGpB,kBAAChI,EAAA,EAAD,CAAMG,MAAOjC,GAAOkG,qBAEdyE,IAAwB,MAAVA,OAAA,EAAAA,EAAY7K,QAAS,EACjC,kBAAC6B,EAAA,EAAD,CACIH,KAAMmJ,EACN/I,WAvC4C,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC5D,kBAAC4Q,GAAA,EAAD,CAAoB1Q,IAAKF,EAAKG,GAC1BC,MAAOjC,GAAOQ,mBACd0J,QAAS,kBAAMyB,EAAW4D,SAAS,mBAAoB,CACnDgD,WAAY1Q,EAAKG,GACjBwQ,cAAe3Q,EAAKY,UAIxB,kBAACX,EAAA,EAAD,KACMD,EAAKqJ,UAEH,kBAAC9I,EAAA,EAAD,CAAOH,MAAOjC,GAAOoB,WAAYiB,OAAQ,CAAEC,IAAKT,EAAKqJ,aAErD,kBAAC9I,EAAA,EAAD,CAAOH,MAAOjC,GAAOoB,WAAYiB,OAAQE,EAAQ,OAErD,kBAACC,EAAA,EAAD,CAAMP,MAAOjC,GAAOmS,oBAAqBtQ,EAAKY,MAA9C,QAwBQQ,aAAc,SAACpB,GAAD,OAAUA,EAAKG,GAAGkB,YAChCC,WAAY,EACZC,8BAA8B,IAGlC,kBAACtB,EAAA,EAAD,CAAMG,MAAO,CAAEtB,eAAgB,SAAUqF,KAAM,KAC1CqB,EACG,kBAACvF,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,WAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,oEAGA,kBAAC/D,EAAA,EAAD,CAAMP,MAAOjC,GAAOuG,eAApB,wBAKJ,kBAACkC,EAAA,EAAD,CAAmB5F,KAAK,QAAQzC,MAAM,gB,6BC5GrD0F,GACH,mBADGA,GAEH,UAFGA,GAGD,U,SCsGN7D,GAAQhC,IAAWC,OAAO,CAC9BwS,OAAQ,CACNrR,aAAc,EACd4E,gBAAiBH,GACjBE,KAAM,EACNrF,eAAgB,SAChBC,WAAY,SACZ+R,gBAAiB,GACjB7C,OAAQ,MAIG8C,GA7GqB,WAClC,MAA4BnM,mBAAS,KAArC,WAAOoM,EAAP,KAAeC,EAAf,KACMnH,EAAaoH,2BACbC,EAAiBC,cAAY,SAACjP,GAAD,OAAsBA,EAAMuJ,QAM/D,OACE,kBAAC,KAAD,CACEtL,MAAO,CACLlB,QAAS,GACTG,aAAc,KAGhB,kBAAC,KAAD,CACEe,MAAO,CACLnB,OAAQ,GACRsJ,YAAa,EACbC,YAAa,QACbhJ,aAAc,GAEhBsI,aAlBkB,SAACiF,GACvBkE,EAAUlE,IAkBNA,MAAOiE,EAAO3P,WACd4G,YAAY,YAEd,kBAAC2I,GAAA,EAAD,CACEvI,QAAS,WACPyB,EAAW4D,SAAS,GAAI,CACtBsD,OAAQK,SAASL,EAAQ,OAG7B5Q,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,eAEF,kBAACqS,GAAA,EAAD,CACEvI,QAAS,WACPyB,EAAW4D,SAAS,qBAAsB,CACxCsD,OAAQK,SAASL,EAAQ,OAM7B5Q,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,aAEF,kBAACqS,GAAA,EAAD,CACEvI,QAAS,WAIPyB,EAAW4D,SAAS,GAAI,CACtBsD,OAAQG,EAAQhR,MAGpBC,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,iBAEF,kBAACqS,GAAA,EAAD,CACEvI,QAAS,WACPyB,EAAW4D,SAAS,GAAI,CACtBsD,OAAQK,SAASL,EAAQ,OAG7B5Q,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,gBAEF,kBAACqS,GAAA,EAAD,CACEvI,QAAS,WACPyB,EAAW4D,SAAS,GAAI,CACtBsD,OAAQK,SAASL,EAAQ,OAG7B5Q,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,eAEF,kBAACqS,GAAA,EAAD,CACEvI,QAAS,WACPyB,EAAW4D,SAAS,GAAI,CACtBsD,OAAQK,SAASL,EAAQ,OAG7B5Q,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,kBC9FD,SAAS+S,GAAQ5F,GAWpB,OATCtG,QAAQC,IAAIqG,EAAKZ,SAClB1F,QAAQC,IAAI,WACZD,QAAQC,IAAIqG,GAOL6F,GAJqB,CACxBC,KCPgB,WDQhB9F,KAAMA,IAoCP,SAAS6F,GAAoBE,GAGhC,OAFArM,QAAQC,IAAI,gBAEL,SAACqM,GACJrL,YAAW,WACPqL,EAASD,KACX,MEnDV,IAAME,GAAQjR,EAAQ,KAStBA,EAAQ,KAAUkR,SAElB,IAAMtR,GAAM,yBAyFZ,ICrGKuR,GAMAC,GD0KQC,GAAc,CAAEC,cArJ7B,SACErG,EACAsG,EACAP,GAHF,eAAAhQ,EAAAC,OAAA,uDAMEyD,QAAQC,IAAR,wCAAoDsG,GACpDvG,QAAQC,IAAR,4CAAwD4M,GACxD7M,QAAQC,IAAR,uCAAmD/E,GAAM,cAR3D,WAAAoB,EAAA,MAU6BiQ,GAAM,CAC/B5N,OAAQ,OACRzD,IAAKA,GAAM,aACXX,KAAM,CACJgM,KAAMA,EACNsG,SAAUA,KAGXC,MAAK,SAACC,GAIL,GAHA/M,QAAQC,IAAI,oBACZD,QAAQC,IAAI8M,EAASxS,MAEE,KAAnBwS,EAAS1L,OAAe,CAC1BrB,QAAQC,IAAI,uBAEZD,QAAQC,IAAI,gCAEZ,IAAMyF,EAAoB,CACxBgB,OAAQqG,EAASxS,KAAKmL,QAAQgB,OAC9BF,KAAMuG,EAASxS,KAAKmL,QAAQc,KAC5BG,QAASoG,EAASxS,KAAKmL,QAAQiB,QAC/BC,WAAYmG,EAASxS,KAAKmL,QAAQkB,WAClCH,OAAQsG,EAASxS,KAAKmL,QAAQe,OAC9BhK,SAAUsQ,EAASxS,KAAKmL,QAAQjJ,SAChCC,UAAWqQ,EAASxS,KAAKmL,QAAQhJ,WAE7B4J,EAAc,CAClBvL,GAAIgS,EAASxS,KAAK+L,KAAKvL,GACvBiS,WAAYD,EAASxS,KAAK+L,KAAK0G,WAC/BC,UAAWF,EAASxS,KAAK+L,KAAK2G,UAC9BC,UAAWH,EAASxS,KAAK+L,KAAK4G,UAC9BC,MAAOJ,EAASxS,KAAK+L,KAAK6G,MAC1BC,WAAYL,EAASxS,KAAK+L,KAAK8G,WAC/BC,OAAQN,EAASxS,KAAK+L,KAAK+G,OAC3B9G,KAAMwG,EAASxS,KAAK+L,KAAKC,KACzB+G,KAAMP,EAASxS,KAAK+L,KAAKgH,KACzBC,aAAcR,EAASxS,KAAK+L,KAAKiH,aACjC7H,QAASA,EACT8H,YAAaT,EAASxS,KAAKiT,YAC3BC,aAAcV,EAASxS,KAAKkT,cAG9BnB,EAASJ,GAAQ5F,IAEjBtG,QAAQC,IAAI,iBAAkByN,GAAMtJ,WAAWkC,MAC/CtG,QAAQC,MAGRD,QAAQC,IAAI,6BAGf0N,OAAM,SAACC,GACN5N,QAAQC,IAAI2N,OA9DlB,cAUQC,EAVR,OAgEI7N,QAAQC,IAAI,YAEhBD,QAAQC,IAAI4N,GAlEZ,kBAoESA,GApET,6DAqJ4CC,iBA3EnB,SACvBC,EACAC,EACAb,EACAE,EACA9G,EACAsG,EACAnH,GAPuB,eAAApJ,EAAAC,OAAA,uDASvByD,QAAQC,IAAI/E,GAAM,iBATK,WAAAoB,EAAA,MAUOiQ,GAAM,CAClC5N,OAAQ,OACRzD,IAAKA,GAAM,gBACXX,KAAM,CACJyS,WAAYe,EACZd,UAAWe,EACXb,MAAOA,EACP5G,KAAMA,EACNsG,SAAUA,EACVxL,OAAQ,SACRgM,OAAQA,EACR3G,OAAQhB,EAAQgB,OAChBF,KAAMd,EAAQc,KACdG,QAASjB,EAAQiB,QACjBC,WAAYlB,EAAQkB,WACpBH,OAAQf,EAAQe,OAChBhK,SAAU,EACVC,UAAW,KAGZoQ,MAAK,SAACC,GACkB,KAAnBA,EAAS1L,SACX4M,OAAOC,aAAanO,QAAQ,aAAcgN,EAASxS,MACnDyF,QAAQC,IAAI8M,EAASxS,MACrByF,QAAQC,IAAIyF,EAAQc,UAGvBmH,OAAM,SAACC,GACN5N,QAAQC,IAAI,eACZD,QAAQC,IAAI2N,OAvCO,cAUjBO,EAViB,OAyCrBnO,QAAQC,IAAIkO,GAzCS,kBA2CdA,GA3Cc,6DA2EqCC,eA5BvC,WACC7B,GAAM,CAC1B5N,OAAQ,OACRzD,IAAKA,GAAM,gBAEV4R,MAAK,SAACuB,GACLH,aAAaI,WAAW,eACxBtO,QAAQC,IAAIoO,MAEbV,OAAM,SAACC,GACN5N,QAAQC,IAAI,iBE5ILsO,GAAyB,SAAC,GAAwB,EAAtB7J,WAAuB,IAG9D,EAA0BlF,mBAAS,IAAnC,WAAOgP,EAAP,KAAcC,EAAd,KACA,EAAgCjP,mBAAS,IAAzC,WAAOqN,EAAP,KAAiB6B,EAAjB,KAGMC,GADiB3C,cAAY,SAACjP,GAAD,OAAsBA,EAAMuJ,QACxCwF,4BAEjBQ,EAA0BsC,eAiBhC,OADA5O,QAAQC,IAAI,QAEV,kBAACgH,EAAA,EAAD,CACEjM,MAAO,CAAE6T,iBAAkB,GAAI3K,UAAW,GAAIjK,aAAc,KAK5D,kBAACY,EAAA,EAAD,KAoBE,kBAACA,EAAA,EAAD,CAAMG,MAAOjC,GAAO+V,cAClB,kBAACvT,EAAA,EAAD,CAAMP,MAAOjC,GAAOgW,YAApB,SACA,kBAACvM,EAAA,EAAD,CACEwM,OAAQ,QACRhU,MAAOjC,GAAO0J,MACdC,aAAc,SAAC8L,GAAD,OAAWC,EAASD,IAClC3L,YAAY,WAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAOjC,GAAO+V,cAClB,kBAACvT,EAAA,EAAD,CAAMP,MAAOjC,GAAOgW,YAApB,gBACA,kBAACvM,EAAA,EAAD,CACEwM,OAAQ,WACRhU,MAAOjC,GAAO0J,MACdC,aAAc,SAACmK,GAAD,OAAc6B,EAAY7B,IACxCoC,iBAAiB,EACjBpM,YAAY,kBAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAO,CAAEkJ,UAAW,KACxB,kBAACpB,EAAA,EAAD,CAAkBG,QA9DX,WACb0J,GAAYC,cAAc4B,EAAO3B,EAAUP,GAE3CqC,EAAerG,SAAS,kBA2DiBtN,MAAOjC,GAAOmW,UAC/C,kBAAC3T,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,QAASG,WAAY,SAA3C,UAEF,kBAACwJ,EAAA,EAAD,CAAkB9H,MAAOjC,GAAOmW,UAC9B,kBAAC3T,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,QAASG,WAAY,SAA3C,wBAIF,kBAACwJ,EAAA,EAAD,CACE9H,MAAOjC,GAAOmW,SACdjM,QAAS,WACP0L,EAAerG,SAAS,kBAG1B,kBAAC/M,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,QAASG,WAAY,SAA3C,wBAmBNP,GAASC,IAAWC,OAAO,CAC/BkW,KAAM,CACJvV,MAAO,MACPC,OAAQ,OAEVuV,UAAW,CACTpQ,gBAAiB,UACjB5E,aAAc,GAEdP,OAAQ,GACRI,aAAc,GACdN,WAAY,UAGd6I,UAAW,CACT5I,MAAO,OACPC,OAAQ,GACRC,QAAS,IAEXuV,cAAe,CACbxV,OAAQ,GACRI,aAAc,IAEhBiV,SAAU,CACR9U,aAAc,GACdN,QAAS,GACTkJ,eAAgB,GAChBrJ,WAAY,SACZD,eAAgB,SAChBsF,gBAAiB,WAEnB8P,aAAc,CACZ9L,eAAgB,IAElB+L,WAAY,CACV9U,aAAc,EACdX,WAAY,OACZH,MAAO0F,IAET4D,MAAO,CACLU,YAAa,EACbC,YAAavE,GACbzE,aAAc,EACdN,QAAS,MC5GEwV,IANDtW,IAAWC,OAAO,CAC9BwS,OAAQ,CACNzI,eAAgB,MAnDY,WAC9B,MAA4BxD,mBAAsB,kBAAC3E,EAAA,EAAD,OAAlD,WAAO0U,EAAP,KAAeC,EAAf,KACM9K,EAAaoH,2BACbC,EAAiBC,cAAY,SAACjP,GAAD,OAAsBA,EAAMuJ,QAE/D9F,qBAAU,WACRR,QAAQC,IAAI,KACZwP,MACC,IAEHjP,qBAAU,WACRR,QAAQC,IAAI,KACZwP,MACC,CAAC1D,IAEJvL,qBAAU,WAGR,OAFAR,QAAQC,IAAI,KACQyE,EAAWgL,YAAY,SAAS,iBAEnD,CAAChL,IAEJ1E,QAAQC,IAAI,OAAS8L,EAAQyB,aAE7B,IAAMiC,EAAe,WACnB,IAAM1N,EACJ,kBAAClH,EAAA,EAAD,KAeGkR,EAAQyB,YAAc,kBAAC,GAAD,MAAwB,kBAAC,GAAD,OAGnDgC,EAAUzN,IAGZ,OAAO,kBAACkF,EAAA,EAAD,KAAasI,K,kBCiDhBvU,GAAQhC,IAAWC,OAAO,CAC9B0W,YAAa,CACX5Q,KAAM,EACNjF,QAAS,GACTG,aAAc,IAEhBW,KAAM,CACJuI,YAAa,EACbC,YAAavE,GACbzE,aAAc,EACdN,QAAS,GACTkJ,eAAgB,GAChBhE,gBAAiBH,IAEnB+Q,aAAc,CACZ7Q,KAAM,EACNtF,cAAe,MACfC,eAAgB,UAElBmW,YAAa,CACX9Q,KAAM,EACNrF,eAAgB,iBAElBoW,MAAO,CACLlW,MAAO,IACPC,OAAQ,KAEVlB,KAAM,CACJU,SAAU,GACVF,MAAO0F,MAIIkR,GAvHsB,SAAC,GAAoB,IAAlBpL,EAAiB,EAAjBA,MACtC,EAAoCnF,mBAA+B,IAAnE,WAAOwQ,EAAP,KAAmBC,EAAnB,KACA,EAA8BzQ,oBAAS,GAAvC,WAAO0Q,EAAP,KAAgBC,EAAhB,KACMzL,EAAaoH,2BAEnBtL,qBAAU,WAIR,OAHoBkE,EAAWgL,YAAY,SAAS,WAClDU,SAGD,CAAC1L,IAEJ,IAAM0L,EAAgB,0BAAA9T,EAAAC,OAAA,uDACZqP,EAAWjH,EAAMtI,OAAjBuP,OADY,WAAAtP,EAAA,MAEdc,MAAM,UAAUoP,GAAO6D,GAAlB,IAAwB7D,GAAO8D,KAA/B,6BAAgE1E,GACxEkB,MAAK,SAACyD,GAAD,OAASA,EAAIjT,UAClBwP,MAAK,SAAC/K,GACLkO,EAAclO,GACdoO,GAAW,OANK,6DAuDtB,OACE,kBAACtV,EAAA,EAAD,CAAMG,MAAOA,GAAM2U,aAChBK,GAAcA,EAAWnX,OAAS,IAAMqX,EACvC,kBAACxV,EAAA,EAAD,CACEH,KAAMyV,EACNrV,WA5C8C,SAAC,GAAD,QAAGC,EAAH,EAAGA,KAAH,OACpD,kBAACkI,EAAA,EAAD,CAAkB9H,MAAOA,GAAMJ,KAAMqI,QAAS,kBAP5BuC,EAO6C5K,OAN/D8J,EAAW4D,SAAS,qBAAsB,CACxCkI,aAAchL,IAFC,IAACA,IAQhB,kBAAC3K,EAAA,EAAD,CAAMG,MAAO,CAAE+D,KAAM,EAAGtF,cAAe,QACrC,kBAACoB,EAAA,EAAD,CAAMG,MAAOA,GAAM4U,cAChBhV,EAAKK,SAASpC,OAAS,EACtB,kBAACsC,EAAA,EAAD,CACEH,MAAOA,GAAM8U,MACb1U,OAAQ,CACNC,IAAI,UAAWmR,GAAO6D,GAAnB,IAAyB7D,GAAO8D,KAAhC,aAAiD1V,EAAKK,SAAS,GAAGC,OAIzE,kBAACC,EAAA,EAAD,CACEH,MAAOA,GAAM8U,MACb1U,OAAQE,EAAQ,QAItB,kBAACT,EAAA,EAAD,CAAMG,MAAOA,GAAM6U,aACjB,kBAACtU,EAAA,EAAD,CACEP,MAAO,CAAE3B,SAAU,GAAIF,MAAO0F,GAAavF,WAAY,SAEtDsB,EAAKY,MAAMiV,eAEd,kBAAClV,EAAA,EAAD,CAAMP,MAAOA,GAAMrC,MAChBX,EAA2B4C,EAAKmB,aAElCnB,EAAK8V,kBAAmB,SAAA9V,EAAK8V,sBAAL,IAAsB7X,QAAS,EACtD,kBAAC0C,EAAA,EAAD,CAAMP,MAAOA,GAAMrC,OAChB,SAAAiC,EAAK8V,sBAAL,IAAsB7X,QAAS,sBAGlC,kBAAC0C,EAAA,EAAD,CAAMP,MAAOA,GAAMrC,MAAnB,+BAaFqD,aAAc,SAAC2U,EAAWC,GAAZ,OAAsBA,EAAM3U,cAG5C,kBAACpB,EAAA,EAAD,CACEG,MAAO,CAAE+D,KAAM,EAAGrF,eAAgB,SAAUC,WAAY,WAExD,kBAAC6H,EAAA,EAAD,CAAmB5F,KAAK,QAAQzC,MAAM,e,0DH5F3CsT,K,4BAAAA,E,4BAAAA,E,4BAAAA,Q,cAMAC,K,uBAAAA,E,sBAAAA,E,0BAAAA,E,2BAAAA,Q,KAOE,IIQFA,GJRQmE,GAAY,WAqCvB,MApCkC,CAChC9V,GAAI,EACJS,MAAO,GACPiC,YAAa,GACbE,cAAc,EACdD,eAAe,EACf7B,iBAAkB,CAChB4K,OAAQ,EACRC,OAAQ,GACRF,KAAM,GACNI,WAAY,GACZlK,UAAW,EACXD,SAAU,EACVX,SAAU,EACV6K,QAAS,IAEXtF,OAAQoL,GAAOqE,QACf/T,MAAO2P,GAAMqE,UAMbjT,MAAO,CACL/C,GAAI,EACJiW,UAAW,GACXzK,KAAM,GACN+G,KAAM,EACNH,MAAO,IAETpR,WAAY,GACZd,SAAU,GACVyV,gBAAiB,GACjB7S,kBAAkB,EAClBoT,YAAa,I,o1BI3BZvE,K,uBAAAA,E,sBAAAA,E,0BAAAA,E,2BAAAA,Q,KAOL,IAoqBM1R,GAAQhC,IAAWC,OAAO,CAC9BiY,YAAa,CACXpX,QAAS,GAGXqX,KAAM,CACJpS,KAAM,EACNtF,cAAe,MACfC,eAAgB,YAElBkW,aAAc,CACZ7Q,KAAM,EACNtF,cAAe,MACfC,eAAgB,UAElBoW,MAAO,CACL/Q,KAAM,EACNrF,eAAgB,SAChBE,MAAO,IACPC,OAAQ,IACRgV,iBAAkB,GAClB1L,YAAa,EACbC,YAAavE,GACbzE,aAAc,GAEhB0U,aAAc,CACZ9L,eAAgB,IAElB+L,WAAY,CACV9U,aAAc,EACdX,WAAY,OACZH,MAAO0F,IAET4D,MAAO,CACLU,YAAa,EACbC,YAAavE,GACbzE,aAAc,EACdN,QAAS,IAEXsX,kBAAmB,CACjBnX,aAAc,EACdX,WAAY,OACZD,SAAU,GACVF,MAAO0F,IAET4M,OAAQ,CACNzI,eAAgB,GAChBlJ,QAAS,GACTM,aAAc,EACd4E,gBAAiBH,GACjBE,KAAM,EACNrF,eAAgB,SAChBC,WAAY,UAEd0X,aAAc,CACZhY,SAAU,GACVC,WAAY,UAIDgY,GAhuBqB,SAAC,GAAoB,IAAlB3M,EAAiB,EAAjBA,MACrC,EAA0BnF,mBAA6BqR,MAAvD,WAAOrL,EAAP,KAAcC,EAAd,KACA,EAA4BjG,mBAAsB,kBAAC3E,EAAA,EAAD,OAAlD,WAAO0U,EAAP,KAAeC,EAAf,KACM9L,EJiDqC,CACzC,CAAE3I,GAAI,EAAGS,MAAO,gBAChB,CAAET,GAAI,EAAGS,MAAO,iBAChB,CAAET,GAAI,EAAGS,MAAO,OAChB,CAAET,GAAI,EAAGS,MAAO,kBAChB,CAAET,GAAI,EAAGS,MAAO,WAChB,CAAET,GAAI,EAAGS,MAAO,UAChB,CAAET,GAAI,EAAGS,MAAO,WAChB,CAAET,GAAI,EAAGS,MAAO,8BAChB,CAAET,GAAI,EAAGS,MAAO,qBAChB,CAAET,GAAI,GAAIS,MAAO,mBACjB,CAAET,GAAI,GAAIS,MAAO,UI3DbkJ,EAAaoH,2BACX0E,EAAiB7L,EAAMtI,OAAvBmU,aAERhQ,qBAAU,WACRR,QAAQC,IAAI,cACZwF,EAASvH,KAAKyC,MAAMzC,KAAKC,UAAUqS,KACnC9L,EAAW6M,WAAW,CAAElM,MAAOmL,EAAahV,UAC3C,IAEHgF,qBAAU,WACRiP,GAAa,KACZ,CAACjK,IAEJhF,qBAAU,WAER,OADoBkE,EAAWgL,YAAY,SAAS,iBAEnD,CAAChL,IAEJ,IAAM8M,EAAc,0BAAAlV,EAAAC,OAAA,mDAClByD,QAAQC,IAAIuF,EAAMhK,OAClBwE,QAAQC,IAAIuQ,EAAahV,OAEvBgK,EAAMhK,QAAUgV,EAAahV,OAC7BgK,EAAM/H,cAAgB+S,EAAa/S,aACnC+H,EAAMzI,QAAUyT,EAAazT,OAC7ByI,EAAMnE,SAAWmP,EAAanP,QAC9BmE,EAAM3H,mBAAqB2S,EAAa3S,kBACxC2H,EAAM3J,iBAAiB4K,SAAW+J,EAAa3U,iBAAiB4K,QAChEjB,EAAM3J,iBAAiB6K,SAAW8J,EAAa3U,iBAAiB6K,QAChElB,EAAM3J,iBAAiB+K,aACrB4J,EAAa3U,iBAAiB+K,YAChCpB,EAAM3J,iBAAiB8K,UACrB6J,EAAa3U,iBAAiB8K,SAChCnB,EAAM3J,iBAAiB2K,OAASgK,EAAa3U,iBAAiB2K,MAC9DhB,EAAM7H,eAAiB6S,EAAa7S,cACpC6H,EAAM9H,gBAAkB8S,EAAa9S,cAjBrB,uBAmBhBsC,QAAQC,IAAI,UAnBI,WAAA3D,EAAA,MAoBVc,MAAM,UACAoP,GAAO6D,GADR,IACc7D,GAAO8D,KADrB,kBAC2C9K,EAAMzK,GAC1D,CACE4D,OAAQ,MACR8S,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElB9S,KAAMV,KAAKC,UAAUqH,MA5BT,OAgCZA,EAAM3H,mBACFgJ,EAA+BrB,GACxB1H,MAAM4H,UACjBmB,EAAShL,iBAAmBgL,EAAS/I,MAAM4H,SAnC/B,OAuClBhB,EAAW4D,SAAS,qBAAsB,CACxCkI,aAAchL,IAxCE,6DA4CdmM,EAAgB,SAAChZ,GACrB,IAAMkO,EAA+BrB,EACrCqB,EAASrL,MAAQ7C,EACjB8M,EAASoB,GACT4I,GAAa,IAGTmC,EAAsB,SAACjZ,GAC3B,IAAMkO,EAA+BrB,EACrCqB,EAASpJ,YAAc9E,EACvB8M,EAASoB,GACT4I,GAAa,IAGToC,EAAuB,WAC3B,IAAMhL,EAA+BrB,EACrCqB,EAASnJ,eAAiBmJ,EAASnJ,cACnC+H,EAASoB,GACT4I,GAAa,IAGTqC,EAAsB,WAC1B,IAAMjL,EAA+BrB,EACrCqB,EAASlJ,cAAgBkJ,EAASlJ,aAClC8H,EAASoB,GACT4I,GAAa,IAGTsC,EAAwB,SAACpK,GAC7B,IAAMd,EAA+BrB,EACpCqB,EAAShL,iBAAiB4K,OAASkB,EACpClC,EAASoB,GACT4I,GAAa,IAGTuC,EAAwB,SAACrK,GAC7B,IAAMd,EAA+BrB,EACrCqB,EAAShL,iBAAiB6K,OAASiB,EACnClC,EAASoB,GACT4I,GAAa,IAGTwC,EAAyB,SAACtK,GAC9B,IAAMd,EAA+BrB,EACrCqB,EAAShL,iBAAiB8K,QAAUgB,EACpClC,EAASoB,GACT4I,GAAa,IAGTyC,EAAsB,SAACvK,GAC3B,IAAMd,EAA+BrB,EACrCqB,EAAShL,iBAAiB2K,KAAOmB,EACjClC,EAASoB,GACT4I,GAAa,IAGT0C,EAA2B,SAACxK,GAChC,IAAMd,EAA+BrB,EACrCqB,EAAShL,iBAAiB+K,WAAae,EACvClC,EAASoB,GACT4I,GAAa,IAGT2C,EAAyB,WAC7B,IAAMvL,EAA+BrB,EACrCqB,EAAShJ,kBAAoBgJ,EAAShJ,iBACtC4H,EAASoB,GACT4I,GAAa,IAoBT4C,EAA2B,WAQ/B,IAPA,IAAMC,EAAkB,CACtB5F,GAAMqE,UACNrE,GAAM6F,QACN7F,GAAM8F,UACN9F,GAAM+F,WAEJ1Q,EAAwB,GAPwB,WAQzChF,GACTgF,EAAO2Q,KACL,kBAAC7X,EAAA,EAAD,CACEC,IAAK,0BAA4BiC,EACjC/B,MAAO,CAAE+D,KAAM,EAAGtF,cAAe,MAAOE,WAAY,WAEpD,kBAACgZ,GAAA,EAAD,CACE7X,IAAK,qBAAuBiC,EAC5B4K,MAAO5K,EACP5D,MAAO0F,GACPwC,OAAQmE,EAAMzI,QAAUA,EAAQ,UAAY,YAC5CkG,QAAS,kBA1BG,SAAC2P,GACrB,IAAM/L,EAA+BrB,EACrCqB,EAAS9J,MAAQ6V,EACjBnN,EAASoB,GACT4I,GAAa,GAsBUoD,CAAc9V,MAE/B,kBAACxB,EAAA,EAAD,CAAMP,MAAO,CAAE6P,WAAY,KAAO9N,MAbxC,MAAoBuV,EAApB,eAA4B,GAAZ,MAiBhB,OAAOvQ,GAUH+Q,EAAgC,WAEpC,IADA,IACA,EADM/Q,EAAwB,GAD2B,WAE9CjF,GACT,IAAM8T,EAAQ9T,EAAS/B,GAAK,EAC5BgH,EAAO2Q,KACL,kBAAC7X,EAAA,EAAD,CACEC,IAAK,6BAA+BgC,EAAStB,MAC7CR,MAAO,CAAE+D,KAAM,EAAGtF,cAAe,MAAOE,WAAY,WAEpD,kBAACgZ,GAAA,EAAD,CACE7X,IAAK,wBAA0BgC,EAAStB,MACxCmM,MAAO7K,EAAStB,MAChBrC,MAAO0F,GACPwC,OAAQmE,EAAMyL,cAAgBnU,EAAS/B,GAAK,UAAY,YACxDkI,QAAS,kBArBM,SAAC8P,GACxB,IAAMlM,EAA+BrB,EACrCqB,EAASoK,YAAcvN,EAAWqP,GAAiBhY,GACnD0K,EAASoB,GACT4I,GAAa,GAiBUuD,CAAiBpC,MAElC,kBAACrV,EAAA,EAAD,CAAMP,MAAO,CAAE6P,WAAY,KAAO/N,EAAStB,UAdjD,KAAuBkI,KAAvB,aAAmC,YAkBnC,OAAO3B,GAGHkR,EAAkB,WACtB,IAAIlR,EAAwB,GACtB9G,EAAmCuK,EAAMvK,SAE/C,GADA+E,QAAQC,IAAIhF,GACRA,EAASpC,OAAS,EACpB,IADwB,IAAD,WACdiJ,GACPC,EAAO2Q,KACL,kBAAC7X,EAAA,EAAD,CAAMC,IAAK,mBAAqBgH,GAC7B7G,EAAS6G,GACR,kBAAC3G,EAAA,EAAD,CACEL,IAAK,WAAagH,EAClB9G,MAAOA,GAAM8U,MACb1U,OAAQ,CACNC,IAAI,UAAWmR,GAAO6D,GAAnB,IAAyB7D,GAAO8D,KAAhC,aAAiDrV,EAAS6G,GAAG5G,OAIpE,kBAACC,EAAA,EAAD,CACEL,IAAK,WAAagH,EAClB9G,MAAOA,GAAM8U,MACb1U,OAAQE,EAAQ,OAGpB,kBAACT,EAAA,EAAD,CACEC,IAAK,eAAiBgH,EACtB9G,MAAO,CACLkJ,UAAW,GACX1K,QAAS,OACTC,cAAe,MACfC,eAAgB,WAGjBuB,EAAS6G,GACR,kBAACpG,EAAA,EAAD,CACEC,KAAM,QACNC,KAAM,GACNzC,MAAO0F,GACPoE,QAAS,kBAAMiQ,EAAcjY,EAAS6G,GAAG/G,IAAI,MAG/C,kBAACW,EAAA,EAAD,CACEC,KAAM,MACNC,KAAM,GACNzC,MAAO0F,GACPoE,QAAS,kBAAMwM,GAAa,UAvC/B3N,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GA+CX,OACE,kBAACmF,EAAA,EAAD,CACE/D,gCAAgC,EAChCiQ,YAAY,EACZnY,MAAO,CACLxB,QAAS,OACTC,cAAe,QAGhBsI,IAKDqR,EAAuB,4BAAA9W,EAAAC,OAAA,kEAAAD,EAAA,MACF0M,OADE,mBAEZ,YAFY,EACnB3H,OADmB,gBAGzB2F,MAAM,6DAHmB,0CAAA1K,EAAA,MAKN0M,IAAoC,CACrDC,WAAYD,IAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,MATc,SAKrBtH,EALqB,QAWbuH,WACV+J,EAAYtR,GAZW,8DAkBvBuR,EAAc,4BAAAhX,EAAAC,OAAA,kEAAAD,EAAA,MACO0M,OADP,mBAEH,YAFG,EACV3H,OADU,gBAGhB2F,MAAM,6DAHU,0CAAA1K,EAAA,MAKG0M,IAA8B,CAC/CC,WAAYD,IAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,MATK,SAKZtH,EALY,SAYdsR,EAAYtR,GAZE,8DAkBdwR,EAAQ,WACc,kBAAC1Y,EAAA,EAAD,MA8D1B,OA5DE,kBAACA,EAAA,EAAD,CACEG,MAAO,CACLwP,SAAU,WACV5Q,MAAO4Z,KAAWC,IAAI,UAAU7Z,MAAQ,GACxCC,OAAQ2Z,KAAWC,IAAI,UAAU5Z,OAAS,IAC1C4Q,IAAK,EACLiJ,KAAM,EACN9I,OAAQ,IACR5L,gBAAiBH,GACjBsE,YAAa,EACbC,YAAavE,GACbzE,aAAc,EACd2E,KAAM,EACNtF,cAAe,SACfC,eAAgB,eAChBC,WAAY,SACZ+R,gBAAiB,KAGnB,kBAACF,GAAA,EAAD,CACEvI,QAASqQ,EACTtY,MAAO,CACLpB,MAAO,IACP8R,gBAAiB,GACjBtR,aAAc,EACd4E,gBAAiBH,KAGnB,kBAACtD,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,QAASa,UAAW,WAA1C,sBAIF,kBAACwR,GAAA,EAAD,CACEvI,QAASmQ,EACTpY,MAAO,CACLpB,MAAO,IACP8R,gBAAiB,GACjBtR,aAAc,EACd4E,gBAAiBH,KAGnB,kBAACtD,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,QAASa,UAAW,WAA1C,2BAIF,kBAACwR,GAAA,EAAD,CACEvI,QAAS,WACPwM,GAAa,IAEfzU,MAAO,CACLpB,MAAO,IACP8R,gBAAiB,GACjBtR,aAAc,EACd4E,gBAAiBH,KAGnB,kBAACtD,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,QAASa,UAAW,WAA1C,aAOFqZ,EAAc,SAAOtR,GAAP,mBAAAzF,EAAAC,OAAA,oDACZhC,EAAiB,IAAIyD,UACtBC,OAAO,KAAMuH,EAAMzK,GAAGkB,YACP,QAAhB0X,KAASC,GAHK,mCAAAtX,EAAA,MAIKc,MAAM2E,EAAO1G,MAJlB,cAIVwY,EAJU,kBAAAvX,EAAA,MAKGuX,EAAOpV,QALV,OAKVA,EALU,OAMhBlE,EAAK0D,OAAO,QAASQ,GANL,yBAQXsD,EAAOuH,WAA6B,UAAhBvH,EAAOqK,MAAoBrK,EAAO1G,MAC1C0G,EAAO1G,IAAIwG,MAAM,KAAKE,EAAO1G,IAAIwG,MAAM,KAAKhJ,OAAS,GAOpE0B,EAAK0D,OAAO,QAAS8D,IAhBP,2BAAAzF,EAAA,MAqBZc,MAAM,UAAUoP,GAAO6D,GAAlB,IAAwB7D,GAAO8D,KAA/B,YAAgD,CACzD3R,OAAQ,OACRC,KAAMrE,IAELuS,MAAK,SAACyD,GAAD,OAASvQ,QAAQC,IAAIsQ,MAC1B5C,OAAM,SAACxQ,GAAD,OAAO6C,QAAQC,IAAI9C,OA1BV,2BAAAb,EAAA,MA6BZc,MAAM,UAAUoP,GAAO6D,GAAlB,IAAwB7D,GAAO8D,KAA/B,aAAgD9K,EAAMzK,GAAM,CACrE4D,OAAQ,QAEPmO,MAAK,SAACyD,GAAD,OAASA,EAAIjT,UAClBwP,MAAK,SAAC/K,GACL/B,QAAQC,IAAI8B,GACZ,IAAM8E,EAA+BrB,EACrCqB,EAAS5L,SAAW8G,EACpB0D,EAASoB,MAEV8G,OAAM,SAACxQ,GAAD,OAAO6C,QAAQC,IAAI9C,OAvCV,QAwClBsS,GAAa,GAxCK,8DA2CdyD,EAAgB,SAACnY,EAAY+Y,GACjC9T,QAAQC,IAAIlF,GACZqC,MAAM,UAAUoP,GAAO6D,GAAlB,IAAwB7D,GAAO8D,KAA/B,oBAAuDvV,EAAM,CAChE4D,OAAQ,SACR8S,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAEjB5E,MAAK,SAACC,GAAD,OAAcA,EAASzP,UAI/B,IAHA,IAGA,EAHMuJ,EAA+BrB,EAEjCuO,EAAsC,GAC1C,KAF4ClN,EAAS5L,YAErD,aAAsC,CAAC,IAA5B+Y,EAA2B,QAChCA,EAAWjZ,KAAOA,GACpBgZ,EAAYrB,KAAKsB,GAGrBnN,EAAS5L,SAAW8Y,EACpBtO,EAASoB,GACLiN,GACFrE,GAAa,IAIXA,EAAe,SAACwE,GAA2B,IAAD,oBAC9CjU,QAAQC,IAAI,gBACZ,IAAM8B,EACJ,kBAAClH,EAAA,EAAD,CAAMG,MAAOA,GAAMkW,aAChB+C,GAAgBV,IACjB,kBAAC1Y,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAM+T,YAAnB,UACCkE,KAEH,kBAACpY,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAM+T,YAAnB,SACA,kBAACvM,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAciP,EACdhK,MAAOnC,EAAMhK,MACbqH,YAAY,WAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAM+T,YAAnB,eACA,kBAACvM,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAckP,EACdjK,MAAOnC,EAAM/H,YACboF,YAAY,cACZ+E,WAAS,KAGb,kBAAC/M,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAM+T,YAAnB,QACCsD,KAEH,kBAACxX,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAM+T,YAAnB,aACC+D,KAEH,kBAACjY,EAAA,EAAD,CACEG,MAAO,CACL+D,KAAM,EACNtF,cAAe,MACfE,WAAY,SACZD,eAAgB,kBAGlB,kBAAC6B,EAAA,EAAD,CAAMP,MAAO,CAAE1B,WAAY,OAAQH,MAAO0F,KAA1C,0BAGA,kBAACqV,GAAA,EAAD,CACE/a,MAAO0F,GACPwC,OAAQmE,EAAM9H,cAAgB,UAAY,YAC1CuF,QAAS,kBAAM4O,QAGnB,kBAAChX,EAAA,EAAD,CACEG,MAAO,CACLf,aAAc,GACd8E,KAAM,EACNtF,cAAe,MACfE,WAAY,SACZD,eAAgB,kBAGlB,kBAAC6B,EAAA,EAAD,CAAMP,MAAO,CAAE1B,WAAY,OAAQH,MAAO0F,KAA1C,sBAGA,kBAACqV,GAAA,EAAD,CACE/a,MAAO0F,GACPwC,OAAQmE,EAAM7H,aAAe,UAAY,YACzCsF,QAAS,kBAAM6O,QAGnB,kBAACjX,EAAA,EAAD,CAAMG,MAAO,CAAEkJ,UAAW,IACxB,kBAAC3I,EAAA,EAAD,CACEP,MAAO,CAAE1B,WAAY,OAAQH,MAAO0F,GAAa5E,aAAc,IADjE,qBAKA,kBAACY,EAAA,EAAD,CACEG,MAAO,CACLmI,YAAa,EACbC,YAAavE,GACbzE,aAAc,EACdN,QAAS,KAGX,kBAACe,EAAA,EAAD,CACEG,MAAO,CACLkJ,UAAW,GACXjK,aAAc,GACd8E,KAAM,EACNtF,cAAe,MACfE,WAAY,SACZD,eAAgB,kBAGlB,kBAAC6B,EAAA,EAAD,CACEP,MAAO,CACL1B,WAAY,OACZ6a,UAAW,SAEXhb,MAAO0F,MAxZjB2G,EAAM3H,iBACC,cAEA,qBAwZ6B4S,eAE9B,kBAAC2D,GAAA,EAAD,CACEzM,MAAOnC,EAAM3H,iBACbwW,cAAejC,EACfjZ,MAAO0F,MAGX,kBAAChE,EAAA,EAAD,CACEG,MAAO,CACL6T,iBAAkB,KAGnBrJ,EAAM3H,iBACL,kBAAChD,EAAA,EAAD,CACEG,MAAO,CACLgI,eAAgB,GAChB6H,WAAY,GACZ9L,KAAM,EACNtF,cAAe,SACfE,WAAY,WAGd,kBAAC4B,EAAA,EAAD,CAAMP,MAAOA,GAAMqW,eAChB,SAAA7L,EAAM1H,QAAN,WAAa4H,cAAb,IAAsBe,QACrB,KADD,SAECjB,EAAM1H,QAFP,SAEC,EAAa4H,cAFd,EAEC,EAAsBgB,SAE1B,kBAACnL,EAAA,EAAD,CAAMP,MAAOA,GAAMqW,cAAnB,SACG7L,EAAM1H,QADT,SACG,EAAa4H,cADhB,EACG,EAAsBkB,YAEzB,kBAACrL,EAAA,EAAD,CAAMP,MAAOA,GAAMqW,eAChB,SAAA7L,EAAM1H,QAAN,WAAa4H,cAAb,IAAsBiB,SACrB,KADD,SAECnB,EAAM1H,QAFP,SAEC,EAAa4H,cAFd,EAEC,EAAsBc,QAI5B,kBAAC3L,EAAA,EAAD,CAAMG,MAAO,CAAE6P,WAAY,KACzB,kBAAChQ,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAMoW,mBAAnB,UACA,kBAAC5O,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAcqP,EACdpK,MACEnC,EAAM3J,iBAAiB4K,OACnBjB,EAAM3J,iBAAiB4K,OAAOxK,WAC9B,GAEN4G,YAAY,eAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAMoW,mBAAnB,OACA,kBAAC5O,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAcsP,EACdrK,MAAOnC,EAAM3J,iBAAiB6K,OAC9B7D,YAAY,SAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAMoW,mBAAnB,eACA,kBAAC5O,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAcuP,EACdtK,MAAOnC,EAAM3J,iBAAiB8K,QAC9B9D,YAAY,iBAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAMoW,mBAAnB,SACA,kBAAC5O,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAcwP,EACdvK,MAAOnC,EAAM3J,iBAAiB2K,KAC9B3D,YAAY,WAGhB,kBAAChI,EAAA,EAAD,CAAMG,MAAOA,GAAM8T,cACjB,kBAACvT,EAAA,EAAD,CAAMP,MAAOA,GAAMoW,mBAAnB,cACA,kBAAC5O,EAAA,EAAD,CACExH,MAAOA,GAAMyH,MACbC,aAAcyP,EACdxK,MAAOnC,EAAM3J,iBAAiB+K,WAC9B/D,YAAY,gBACZ+E,WAAS,SASvB,kBAAC/M,EAAA,EAAD,CACEG,MAAO,CACL+D,KAAM,EACNtF,cAAe,SACfC,eAAgB,SAChBsJ,eAAgB,KAGlB,kBAACwI,GAAA,EAAD,CAAoBvI,QAASuO,EAAaxW,MAAOA,GAAMyQ,QACrD,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,aAEF,kBAACqS,GAAA,EAAD,CACEvI,QAAS,WACPyB,EAAW4D,SAAS,qBAAsB,CACxCkI,aAAcA,KAGlBxV,MAAOA,GAAMyQ,QAEb,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,cAKRqW,EAAUzN,IAGZ,OACE,kBAACkF,EAAA,EAAD,CAAYjM,MAAO,CAAEgE,gBAAiBH,KAAkB0Q,IC/mBtDvU,GAAQhC,IAAWC,OAAO,CAC9BwS,OAAQ,CACNrR,aAAc,EACd4E,gBAAiBH,GACjBE,KAAM,EACNrF,eAAgB,SAChBC,WAAY,SACZ+R,gBAAiB,GACjB7C,OAAQ,MAIGyL,GA/EsB,SAAC,GAAoB,IAAlB3P,EAAiB,EAAjBA,MAChCD,EAAaoH,2BACnB,EAA0BtM,mBAA6BqR,MAAvD,WAAOrL,EAAP,KAAcC,EAAd,KAEAjF,qBAAU,WAMR,OALoBkE,EAAWgL,YAAY,SAAS,WAClD,IAAQc,EAAiB7L,EAAMtI,OAAvBmU,aACR9L,EAAW6M,WAAW,CAAElM,MAAOmL,EAAahV,QAC5CiK,EAAS+K,QAGV,CAAC9L,IAkCJ,OACE,kBAAC7J,EAAA,EAAD,CACEG,MAAO,CACLlB,QAAS,GACTiF,KAAM,EACNrF,eAAgB,SAChBsJ,eAAgB,KAGlB,kBAACwI,GAAA,EAAD,CAAoBvI,QAzCC,WACvByB,EAAW4D,SAAS,oBAAqB,CACvCkI,aAAchL,KAuCiCxK,MAAOA,GAAMyQ,QAC1D,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,qBAEF,kBAACqS,GAAA,EAAD,CAAoBvI,QAtCC,WACvByB,EAAW4D,SAAS,qBAAsB,CACxCiM,MAAO/O,EAAMkL,gBACb8D,QAAShP,EAAMzK,MAmCgCC,MAAOA,GAAMyQ,QAC1D,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,uBAEF,kBAACqS,GAAA,EAAD,CAAoBvI,QAlCJ,WAClBjD,QAAQC,IAAIuF,GACZ,IAAMtK,EAAG,UAAasR,GAAO6D,GAApB,IAA0B7D,GAAO8D,KAAjC,WAAgD9K,EAAMzK,GAC/DiF,QAAQC,IAAI/E,GACZkC,MAAMlC,EAAK,CACTyD,OAAQ,SACR8S,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAGjB5E,MAAK,SAACyD,GAAD,OAASvQ,QAAQC,IAAIsQ,EAAIjT,WAC9BqQ,OAAM,SAAC8G,GAAD,OAASzU,QAAQC,IAAIwU,MAE9B/P,EAAW4D,SAAS,oBAAqB,CACvCkI,aAAchL,KAmB4BxK,MAAOA,GAAMyQ,QACrD,kBAAClQ,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO,UAAtB,gB,00BCiFMH,IAAWC,OAAO,CAC9BiY,YAAa,KA7If,ICHKwD,GDmJUC,GAhJsB,SAAC,GAAoB,IAAlBhQ,EAAiB,EAAjBA,MAChCD,EAAaoH,2BACnB,EAAkCtM,mBAAwC,IAA1E,WAAOoV,EAAP,KAAkBC,EAAlB,KACQL,EAAY7P,EAAMtI,OAAlBmY,QAERhU,qBAAU,WAKR,OAJoBkE,EAAWgL,YAAY,SAAS,WAClD,IAAQ6E,EAAU5P,EAAMtI,OAAhBkY,MACRM,EAAaN,QAGd,CAAC7P,IAEJ,IAAMoQ,EAAe,SACnBxO,EACAyO,GAGA,IADA,IACA,EADMC,EAA8C,GACpD,KAAsBJ,KAAtB,aAAiC,CAAC,IAAvBK,EAAsB,QAC3BA,EAAQla,KAAOuL,EAAKvL,IAClBka,EAAQC,mBACVD,EAAQC,iBAAiBC,kBAAoBJ,GAG7CA,GACEE,EAAQla,KAAOuL,EAAKvL,IAClBka,EAAQC,mBACVD,EAAQC,iBAAiBC,mBAAoB,GAInDH,EAAatC,KAAKuC,GAEpBJ,EAAaG,GACb,IAAM9Z,EACJ,UAAUsR,GAAO6D,GAAjB,IAAuB7D,GAAO8D,KAA9B,2CACAkE,EACA,IACAlO,EAAKvL,GACPqC,MAAMlC,EAAK,CACTyD,OAAQ,MACR8S,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElB9S,KAAMV,KAAKC,UAAU,CACnBiX,SAAUL,MAGXjI,MAAK,SAACC,GAAD,OAAcA,EAASzP,UAC5BqQ,OAAM,SAAC8G,GAAD,OAASzU,QAAQ4N,MAAM6G,OAuElC,OACE,kBAAC5Z,EAAA,EAAD,CAAMG,MAAO,CAAE+D,KAAM,EAAGjF,QAAS,GAAIG,aAAc,KAChD2a,GAAaA,EAAU/b,OAAS,EAC/B,kBAAC6B,EAAA,EAAD,CACEH,KAAMqa,EACNja,WAzEsD,SAAC,GAAD,UAAGC,EAAH,EAAGA,KAAH,OAC5D,kBAACC,EAAA,EAAD,CACEG,MAAO,CACLlB,QAAS,GAETkJ,eAAgB,GAChBG,YAAa,EACbC,YAAavE,GACbzE,aAAc,IAIhB,kBAACS,EAAA,EAAD,CACEG,MAAO,CACLxB,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAGlB,kBAACmB,EAAA,EAAD,CAAMG,MAAO,IACX,kBAACO,EAAA,EAAD,CAAMP,MAAO,CAAE1B,WAAY,OAAQH,MAAO0F,MACtCjE,EAAKoS,WAAa,IAAMpS,EAAKqS,WAAWwD,eAE5C,kBAAClV,EAAA,EAAD,CAAMP,MAAO,CAAEmZ,UAAW,WAAavZ,EAAK0S,OAC3C,SAAA1S,EAAKsa,uBAAL,IAAuBC,oBACtB,kBAACta,EAAA,EAAD,CACEG,MAAO,CACLkJ,UAAW,KAGb,kBAAC3I,EAAA,EAAD,KAAOX,EAAKuS,OACZ,kBAAC5R,EAAA,EAAD,KAAOX,EAAK2L,QAIlB,kBAAChL,EAAA,EAAD,CAAMP,MAAO,CAAE7B,MAAO0F,GAAasV,UAAW,WAC3C,SAAAvZ,EAAKsa,mBAAL,EAAuBC,kBACpB,cACA,oBAGR,kBAACta,EAAA,EAAD,CACEG,MAAO,CACLxB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBwK,UAAW,KAGZ,SAAAtJ,EAAKsa,mBAAL,EAAuBC,kBACtB,kBAACzZ,EAAA,EAAD,CACEC,KAAM,QACNC,KAAM,GACNzC,MAAO0F,GACPoE,QAAS,kBAAM6R,EAAala,GAAM,MAGpC,kBAACc,EAAA,EAAD,CACEC,KAAM,MACNC,KAAM,GACNzC,MAAO0F,GACPoE,QAAS,kBAAM6R,EAAala,GAAM,SAapCoB,aAAc,SAAC2U,EAAWC,GAAZ,OAAsBA,EAAM3U,cAG5C,kBAACpB,EAAA,EAAD,CACEG,MAAO,CAAE+D,KAAM,EAAGrF,eAAgB,SAAUC,WAAY,WAExD,kBAAC6H,EAAA,EAAD,CAAmB5F,KAAK,QAAQzC,MAAM,eErJ1Ckc,GAAe,yJACfC,GAAiB,mBAOVC,GAAY,SAAChP,GAC1B,OAAO8O,GAAYG,KAAKjP,IAQXkP,GAAgB,SAAC5I,GAC9B,OAAOyI,GAAeE,KAAK3I,IAUd6I,GAAW,SAACC,EAAaC,EAAgBC,GAClD,IAAMja,EAAO+Z,EAAI9c,OACjB,MAAgB,KAAR8c,GAAc/Z,GAAQga,GAAUha,GAAQia,I,SDjB/CnB,O,mBAAAA,I,eAAAA,I,qBAAAA,I,2BAAAA,I,kCAAAA,Q,KAkBL,IA0OM3b,GAASC,IAAWC,OAAO,CAC/BwS,OAAQ,CACN9R,WAAY,SACZqF,gBAAiB,WAEnB8W,WAAY,CACV9b,UAAW,SACXF,QAAS,GACTX,MAAO,QAETqJ,UAAW,CACT3I,OAAQ,GACRkF,KAAM,EACNjF,QAAS,GACT+Q,WAAY,IAEdsE,KAAM,CACJvV,MAAO,MACPC,OAAQ,OAEVuV,UAAW,CACTpQ,gBAAiB,UACjB5E,aAAc,GACdR,MAAO,MACPC,OAAQ,GACRI,aAAc,GACdN,WAAY,YAIDoc,GAxQgB,WAG7B,MAAgCvW,mBAAS,IAAzC,WAAOwO,EAAP,KAAiBgI,EAAjB,KACA,EAAkCxW,mBAAS,IAA3C,WAAOyW,EAAP,KAAkBC,EAAlB,KACA,EAAgC1W,mBAAS,IAAzC,WACA,GADA,UAC0BA,mBAAS,KAAnC,WAAO2N,EAAP,KAAcgJ,EAAd,KACA,EAAkC3W,mBAAS,IAA3C,WAAkB4W,GAAlB,WACA,EAA4B5W,mBAAS,IAArC,WACA,GADA,UAC4BA,mBAAS,KAArC,WACA,GADA,UACwBA,mBAAS,KAAjC,WAAO+G,EAAP,KAAa8P,EAAb,KACA,EAAgC7W,mBAAS,IAAzC,WAAOqN,EAAP,KAAiB6B,EAAjB,KACA,EAA8ClP,mBAAS,IAAvD,WAAO8W,EAAP,KAAwBC,EAAxB,KACA,EAA8B/W,mBAA2B,CACvDkH,OAAQ,GACRF,KAAM,GACNG,QAAS,GACTC,WAAY,GACZH,OAAQ,EACRhK,SAAU,EACVC,UAAW,IAPb,WAAOgJ,EAAP,KAAgBC,EAAhB,KAcM6Q,EAAqB,SAACb,EAAac,GACvC,IAAMC,EAAahR,EACf+Q,IAAU/B,GAAciC,KAC1BD,EAAWlQ,KAAOmP,EAEXc,IAAU/B,GAAckC,WAC/BF,EAAW9P,WAAa+O,EAEjBc,IAAU/B,GAAcmC,cAC/BH,EAAWjQ,OAASwF,SAAS0J,EAAK,IAE3Bc,IAAU/B,GAAcoC,OAC/BJ,EAAWhQ,OAASiP,EAEbc,IAAU/B,GAAcqC,UAC/BL,EAAW/P,QAAUgP,GAEvBhQ,EAAW+Q,IA0Cb,OACE,kBAACzP,EAAA,EAAD,KAKE,kBAAC1L,EAAA,EAAD,0GAIA,kBAACA,EAAA,EAAD,eAEA,kBAACV,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,WACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,iBACZmU,qBAAqB,UACrBtU,aAAc,SAACsL,GAAD,OAAcgI,EAAYhI,OAI5C,kBAACnT,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,YACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,YACZmU,qBAAqB,UACrBtU,aAAc,SAACuT,GAAD,OAAeC,EAAaD,OAI9C,kBAACpb,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,QACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,kBACZmU,qBAAqB,UACrBtU,aAAc,SAACyK,GAAD,OAAWgJ,EAAShJ,OAItC,kBAACtS,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,SACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,YACZmU,qBAAqB,UACrBtU,aAAc,SAACuU,GAAD,OAAeb,EAAaa,OAI9C,kBAACpc,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACEwM,OAAQ,QACRhU,MAAOjC,GAAOyJ,UACdK,YAAY,QACZmU,qBAAqB,UACrBtU,aAAc,SAAC6D,GAAD,OAAU8P,EAAQ9P,OAGpC,kBAAC1L,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,WACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,eACZmU,qBAAqB,UACrB/H,iBAAiB,EACjBvM,aAAc,SAACmK,GAAD,OAAc6B,EAAY7B,OAG5C,kBAAChS,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,iBACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,4BACZmU,qBAAqB,UACrB/H,iBAAiB,EACjBvM,aAAc,SAAC4T,GAAD,OACZC,EAAmBD,OAKzB,kBAACzb,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,SACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,SACZmU,qBAAqB,UACrBtU,aAAc,SAACiF,GAAD,OACZ6O,EAAmB7O,EAAO+M,GAAcmC,mBAI9C,kBAAChc,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,SACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,SACZmU,qBAAqB,UACrBtU,aAAc,SAACiF,GAAD,OACZ6O,EAAmB7O,EAAO+M,GAAcoC,YAI9C,kBAACjc,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,cACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,aACZmU,qBAAqB,UACrBtU,aAAc,SAACiF,GAAD,OACZ6O,EAAmB7O,EAAO+M,GAAckC,gBAI9C,kBAAC/b,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,OACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,OACZmU,qBAAqB,UACrBtU,aAAc,SAACiF,GAAD,OACZ6O,EAAmB7O,EAAO+M,GAAciC,UAI9C,kBAAC9b,EAAA,EAAD,CAAMG,MAAOjC,GAAOqW,WAClB,kBAAC5M,EAAA,EAAD,CACAwM,OAAQ,UACNhU,MAAOjC,GAAOyJ,UACdK,YAAY,UACZmU,qBAAqB,UACrBtU,aAAc,SAACiF,GAAD,OACZ6O,EAAmB7O,EAAO+M,GAAcqC,aAI9C,kBAACjU,EAAA,EAAD,CAAkBG,QAzKA,WAEpBjD,QAAQC,IAAI,SACPyV,GAAS1H,EAAU,EAAG,IAItB0H,GAASO,EAAW,EAAG,IAIvBV,GAAUhP,IA5CO,SAACsG,EAAkByJ,GACzC,OAAOzJ,IAAayJ,EA+CfY,CAAgBrK,EAAUyJ,GAC7BtW,QAAQC,IACN,kEAICwV,GAAc5I,IAInB7M,QAAQC,IAAI,QACZ0M,GAAYmB,iBAAiBmI,EAAWjI,EAAUb,EAAO,GAAI5G,EAAMsG,EAAUnH,IAJ3E1F,QAAQC,IAAI,+BAVZD,QAAQC,IAAI,yBAJZD,QAAQC,IAAI,uBAJZD,QAAQC,IAAI,6BAqK8B+O,OAAQ,UAChD,kBAACnU,EAAA,EAAD,CAAMG,MAAOjC,GAAO0S,QAClB,kBAAClQ,EAAA,EAAD,CAAMP,MAAOjC,GAAO+c,YAApB,cEjOJqB,GAAMC,cAENC,GAAYC,cAclB,SAASC,KACP,OACE,kBAACF,GAAUG,UAAX,CACEC,cAAe,CACbC,YAAa,CAAE1Y,gBAAiB,WAChC2Y,gBAAiB,SAGnB,kBAACN,GAAUO,OAAX,CACEjc,KAAK,aACLkc,UAAWtY,EACXuY,QAAS,CAAEzS,MAAO,iBAK1B,IAAM0S,GAAoBT,cAC1B,SAASU,KACP,OACE,kBAACD,GAAkBP,UAAnB,CACEC,cAAe,CACbC,YAAa,CAAE1Y,gBAAiB,WAChC2Y,gBAAiB,SAGnB,kBAACI,GAAkBH,OAAnB,CACEjc,KAAK,qBACLkc,UAAWpW,EACXqW,QAAS,CAAEzS,MAAO,wBAM1B,IAAM4S,GAAWX,cACjB,SAASY,KACP,OACE,kBAACD,GAAST,UAAV,CACEC,cAAe,CACbC,YAAa,CAAE1Y,gBAAiB,WAChC2Y,gBAAiB,SAGnB,kBAACM,GAASL,OAAV,CACEjc,KAAK,SACLkc,UAAWpT,GACXqT,QAAS,CAAEzS,MAAO,yBAK1B,IAAM8S,GAAcb,cACpB,SAASc,KACP,OACE,kBAACD,GAAYX,UAAb,CACEC,cAAe,CACbC,YAAa,CAAE1Y,gBAAiB,WAChC2Y,gBAAiB,SAGnB,kBAACQ,GAAYP,OAAb,CACEjc,KAAK,eACLkc,UAAW1M,GACX2M,QAAS,CACPO,aAAa,MAYvB,IAAMC,GAAehB,cACrB,SAASiB,KACP,OACE,kBAACD,GAAad,UAAd,CACEC,cAAe,CACbC,YAAa,CAAE1Y,gBAAiB,WAChC2Y,gBAAiB,SAGnB,kBAACW,GAAaV,OAAd,CACEjc,KAAK,gBACLkc,UAAWvI,GACXwI,QAAS,CAAEzS,MAAO,gBAEpB,kBAACiT,GAAaV,OAAd,CACEjc,KAAK,eACLkc,UAAWtJ,GACXuJ,QAAS,CAAEzS,MAAO,eAEpB,kBAACiT,GAAaV,OAAd,CACEjc,KAAK,eACLkc,UAAW9B,GACX+B,QAAS,CAAEzS,MAAO,wBAEpB,kBAACiT,GAAaV,OAAd,CACEjc,KAAK,qBACLkc,UAAW9H,GACX+H,QAAS,CAAEzS,MAAO,cAEpB,kBAACiT,GAAaV,OAAd,CACEjc,KAAK,oBACLkc,UAAWlM,GACXmM,QAAS,CAAEzS,MAAO,gBAEpB,kBAACiT,GAAaV,OAAd,CACEjc,KAAK,qBACLkc,UAAWvD,GACXwD,QAAS,kBAAqB,CAAEzS,MAAvB,EAAGV,MAAiCtI,OAAOV,SAEtD,kBAAC2c,GAAaV,OAAd,CACEjc,KAAK,oBACLkc,UAAWvG,GACXwG,QAAS,kBAAqB,CAAEzS,MAAvB,EAAGV,MAAiCtI,OAAOV,SAEtD,kBAAC2c,GAAaV,OAAd,CACEjc,KAAK,qBACLkc,UAAWlD,GACXmD,QAAS,CAAEzS,MAAO,4BAM1B,IAoEMtM,GAASC,IAAWC,OAAO,CAC/B6F,UAAW,CACTtF,QAAS,OACTgR,SAAU,WACV5Q,MAAO,GACPD,WAAY,SACZD,eAAgB,UAElB8e,WAAY,CACVhO,SAAU,WACVC,IAAK,GAEPgB,OAAQ,CACNhB,KAAM,KACNjR,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZC,MAAO,GACPC,OAAQ,GACRO,aAAc,GACd4E,gBAAiB,WAEnByZ,WAAY,CACVpf,SAAU,GACVF,MAAO,UAGIqe,GA/Fa,WAC1B,OACE,kBAACL,GAAIK,UAAL,CACEkB,cAAe,CACb1d,MAAO,CACLgE,gBAAiB,UACjBnF,OAAQ,KAGZ4d,cAAe,gBAAG9S,EAAH,EAAGA,MAAH,MAAgB,CAC7BgU,WAAY,YAA+B,IACrCC,EADSC,EAA2B,EAA3BA,QAA2B,EAAlB1f,MAAkB,EAAXyC,KAK7B,OAHQ,OACD,GAEC+I,EAAMhJ,MACZ,IAAK,aACHid,EAAWC,EAAU,OAAS,eAC9B,MACF,IAAK,qBACHD,EAAWC,EAAU,gBAAkB,wBACvC,MAIF,IAAK,eACHD,EAAWC,EAAU,SAAW,iBAChC,MACF,IAAK,gBACHD,EAAWC,EAAU,SAAW,iBAKpC,OAAO,kBAACnd,EAAA,EAAD,CAAUC,KAAMid,EAAUhd,KArB1B,GAqBsCzC,MAtBrC,UAwBV2f,YAAa,WACX,OAAO,SAIX,kBAAC3B,GAAIS,OAAL,CAAYjc,KAAK,aAAakc,UAAWN,KACzC,kBAACJ,GAAIS,OAAL,CACEjc,KAAK,qBACLkc,UAAWG,KAEb,kBAACb,GAAIS,OAAL,CACEjc,KAAK,YACLkc,UAAWK,GACXJ,QAAS,CACPiB,aAAc,SAACze,GAAD,OACZ,kBAACO,EAAA,EAAD,CAAMG,MAAOjC,GAAO+F,UAAWka,cAAc,YAC3C,kBAAClW,EAAA,EAAD,CAAkB9H,MAAOjC,GAAO0S,OAAQxI,QAAS3I,EAAM2I,SACrD,kBAACvH,EAAA,EAAD,CACEC,KAAM,qBACNX,MAAOjC,GAAO0f,mBAO1B,kBAACtB,GAAIS,OAAL,CAAYjc,KAAK,eAAekc,UAAWO,KAC3C,kBAACjB,GAAIS,OAAL,CAAYjc,KAAK,gBAAgBkc,UAAWU,O,ylBC9OlD,IAAMU,GAA8B,CAChC3S,KAAM,CACFvL,IAAK,EACLiS,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPC,WAAY,GACZC,OAAQ,EACR9G,KAAM,GACN+G,KAAM,EACNC,aAAc,EACd7H,QAAS,OAuCFwT,GAjCC,WAGM,IAFlBnc,EAEiB,uDAFEkc,GACnB5M,EACiB,uCACb,OAAOA,EAAOD,MACV,IZpBY,WYqBZ,IZvBa,YYwBTpM,QAAQC,IAAI,cAEZ,IAAMkZ,EAAiB9M,EAAO/F,KAC9B,OAAO,SAAIvJ,GAAX,IACOuJ,KAAM6S,IAEjB,IZhCe,cYiCP,IAAMC,EAAoBH,GAAiB3S,KAC3C,OAAO,SAAIvJ,GAAX,IACOuJ,KAAM8S,IASb,QAAS,OAAOrc,I,UC/BvB2Q,GAET2L,uBAAYH,GAASI,+BAAoBC,2BAAgBC,QAmB9CC,IAfO,WACpB,OACE,kBAAC,KAAD,CAAU/L,MAAOA,IACjB,kBAACgM,EAAA,EAAD,KAKE,kBAAC,GAAD,U","file":"static/js/app.e3643482.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.99dbc57a.png\";","const getNumberOfDays = (date: string) => {\n  var date1 = new Date(date).getTime();\n  var date2 = Date.now();\n  const diff = Math.floor((date2 - date1) / 1000 / 60 / 60 / 24);\n\n  if (diff == 0) {\n    return \"Auj\";\n  }\n\n  return diff <= 1 ? `${diff} jour` : `${diff} jours`;\n};\n\nexport const DateHelper = { getNumberOfDays };\n","\nconst getSliceString = (text: string, start: number, length: number) => {\n\n    if (text.length > length) {\n\n        return `${text.slice(start, length)} ...`;\n    }\n\n    return text;\n\n}\n\nexport const StringHelper = { getSliceString };","import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  FlatList,\n  ListRenderItem,\n  Platform,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NsOffer from \"../models/NsOffer\";\nimport { DateHelper } from \"../helpers/DateHelper\";\nimport { StringHelper } from \"../helpers/StringHelper\";\n\nconst OfferListComponent: React.FC<NsOffer.IOfferData[]> = (props) => {\n  const data = Object.values(props);\n\n  const renderOffer: ListRenderItem<NsOffer.IOfferData> = ({ item }) => (\n    <View key={item.id} style={styles.itemContainerStyle}>\n      {item.pictures[0] && item.pictures[0].url ? (\n        <Image\n          style={styles.imageStyle}\n          source={{ uri: item.pictures[0].url }}\n        />\n      ) : (\n        <Image\n          style={styles.imageStyle}\n          source={require(\"../assets/logo.png\")}\n        />\n      )}\n      <Text style={styles.textLabelStyle}>\n        {\" \"}\n        {StringHelper.getSliceString(item.label, 0, 20)}{\" \"}\n      </Text>\n      <View style={styles.infoStyle}>\n        <Text style={{ marginRight: 5 }}>\n          <Ionicons name=\"location\" color=\"red\" size={15} />{\" \"}\n          {item.exchange_address.distance} Km\n        </Text>\n        <Text>\n          <Ionicons name=\"time\" color=\"red\" size={15} />{\" \"}\n          {DateHelper.getNumberOfDays(item.created_at)}\n        </Text>\n      </View>\n    </View>\n  );\n  return (\n    <FlatList\n      data={data}\n      renderItem={renderOffer}\n      keyExtractor={(item) => item.id.toString()}\n      numColumns={2}\n      showsVerticalScrollIndicator={false}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleStyle: {\n    color: \"#e9383f\",\n    textAlignVertical: \"center\",\n    fontSize: 17,\n    fontWeight: \"900\",\n  },\n  itemContainerStyle: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 170,\n    height: 190,\n    padding: 5,\n  },\n  textLabelStyle: {\n    textAlign: \"center\",\n    marginBottom: 3,\n  },\n  infoStyle: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  imageStyle: {\n    width: 100,\n    height: 120,\n    borderRadius: 10,\n    marginBottom: 3,\n  },\n});\nexport default OfferListComponent;\n","import NsOffer from '../models/NsOffer';\nimport config from \"./../config.json\";\n\n\nconst getOffers = async (params: NsOffer.IOfferConditionsParams): Promise<NsOffer.IOfferResult> => {\n\n\n    const { search, latitude, longitude, distance, days, page_size, page_number, category, state, sort_by } = params;\n\n    var url_params = '';\n\n    if (search) {\n        url_params += `search=${search}&`;\n    }\n    if (category) {\n        url_params += `category=${category}&`;\n    }\n    if (state && state?.length > 0) {\n        state.forEach(e => {\n            url_params += `state[]=${e}&`;\n        });\n    }\n    if (latitude && longitude && distance) {\n        url_params += `latitude=${latitude}&longitude=${longitude}&distance=${distance}&`;\n    }\n    if (days) {\n        url_params += `days=${days}&`;\n    }\n\n    if (page_size && page_number) {\n        url_params += `page_size=${page_size}&page_number=${page_number}&`;\n    }\n\n    if (sort_by) {\n        url_params += `sort_by=${sort_by}`;\n    }\n    // const url = `http://${config.ip}:${config.port}/offers/search?${url_params}`;\n    const url = `http://localhost:3333/offers/search?${url_params}`;\n\n    const fetchResult = await fetch(url);\n    const jsonResult: NsOffer.IOfferResult = await fetchResult.json();\n\n    if (!jsonResult) {\n        throw Error('call api failed');\n    }\n\n    return jsonResult;\n\n}\n\nconst postOffer = async (params: NsOffer.IOfferDataIn): Promise<Object> => {\n\n    const { label,\n        description,\n        display_phone,\n        display_mail,\n        state,\n        exchange_address,\n        images,\n        is_owner_address,\n        category,\n        owner\n    } = params;\n\n    const formData = new FormData();\n\n    formData.append('label', label);\n    formData.append('description', description);\n    formData.append('display_phone', display_phone.toString());\n    formData.append('display_mail', display_mail.toString());\n    formData.append('state', state);\n    formData.append('category_id', category.toString());\n    formData.append('is_owner_address', is_owner_address.toString());\n    formData.append('owner_id', owner.toString());\n    formData.append('exchange_address', JSON.stringify(exchange_address));\n\n    //Convert String to blob\n    const resultsImages = await Promise.all(\n\n        images.map(async (img) => {\n\n            var base64Response = await fetch(img);\n            var blob = await base64Response.blob();\n            formData.append('images', blob);\n        })\n\n    );\n\n    const requestOptions = {\n        method: 'POST',\n        body: formData\n    };\n\n    const url = `http://localhost:3333/offers`;\n\n    const fetchResult = await fetch(url, requestOptions);\n    const jsonResult = await fetchResult.json();\n\n    if (!jsonResult) {\n        throw Error('call api failed');\n    }\n\n    return jsonResult;\n\n}\nexport const offerService = { getOffers, postOffer };\n","export const COLORS = {\n    primary: '#e9383f',\n    secondary: '#fff',\n    lightGrey: '#edf2f4',\n    darkGrey: '#8d99ae',\n    darkBlue: '#14213d',\n    success: '#00FF00'\n}","import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, ActivityIndicator } from 'react-native';\nimport * as Location from 'expo-location';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport NsOffer from '../models/NsOffer';\nimport ListOfferComponent from '../components/ListOfferComponent';\nimport { offerService } from '../services/offerService';\nimport { COLORS } from '../components/Styles';\n\n\ninterface Coordinate {\n\n    latitude?: number,\n    longitude?: number,\n\n}\n\nconst HomeScreen: React.FC = () => {\n\n    const [offersData, setOffersData] = useState<NsOffer.IOfferData[]>([]);\n\n\n    const storeData = async (coord: Coordinate) => {\n        try {\n            const jsonValue = JSON.stringify(coord)\n            await AsyncStorage.setItem('@coordinate', jsonValue)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    const [conditions, setConditions] = useState<NsOffer.IOfferConditionsParams>(\n        {\n            // days: 50,\n            days: 100,\n            page_size: 10,\n            page_number: 1,\n            distance: 20,\n            sort_by: 'date'\n        }\n    );\n        \n    const [errorFound, setErrorFound] = useState(false);\n\n    const [errorMsg, setErrorMsg] = useState('');\n\n    useEffect(() => {\n        const getData = async (): Promise<void> => {\n\n            try {\n                const jsonValue = await AsyncStorage.getItem('@coordinate');\n                var coords: Coordinate = {};\n                if (jsonValue != null) {\n                    coords = JSON.parse(jsonValue);\n                }\n\n                if (coords.latitude !== undefined) {\n\n                    setConditions({\n                        ...conditions,\n                        latitude: coords?.latitude,\n                        longitude: coords?.longitude,\n                    });\n                } else {\n                    // Request Permission\n                    hasPermission();\n                }\n\n            } catch (error) {\n                console.log(error)\n            }\n\n        }\n        getData();\n\n\n    }, []);\n\n    useEffect(() => {\n\n        const refresh = async (): Promise<void> => {\n\n            try {\n\n                const data = await offerService.getOffers(conditions);\n                setOffersData(data?.results?.offers);\n\n                if (!data.results) {\n                    setErrorFound(true);\n                }\n                if (data?.results?.offers.length == 0) {\n                    setTimeout(function () { setErrorFound(true); }, 3000);\n                }\n\n            } catch (error) {\n                console.log('Error', error.message);\n                setErrorFound(true);\n            }\n        };\n        refresh();\n\n    }, [conditions]);\n\n\n    const hasPermission = async () => {\n\n        let { status } = await Location.requestPermissionsAsync();\n\n        if (status !== 'granted') {\n            setErrorMsg('Permission to access location was denied');\n            return;\n        }\n\n        let location = await Location.getCurrentPositionAsync({});\n        if (errorMsg) {\n            console.log(errorMsg);\n\n        } else if (location) {\n            //  setLocation(location);\n            setConditions({\n                ...conditions,\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n            });\n\n            const coord = {\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n            }\n            console.log('request location')\n            //AsyncStorage\n            storeData(coord);\n        }\n    }\n   \n    \n\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.titleContainerStyle}>\n                <Text style={styles.titleStyle} >Donnez une seconde vie à vos objets</Text>\n            </View>\n            <View style={styles.subTitleContainerStyle}>\n                <Text style={{ ...styles.titleStyle, fontWeight: '700', color: '#e9383f', fontSize: 15 }} >\n                    Donner du bonheur ou s'en procurer,\n                </Text>\n                <Text style={{ ...styles.titleStyle, fontWeight: '700', color: '#e9383f', fontSize: 15 }} >\n                    ShareWorld permet de les concilier.\n                </Text>\n            </View>\n            <View style={styles.containerListOffers}>\n\n                {(offersData && offersData.length > 0) ?\n                    <ListOfferComponent {...offersData} />\n                    :\n                    <View style={{ justifyContent: 'center', flex: 0.5 }} >\n                        {errorFound ?\n                            <View >\n                                <Text style={styles.errorMsgStyle}>\n                                    Pardon!\n                                </Text>\n                                <Text style={styles.errorMsgStyle}>\n                                    Pour le moment, nous ne pouvons pas partager le monde avec vous.\n                                </Text>\n                                <Text style={styles.errorMsgStyle}>\n                                    Essayez plus tard !\n                                </Text>\n                            </View>\n                            :\n                            <ActivityIndicator size=\"large\" color=\"#e9383f\" />\n                        }\n                    </View>\n                }\n\n            </View>\n        </View >\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: COLORS.secondary,\n    },\n    containerListOffers: {\n        flex: 1,\n        backgroundColor: COLORS.secondary,\n        alignItems: 'center',\n        padding: 10\n    },\n    titleContainerStyle: {\n        backgroundColor: COLORS.lightGrey,\n        flex: 0.15,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    subTitleContainerStyle: {\n        flex: 0.15,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderBottomWidth: 1,\n        borderBottomColor: '#f2f2f2'\n    },\n    titleStyle: {\n        color: COLORS.primary,\n        textAlignVertical: 'center',\n        fontSize: 17,\n        fontWeight: '900'\n    },\n    errorMsgStyle: {\n        textAlign: 'center',\n        color: COLORS.primary,\n        fontSize: 15\n    }\n});\n\nexport default HomeScreen;\n","import React from 'react'\nimport { View, Text } from 'react-native'\n\nconst NotificationScreen: React.FC = () => {\n    return (\n        <View>\n            <Text>NotificationScreen</Text>\n        </View>\n    )\n}\n\n\nexport default NotificationScreen;","import NsGeo from '../models/NsGeo';\n\nconst geocodage = async (search: string): Promise<NsGeo.IGeocodage[]> => {\n\n    var url_params = '';\n\n    if (search && search.length > 0) {\n        const aSearch = search.trim().replace(',', '').split(' ');\n        aSearch.forEach((e, i, a) => {\n            if (i === a.length - 1) {\n                url_params += `${e}`;\n            } else {\n                url_params += `${e}+`;\n            }\n        });\n    } else {\n        url_params += '000';\n    }\n\n\n    const url = `https://api-adresse.data.gouv.fr/search/?q=${url_params}&type=housenumber&limit=10`;\n\n    // Call api Geocodage\n    const fetchResult = await fetch(url);\n    const jsonResult: NsGeo.IResultGeocodage = await fetchResult.json();\n\n    if (!jsonResult) {\n        throw Error('call api failed');\n    }\n\n    //Filter results\n    const result = jsonResult.features.filter((a) => a.properties.housenumber);\n\n    return result;\n\n}\n\nexport const geoService = { geocodage };\n","import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, FlatList, TextInput, ListRenderItem, ActivityIndicator } from 'react-native';\n\nimport NsGeo from '../models/NsGeo';\nimport { COLORS } from './Styles';\nimport { geoService } from '../services/geoService';\n\ninterface Props {\n    getAddress: (param: NsGeo.IGeocodage) => void\n}\n\nconst AddressModalContent: React.FC<Props> = ({ getAddress }) => {\n\n    const [geocodageResult, setGeocodageResult] = useState<NsGeo.IGeocodage[]>([]);\n    const [errorFound, setErrorFound] = useState(false);\n\n    const handleAddress = async (searchString: string) => {\n        setGeocodageResult([]);\n        try {\n\n            setErrorFound(false);\n            if (searchString.length > 3) {\n                let result = await geoService.geocodage(searchString);\n                setGeocodageResult(result);\n            }\n\n        } catch (error) {\n            console.log(error);\n            setErrorFound(true);\n        }\n    }\n\n    const RenderAddressItem: ListRenderItem<NsGeo.IGeocodage> = ({ item }) => (\n        < TouchableOpacity key={[item.properties.id, item.properties.importance].toString()}\n            style={{ marginVertical: 10, borderBottomWidth: 1, borderBottomColor: COLORS.darkGrey }}\n            onPress={() => {\n                getAddress(item);\n            }}\n        >\n            <View>\n                <Text>{item.properties.label} </Text>\n            </View>\n        </TouchableOpacity>\n    );\n    return (\n        <View>\n            <View>\n                <TextInput\n                    style={styles.input}\n                    onChangeText={(e) => handleAddress(e)}\n                    placeholder=\"Rechercher une adresse\"\n                />\n            </View>\n            <View>\n                {(geocodageResult && geocodageResult?.length > 0) ?\n                    <FlatList\n                        data={geocodageResult}\n                        renderItem={RenderAddressItem}\n                        keyExtractor={(item) => [item.properties.id, item.properties.importance].toString()}\n                        numColumns={1}\n                        showsHorizontalScrollIndicator={false}\n                    />\n                    :\n                    <View style={{ justifyContent: 'center', flex: 0.5 }} >\n                        {errorFound &&\n                            <View >\n                                <Text style={styles.errorMsgStyle}>\n                                    Pardon!\n                                </Text>\n                                <Text style={styles.errorMsgStyle}>\n                                    Pour le moment, nous ne pouvons pas rechercher l'adresse.\n                                </Text>\n                                <Text style={styles.errorMsgStyle}>\n                                    Essayez plus tard !\n                                </Text>\n                            </View>\n                        }\n                    </View>\n\n                }\n            </View>\n        </View >\n    );\n}\n\n\n\nexport default AddressModalContent;\nconst styles = StyleSheet.create({\n    input: {\n        borderWidth: 1,\n        borderColor: COLORS.darkGrey,\n        borderRadius: 5,\n        padding: 10,\n        marginVertical: 10\n    },\n    errorMsgStyle: {\n        textAlign: 'center',\n        color: COLORS.primary,\n        fontSize: 15\n    },\n});","import NsCategory from '../models/NsCategory';\n\nconst getCategories = async (): Promise<NsCategory.ICategory[]> => {\n\n\n    const url = `http://localhost:3333/categories`;\n\n    const fetchResult = await fetch(url);\n    const jsonResult: NsCategory.ICategory[] = await fetchResult.json();\n\n    if (!jsonResult) {\n        throw Error('call api failed');\n    }\n\n    return jsonResult;\n\n}\nexport const categoryService = { getCategories };\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, FlatList, TextInput, ListRenderItem, ActivityIndicator } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { COLORS } from './Styles';\nimport NsCategory from '../models/NsCategory';\nimport { categoryService } from '../services/categoryService';\n\ninterface Props {\n    getCategory: (param: NsCategory.ICategory) => void\n}\n\nconst CategoriesModalContent: React.FC<Props> = ({ getCategory }) => {\n\n    const [chooseCategory, setChooseCategory] = useState<NsCategory.ICategory>({} as NsCategory.ICategory); //Category\n\n    const [categories, setCategories] = useState<NsCategory.ICategory[]>([]);\n    const [errorFound, setErrorFound] = useState(false);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n\n        const refresh = async (): Promise<void> => {\n\n            try {\n\n                const data = await categoryService.getCategories();\n                setCategories(data);\n\n                if (!data) {\n                    setErrorFound(true);\n                }\n                if (data.length == 0) {\n                    setTimeout(function () { setErrorFound(true); }, 3000);\n                }\n\n            } catch (error) {\n                console.log('Error', error.message);\n                setErrorFound(true);\n            }\n        };\n        refresh();\n\n    }, [count]);\n\n    const getCategoryFilter = () => {\n\n        CategoryList();\n    }\n\n    const CategoryList = () => {\n        return (\n            <View>\n                <View style={{ height: 370 }}>\n                    {(categories && categories?.length > 0) ?\n                        <FlatList\n                            data={categories}\n                            renderItem={RenderCategoryItem}\n                            keyExtractor={(item) => item.id.toString()}\n                            numColumns={1}\n                            showsHorizontalScrollIndicator={false}\n                        />\n\n                        :\n                        <View style={{ justifyContent: 'center', flex: 0.5 }} >\n                            {errorFound ?\n                                <View >\n                                    <Text style={styles.errorMsgStyle}>\n                                        Pardon!\n                                    </Text>\n                                    <Text style={styles.errorMsgStyle}>\n                                        Pour le moment, nous ne pouvons pas partager le monde avec vous.\n                                    </Text>\n                                    <Text style={styles.errorMsgStyle}>\n                                        Essayez plus tard !\n                                    </Text>\n                                </View>\n                                :\n                                <ActivityIndicator size=\"large\" color={COLORS.primary} />\n                            }\n                        </View>\n                    }\n                </View>\n                <TouchableOpacity\n                    style={styles.buttons}\n                    onPress={() => {\n                        getCategory(chooseCategory);\n                    }}>\n                    <Text style={{ fontSize: 20, color: COLORS.secondary, textAlign: 'center' }}>\n                        Appliquer rer\n                    </Text>\n                </TouchableOpacity>\n\n            </View >\n        );\n    }\n\n\n    const RenderCategoryItem: ListRenderItem<NsCategory.ICategory> = ({ item }) => {\n\n        return (\n            < TouchableOpacity key={item.id}\n                style={styles.itemCategory}\n                onPress={() => {\n                    setChooseCategory({\n                        id: item.id,\n                        label: item.label,\n                        image_url: item.image_url\n                    });\n                    getCategoryFilter();\n                }}\n            >\n                <View>\n                    <Text >{item.label} </Text>\n                </View>\n\n                <View>\n                    {(chooseCategory.id == item.id) &&\n                        <Ionicons name=\"checkmark\" size={24} color={COLORS.success} />\n                    }\n                </View>\n            </TouchableOpacity>\n        )\n    };\n    return (\n        <View >\n            <CategoryList />\n        </View >\n    );\n}\n\n\n\nexport default CategoriesModalContent;\nconst styles = StyleSheet.create({\n    itemCategory: {\n        padding: 5,\n        marginVertical: 5,\n        height: 20,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    errorMsgStyle: {\n        textAlign: 'center',\n        color: COLORS.primary,\n        fontSize: 15\n    },\n    buttons: {\n        backgroundColor: COLORS.primary,\n        padding: 10,\n        borderRadius: 5,\n        marginBottom: 5,\n        marginTop: 15,\n    },\n    text: {\n        fontSize: 15\n    }\n});","import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, FlatList, TextInput, ListRenderItem, ActivityIndicator } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { COLORS } from './Styles';\n\ninterface State {\n    state: string\n}\ninterface Props {\n    getState: (param: string) => void\n}\n\nconst StateModalContent: React.FC<Props> = ({ getState }) => {\n\n    const [chooseState, setChooseState] = useState<State>({ state: 'État' });\n\n\n    const getStateFilter = () => {\n\n        StateList();\n    }\n\n    const StateList = () => {\n        return (\n            <View>\n                <View style={{ height: 200 }}>\n                    <View>\n                        < TouchableOpacity\n                            style={styles.itemCategory}\n                            onPress={() => {\n                                setChooseState({ state: 'Comme neuf' })\n                            }}\n                        >\n                            <View>\n                                <Text >Comme neuf</Text>\n                            </View>\n                            <View>\n                                {(chooseState.state == 'Comme neuf') &&\n                                    <Ionicons name=\"checkmark\" size={24} color={COLORS.success} />\n                                }\n                            </View>\n                        </TouchableOpacity>\n                    </View>\n                    <View>\n                        < TouchableOpacity\n                            style={styles.itemCategory}\n                            onPress={() => {\n                                setChooseState({ state: 'Bon état' });\n                                getStateFilter();\n                            }}\n                        >\n                            <View>\n                                <Text style={styles.text}>Bon état</Text>\n                            </View>\n                            <View>\n                                {(chooseState.state == 'Bon état') &&\n                                    <Ionicons name=\"checkmark\" size={24} color={COLORS.success} />\n                                }\n                            </View>\n                        </TouchableOpacity>\n                    </View>\n                    <View>\n                        < TouchableOpacity\n                            style={styles.itemCategory}\n                            onPress={() => {\n                                setChooseState({ state: 'État Moyen' }); getStateFilter();\n\n                            }}\n                        >\n                            <View>\n                                <Text style={styles.text}>État Moyen</Text>\n                            </View>\n                            <View>\n                                {(chooseState.state == 'État Moyen') &&\n                                    <Ionicons name=\"checkmark\" size={24} color={COLORS.success} />\n                                }\n                            </View>\n                        </TouchableOpacity>\n                    </View>\n                    <View>\n                        < TouchableOpacity\n                            style={styles.itemCategory}\n                            onPress={() => {\n                                setChooseState({ state: 'À bricoler' }); getStateFilter();\n\n                            }}\n                        >\n                            <View>\n                                <Text style={styles.text}>À bricoler</Text>\n                            </View>\n                            <View>\n                                {(chooseState.state == 'À bricoler') &&\n                                    <Ionicons name=\"checkmark\" size={24} color={COLORS.success} />\n                                }\n                            </View>\n                        </TouchableOpacity>\n                    </View>\n\n                </View>\n                <TouchableOpacity\n                    style={styles.buttons}\n                    onPress={() => {\n                        getState(chooseState.state);\n                    }}>\n                    <Text style={{ fontSize: 20, color: COLORS.secondary, textAlign: 'center' }}>\n                        Appliquer\n                    </Text>\n                </TouchableOpacity>\n\n            </View >\n        );\n    }\n\n\n    return (\n        <View >\n            <StateList />\n        </View >\n    );\n}\n\n\n\nexport default StateModalContent;\nconst styles = StyleSheet.create({\n    itemCategory: {\n        padding: 5,\n        marginVertical: 5,\n        height: 25,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n\n    buttons: {\n        backgroundColor: COLORS.primary,\n        padding: 10,\n        borderRadius: 5,\n        marginBottom: 5,\n        marginTop: 15,\n    },\n    text: {\n        fontSize: 18\n    }\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, Alert, View, TouchableOpacity, Image, TextInput, ScrollView } from 'react-native';\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { v4 } from 'uuid';\nimport NsPropsType from '../routes/propsType';\nimport Modal from 'modal-enhanced-react-native-web';\n\nimport { COLORS } from '../components/Styles';\nimport NsOffer from '../models/NsOffer';\nimport NsCategory from '../models/NsCategory';\nimport NsAddress from '../models/NsAddress';\nimport NsUser from '../models/NsUser';\nimport NsGeo from '../models/NsGeo';\nimport AddressModalContent from '../components/AddressModalContent';\nimport CategoriesModalContent from '../components/CategoriesModalContent';\nimport StateModalContent from '../components/StateModalContent';\nimport { offerService } from '../services/offerService';\n\n\ninterface IPicture {\n    id: string;\n    uri: string;\n}\n\nconst AddScreen: React.FC<NsPropsType.CreateProps> = ({ navigation, route }) => {\n\n    const [modalChoice, setModalChoice] = useState(false);\n    const [modalCategories, setModalCategories] = useState(false);\n    const [modalState, setModalState] = useState(false);\n    const [modalAddress, setModalAddress] = useState(false);\n    const [images, setImages] = useState<IPicture[]>([]);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [offer, setOffer] = useState<NsOffer.IOfferDataIn>({ display_mail: false, display_phone: false } as NsOffer.IOfferDataIn);\n    const [address, setAddress] = useState<NsAddress.IAddress>({} as NsAddress.IAddress);\n    const [offerCategory, setOfferCategory] = useState('category');\n    const [offerState, setOfferState] = useState('state');\n    const [chooseAddress, setChooseAddress] = useState('Adresse');\n\n    const [displayPhone, setDisplayPhone] = useState('Non');\n    const [displayMail, setDisplayMail] = useState('Non');\n\n\n    const pickFromGallery = async () => {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n            Alert.alert('Sorry, we need camera roll permissions to make this work!');\n        } else {\n\n            let result = await ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 0.5,\n            });\n\n            console.log(result);\n\n            /* Insert the picture in the array */\n            if (!result.cancelled) {\n                setImages([...images, {\n                    id: v4(),\n                    uri: result.uri\n                }]);\n            }\n\n            /* Hide the access to galery ou camera */\n            setModalChoice(false);\n            if (images.length > 1) {\n                setModalChoice(false);\n            }\n        }\n    };\n\n    const pickFromCamera = async () => {\n        const { status } = await ImagePicker.requestCameraPermissionsAsync();\n        if (status !== 'granted') {\n            Alert.alert('Sorry, we need camera roll permissions to make this work!');\n        } else {\n\n            let result = await ImagePicker.launchCameraAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 0.5,\n            });\n\n            /* Insert the picture in the array */\n            if (!result.cancelled) {\n                setImages([...images, {\n                    id: v4(),\n                    uri: result.uri\n                }]);\n            }\n\n            /* Hide the access to galery ou camera */\n            if (images.length > 1) {\n                setModalChoice(false);\n            }\n        }\n    };\n\n    /* Delete Picture */\n    const handleDeletePicture = (id: string) => {\n        const newList = images.filter((item) => item.id !== id);\n        setImages(newList);\n    }\n\n    const handleTitle = (text: string) => {\n        const newOffer: NsOffer.IOfferDataIn = offer;\n        newOffer.label = text;\n        setOffer(newOffer);\n        setTitle(text);\n    };\n\n    const handleDescription = (text: string) => {\n        const newOffer: NsOffer.IOfferDataIn = offer;\n        newOffer.description = text;\n        setOffer(newOffer);\n        setDescription(text);\n    };\n\n    const handleState = (offerState: string) => {\n        setOfferState(offerState);\n        const newOffer: NsOffer.IOfferDataIn = offer;\n        newOffer.state = offerState;\n        setOffer(newOffer);\n        setModalState(false);\n    }\n\n    const handleCategory = (c: NsCategory.ICategory) => {\n        const newOffer: NsOffer.IOfferDataIn = offer;\n        newOffer.category = c.id;\n        setOffer(newOffer);\n        setOfferCategory(c.label);\n        setModalCategories(false);\n    }\n\n    const handleAddress = (a: NsGeo.IGeocodage) => {\n\n        if (a.properties.housenumber) {\n            setModalAddress(false);\n            setAddress({\n                city: a.properties.city,\n                number: a.properties.housenumber,\n                street: a.properties.street,\n                zipcode: a.properties.postcode,\n                complement: a.properties.context,\n                latitude: a.geometry.coordinates[1],\n                longitude: a.geometry.coordinates[0],\n            });\n\n            setChooseAddress(a.properties.label);\n\n            const newOffer: NsOffer.IOfferDataIn = offer;\n            newOffer.exchange_address = {\n                city: a.properties.city,\n                number: a.properties.housenumber,\n                street: a.properties.street,\n                zipcode: a.properties.postcode,\n                complement: a.properties.context,\n                latitude: a.geometry.coordinates[1],\n                longitude: a.geometry.coordinates[0],\n            }\n            newOffer.is_owner_address = false;\n            setOffer(newOffer);\n        }\n\n    }\n\n    const ModalPicture = () => (\n        <Modal\n            isVisible={modalChoice}\n            onBackdropPress={() => setModalChoice(false)}\n            style={{ margin: 0, justifyContent: 'flex-end' }}>\n            <View style={styles.modalViewChoice}>\n                <View style={styles.viewAllButtons}>\n                    <TouchableOpacity\n                        style={styles.buttons}\n                        onPress={() => pickFromCamera()}\n                    >\n                        <View style={styles.viewButtons}>\n                            <Ionicons name=\"camera-outline\" size={24} color='#fff' />\n                            <Text style={styles.textStyle}>Camera</Text>\n                        </View>\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                        style={styles.buttons}\n                        onPress={() => pickFromGallery()}\n                    >\n                        <View style={styles.viewButtons}>\n                            <Ionicons name=\"images-outline\" size={24} color='#fff' />\n                            <Text style={styles.textStyle}>Galerie</Text>\n                        </View>\n                    </TouchableOpacity>\n                </View>\n                <View style={{ marginTop: 10, marginBottom: 20, paddingHorizontal: 25 }}>\n                    <TouchableOpacity style={styles.buttons} onPress={() => setModalChoice(false)}>\n                        <View style={styles.viewButtons}>\n                            <Text style={{ ...styles.textStyle, fontWeight: 'bold', fontSize: 20, color: COLORS.secondary }}>Fermer</Text>\n                        </View>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </Modal>\n    );\n\n    const ModalCategories = () => (\n        <Modal\n            isVisible={modalCategories}\n            onBackdropPress={() => setModalCategories(false)}\n            style={{ margin: 0, justifyContent: 'flex-end' }}>\n            <View style={styles.modalViewOptions} >\n                <Text style={styles.titleModal}>Catégories</Text>\n\n                <CategoriesModalContent getCategory={(c) => handleCategory(c)} />\n\n            </View>\n        </Modal>\n    );\n\n    const ModalState = () => (\n        <Modal\n            isVisible={modalState}\n            onBackdropPress={() => setModalState(false)}\n            style={{ margin: 0, justifyContent: 'flex-end' }}>\n            <View style={styles.modalViewOptions}>\n                <Text style={styles.titleModal}>État</Text>\n                <StateModalContent getState={(s) => handleState(s)} />\n            </View>\n        </Modal >\n\n    );\n\n    const ModalAddress = () => (\n        <Modal\n            isVisible={modalAddress}\n            onBackdropPress={() => setModalAddress(false)}\n            style={{ margin: 0, justifyContent: 'flex-end' }}>\n            <View style={{ flex: 1 }}>\n\n                <View style={styles.modalAddressHeader}>\n                    <Text style={{ fontSize: 20, color: COLORS.secondary, textAlign: 'center' }}>Localisation</Text>\n                    <TouchableOpacity\n                        style={styles.closeButton}\n                        onPress={() => {\n                            setModalAddress(false)\n                        }}>\n                        <Text style={{ fontSize: 15, color: COLORS.secondary, textAlign: 'center' }}>\n                            X\n                        </Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={styles.modalViewAdress}>\n\n                    <AddressModalContent getAddress={(a) => handleAddress(a)} />\n\n                </View>\n            </View>\n        </Modal >\n    );\n\n    const user: NsUser.IUserData = {} as NsUser.IUserData\n    useEffect(() => {\n        if (user.mail) {\n            setAddress({\n                id: user.address.id,\n                city: user.address.city,\n                number: user.address.number,\n                street: user.address.street,\n                zipcode: user.address.zipcode,\n                complement: user.address.complement,\n                latitude: user.address.latitude,\n                longitude: user.address.longitude,\n            });\n            const newOffer: NsOffer.IOfferDataIn = offer;\n            newOffer.is_owner_address = true;\n            setOffer(newOffer);\n\n        }\n        /*  return () => {\n             cleanup\n         } */\n    }, []);\n\n    const validateForm = (): Boolean => {\n\n        const {\n            label,\n            state,\n            images,\n            category,\n        } = offer;\n\n        if (images.length == 0) {\n            Alert.alert('Veuillez ajouter au moins une image!');\n            return false;\n        }\n        if (!label || label.length == 0 || label == ' ') {\n            Alert.alert('Veuillez remplir le champ titre');\n            return false;\n        }\n\n        if (!state || state.length == 0 || state == ' ') {\n            Alert.alert('Veuillez choisir un état!');\n            return false;\n        }\n        if (!category) {\n            Alert.alert('Veuillez choisir une catégorie!');\n            return false;\n        }\n\n        return true\n    }\n\n    /* Submit Offer */\n    const handleSubmitOffer = async () => {\n\n        let pictures = images.map((e) => {\n            return e.uri\n        });\n\n        const newOffer: NsOffer.IOfferDataIn = offer;\n\n        newOffer.images = pictures;\n        newOffer.owner = 1; // id user owner\n        newOffer.display_mail = (displayMail == 'Oui') ? true : false;\n        newOffer.display_phone = (displayPhone == 'Oui') ? true : false;\n\n        setOffer(newOffer);\n\n        if (validateForm()) {\n\n            const result = await offerService.postOffer(offer);\n\n            if (result !== null) {\n                setImages([]);\n                setOfferCategory('category');\n                setOfferState('state');\n                setChooseAddress('Adresse');\n                setDisplayMail('Non');\n                setDisplayPhone('Non');\n                setTitle('');\n                setDescription('');\n                setAddress({} as NsAddress.IAddress);\n                setOffer({} as NsOffer.IOfferDataIn);\n\n                // Redirect to my Donnations\n                navigation.navigate('ProfileScreen', {\n                    screen: 'MyDonnationsScreen'\n                });\n            }\n        }\n    }\n\n    return (\n        <ScrollView style={styles.centeredView}\n            showsVerticalScrollIndicator={false}>\n            <Text style={{ fontSize: 20, marginVertical: 3 }}>Photos</Text>\n\n            <View style={styles.picturesList}>\n                {images.length > 0 && images.map((item) => {\n                    return (\n                        <View key={item.id}>\n                            <TouchableOpacity\n                                onPress={() => handleDeletePicture(item.id)}\n                                style={styles.deleteButton}\n                                key={item.id}>\n                                <Text style={styles.deleteText}>\n                                    X\n                                </Text>\n                            </TouchableOpacity>\n                            <Image\n                                source={{ uri: item.uri }}\n                                style={styles.imagesStyle} />\n                        </View>\n\n                    );\n                })}\n\n                {images.length < 3 &&\n\n                    <TouchableOpacity style={styles.photoButton}\n                        activeOpacity={0.6}\n                        onPress={() => setModalChoice(true)}>\n                        <Ionicons name=\"camera\" size={60} color=\"#8d99ae\" />\n                    </TouchableOpacity>\n                }\n            </View>\n            <View style={{ marginTop: 5 }}>\n\n                <TextInput\n                    style={styles.input}\n                    onChangeText={handleTitle}\n                    placeholder=\"Titre\"\n                    value={title}\n                />\n                <TextInput\n                    style={styles.input}\n                    onChangeText={handleDescription}\n                    placeholder=\"Description\"\n                    multiline\n                    numberOfLines={4}\n                    value={description}\n                />\n                <TouchableOpacity style={styles.buttonOpenModal} onPress={() => setModalCategories(true)}>\n                    <View style={styles.viewOpenModalButtons}>\n                        {offerCategory == 'category'\n                            ? <Text style={{ fontSize: 20, color: COLORS.darkBlue }}>\n                                Catégories\n                            </Text>\n                            :\n                            <Text style={{ fontSize: 20, color: COLORS.primary }}>\n                                {offerCategory}\n                            </Text>\n                        }\n                        <MaterialIcons name=\"keyboard-arrow-right\" size={24} color={COLORS.primary} />\n                    </View>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.buttonOpenModal} onPress={() => setModalState(true)}>\n                    <View style={styles.viewOpenModalButtons}>\n                        {offerState == 'state'\n                            ? <Text style={{ fontSize: 20, color: COLORS.darkBlue }}>\n                                Sélectionnez l'état de votre objet\n                            </Text>\n                            :\n                            <Text style={{ fontSize: 20, color: COLORS.primary }}>\n                                {offerState}\n                            </Text>\n                        }\n                        <MaterialIcons name=\"keyboard-arrow-right\" size={24} color={COLORS.primary} />\n                    </View>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.buttonOpenModal} onPress={() => setModalAddress(true)}>\n                    <View style={styles.viewOpenModalButtons}>\n                        <View style={styles.viewOpenModalButtons}>\n                            <Ionicons name=\"location\" size={24} color={COLORS.primary} />\n                            {address.city\n                                ?\n                                <Text style={{ fontSize: 20, color: COLORS.primary }}>\n                                    {address.number} {address.street}, {address.city}\n                                </Text>\n                                :\n                                <Text style={{ fontSize: 20, color: COLORS.darkBlue }}>\n                                    {chooseAddress}\n                                </Text>\n                            }\n                        </View>\n                        <View>\n                            <MaterialIcons name=\"keyboard-arrow-right\" size={24} color={COLORS.primary} />\n                        </View>\n                    </View>\n                </TouchableOpacity>\n            </View>\n            <View style={{ flexDirection: 'row', justifyContent: 'space-around' }} >\n                <View style={{ alignItems: 'center' }}>\n                    <Text style={{ marginVertical: 10, fontSize: 16 }}>Afficher mon téléphone</Text>\n                    <TouchableOpacity\n                        style={(displayPhone == 'Oui') ?\n                            styles.toggleButtonsOn : styles.toggleButtonsOff\n                        }\n                        onPress={() => {\n                            if (displayPhone == 'Oui') {\n                                setDisplayPhone('Non')\n                            } else {\n                                setDisplayPhone('Oui');\n                            }\n                        }}\n                    >\n                        <View>\n                            <Text style={(displayPhone == 'Oui') ? styles.toggleTextOn : styles.toggleTextOff}>{displayPhone}</Text>\n                        </View>\n                    </TouchableOpacity>\n                </View>\n                <View style={{ alignItems: 'center' }} >\n                    <Text style={{ marginVertical: 10, fontSize: 16 }}>Afficher mon email</Text>\n                    <TouchableOpacity\n                        style={\n                            (displayMail == 'Oui') ?\n                                styles.toggleButtonsOn : styles.toggleButtonsOff\n                        }\n                        onPress={() => {\n                            if (displayMail == 'Oui') {\n                                setDisplayMail('Non')\n                            } else {\n                                setDisplayMail('Oui');\n                            }\n                        }}\n                    >\n                        <View>\n                            <Text style={(displayMail == 'Oui') ? styles.toggleTextOn : styles.toggleTextOff}>{displayMail}</Text>\n                        </View>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n            <View style={{ marginBottom: 20, paddingHorizontal: 25 }}>\n                <TouchableOpacity style={styles.buttons} onPress={() => {\n                    handleSubmitOffer();\n\n                }}>\n                    <View style={styles.viewButtons}>\n                        <Text style={{ ...styles.textStyle, fontWeight: 'bold', fontSize: 20, color: COLORS.secondary }}>CRÉER</Text>\n                    </View>\n                </TouchableOpacity>\n            </View>\n\n            {/* Modals */}\n            <ModalPicture />\n            <ModalCategories />\n            <ModalState />\n            <ModalAddress />\n        </ScrollView >\n    )\n}\n\n\nexport default AddScreen;\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        padding: 10,\n        backgroundColor: COLORS.secondary\n    },\n    modalViewChoice: {\n        backgroundColor: COLORS.secondary,\n        flex: 0.5\n    },\n    photoButton: {\n        width: 70,\n        height: 85,\n        borderWidth: 2,\n        borderColor: COLORS.darkGrey,\n        borderStyle: 'dotted',\n        borderRadius: 8,\n        padding: 5,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    imagesStyle: {\n        width: 90,\n        height: 100,\n        borderRadius: 5,\n        marginRight: 5,\n    },\n    buttons: {\n        backgroundColor: COLORS.primary,\n        padding: 10,\n        borderRadius: 5,\n        marginBottom: 15,\n        marginTop: 15,\n    },\n    viewAllButtons: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        marginTop: 20\n    },\n    viewButtons: {\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    },\n    viewOpenModalButtons: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    picturesList: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    deleteButton: {\n        borderRadius: 25,\n        borderColor: COLORS.primary,\n        borderWidth: 1,\n        position: 'absolute',\n        top: -15,\n        elevation: 2,\n        alignSelf: 'flex-end',\n        backgroundColor: COLORS.secondary,\n        width: 25,\n        zIndex: 1\n    },\n    deleteText: {\n        padding: 3,\n        color: COLORS.primary,\n        textAlign: 'center'\n    },\n    textStyle: {\n        color: COLORS.secondary,\n        marginLeft: 3\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        borderColor: COLORS.darkGrey,\n        borderRadius: 5,\n        padding: 10,\n        marginVertical: 10\n    },\n    buttonOpenModal: {\n        backgroundColor: COLORS.secondary,\n        borderColor: COLORS.darkGrey,\n        padding: 5,\n        borderRadius: 5,\n        marginVertical: 10,\n        borderWidth: 1,\n    },\n    itemCategory: {\n        backgroundColor: COLORS.lightGrey,\n        padding: 5,\n        marginVertical: 5,\n        height: 20,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    titleModal: {\n        fontSize: 20,\n        fontWeight: 'bold'\n    },\n    errorMsgStyle: {\n        textAlign: 'center',\n        color: COLORS.primary,\n        fontSize: 15\n    },\n    modalViewOptions: {\n        backgroundColor: COLORS.secondary,\n        padding: 20,\n        flex: 0.6\n    },\n    modalViewAdress: {\n        backgroundColor: COLORS.secondary,\n        padding: 20,\n        flex: 1\n    },\n    modalAddressHeader: {\n        backgroundColor: COLORS.primary,\n        height: 60,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: 20,\n    },\n    closeButton: {\n        borderRadius: 50,\n        width: 26,\n        borderColor: COLORS.secondary,\n        borderWidth: 2,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    toggleButtonsOff: {\n        backgroundColor: COLORS.secondary,\n        borderColor: COLORS.primary,\n        borderWidth: 1,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 15,\n        marginTop: 15,\n        width: 50,\n    },\n    toggleButtonsOn: {\n        backgroundColor: COLORS.primary,\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 15,\n        marginTop: 15,\n        width: 50,\n    },\n    toggleTextOn: {\n        color: COLORS.secondary,\n        textAlign: 'center'\n    },\n    toggleTextOff: {\n        color: COLORS.primary,\n        textAlign: 'center'\n    },\n});","import React, { useState, useEffect, useCallback } from 'react'\nimport { View, Text, StyleSheet, ActivityIndicator, FlatList, TextInput, ListRenderItem, Image, TouchableHighlight } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { COLORS } from '../components/Styles';\nimport NsPropsType from '../routes/propsType';\nimport NsCategory from '../models/NsCategory';\nimport { categoryService } from '../services/categoryService';\n\n\nconst SearchScreen: React.FC<NsPropsType.SearchProps> = ({ navigation, route }: NsPropsType.SearchProps) => {\n\n    const [errorFound, setErrorFound] = useState(false);\n\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const [categories, setCategories] = useState<NsCategory.ICategory[]>([]);\n    useEffect(() => {\n\n        const refresh = async (): Promise<void> => {\n\n            try {\n\n                const data = await categoryService.getCategories();\n                setCategories(data);\n\n                if (!data) {\n                    setErrorFound(true);\n                }\n                if (data.length == 0) {\n                    setTimeout(function () { setErrorFound(true); }, 3000);\n                }\n\n            } catch (error) {\n                console.log('Error', error.message);\n                setErrorFound(true);\n            }\n        };\n\n        refresh();\n\n    }, []);\n    /* const { data, error } = useFetchCategories();\n\n    if (error) {\n        console.log(error)\n        setErrorFound(true);\n    } */\n\n    const CategoryComponent: ListRenderItem<NsCategory.ICategory> = ({ item }) => (\n        <TouchableHighlight key={item.id}\n            style={styles.itemContainerStyle}\n            onPress={() => navigation.navigate('SearchListScreen', {\n                categoryId: item.id,\n                categoryLabel: item.label\n            }\n            )}\n        >\n            <View>\n                {(item.image_url)\n                    ?\n                    <Image style={styles.imageStyle} source={{ uri: item.image_url }} />\n                    :\n                    <Image style={styles.imageStyle} source={require('../assets/logo.png')} />\n                }\n                <Text style={styles.labelCategoryStyle}>{item.label} </Text>\n            </View>\n\n        </TouchableHighlight>\n    );\n    return (\n        <View style={styles.container}>\n            <View style={styles.searchView}>\n                <Ionicons name=\"search\" size={24} color={COLORS.secondary} />\n                <TextInput style={styles.searchInput}\n                    inlineImageLeft='search_icon'\n                    onFocus={() => navigation.navigate('SearchListScreen', {\n                        categoryId: undefined,\n                        categoryLabel: undefined\n                    })}\n                    placeholder='Rechercher un don' />\n            </View>\n\n            <View style={styles.containerListOffers}>\n\n                {(categories && categories?.length > 0) ?\n                    <FlatList\n                        data={categories}\n                        renderItem={CategoryComponent}\n                        keyExtractor={(item) => item.id.toString()}\n                        numColumns={2}\n                        showsVerticalScrollIndicator={false}\n                    />\n                    :\n                    <View style={{ justifyContent: 'center', flex: 0.5 }} >\n                        {errorFound ?\n                            <View >\n                                <Text style={styles.errorMsgStyle}>\n                                    Pardon!\n                                </Text>\n                                <Text style={styles.errorMsgStyle}>\n                                    Pour le moment, nous ne pouvons pas partager le monde avec vous.\n                                </Text>\n                                <Text style={styles.errorMsgStyle}>\n                                    Essayez plus tard !\n                                </Text>\n                            </View>\n                            :\n                            <ActivityIndicator size=\"large\" color=\"#e9383f\" />\n                        }\n                    </View>\n                }\n            </View>\n        </View >\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    containerListOffers: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        padding: 10\n    },\n    errorMsgStyle: {\n        textAlign: 'center',\n        color: '#e9383f',\n        fontSize: 15\n    },\n    searchView: {\n        padding: 10,\n        paddingTop: 20,\n        flex: 0.1,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: COLORS.primary,\n        elevation: 2\n    },\n    searchInput: {\n        borderColor: COLORS.secondary,\n        borderWidth: 1,\n        borderRadius: 10,\n        height: 35,\n        width: 300,\n        marginLeft: 10,\n        /*  placeholderTextColor: COLORS.secondary,\n         selectionColor: COLORS.secondary, */\n        color: COLORS.secondary,\n        paddingHorizontal: 10\n    },\n    imageStyle: {\n        width: 170,\n        height: 145,\n    },\n    itemContainerStyle: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 10\n    },\n    labelCategoryStyle: {\n        color: COLORS.primary,\n        textAlign: 'center',\n        fontSize: 15,\n        fontWeight: 'bold'\n    }\n});\n\nexport default SearchScreen;\n\n","export const COLORS = {\n    red1: 'rgb(233, 56, 63)',\n    red2: '#C6110F',\n    white1: '#FFFFFF',\n    white2: '#EDF2F4',\n    whiteBlue: '#DCEAEF',\n    blue1: '#8D99AE',\n    blue2: '#14213D',\n}","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableHighlight } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { TextInput } from \"react-native-paper\";\nimport { COLORS } from \"../../constant/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst UserActionsScreen: React.FC = () => {\n  const [userId, setUserId] = useState(\"1\");\n  const navigation = useNavigation();\n  const my_user: IUser = useSelector((state: UserState) => state.user);\n\n  const onChangeOfferId = (value: string) => {\n    setUserId(value);\n  };\n\n  return (\n    <ScrollView\n      style={{\n        padding: 10,\n        marginBottom: 40,\n      }}\n    >\n      <TextInput\n        style={{\n          height: 40,\n          borderWidth: 1,\n          borderColor: \"black\",\n          borderRadius: 5,\n        }}\n        onChangeText={onChangeOfferId}\n        value={userId.toString()}\n        placeholder=\"User id\"\n      />\n      <TouchableHighlight\n        onPress={() => {\n          navigation.navigate(\"\", {\n            userId: parseInt(userId, 10),\n          });\n        }}\n        style={style.button}\n      >\n        <Text style={{ color: \"white\" }}>MON PROFIL</Text>\n      </TouchableHighlight>\n      <TouchableHighlight\n        onPress={() => {\n          navigation.navigate(\"MyDonnationsScreen\", {\n            userId: parseInt(userId, 10),\n          });\n          // navigation.navigate(\"MyDonnationsScreen\", {\n          //   userId: my_user.id,\n          // });\n        }}\n        style={style.button}\n      >\n        <Text style={{ color: \"white\" }}>MES DONS</Text>\n      </TouchableHighlight>\n      <TouchableHighlight\n        onPress={() => {\n          // navigation.navigate(\"\", {\n          //   userId: parseInt(userId, 10),\n          // });\n          navigation.navigate(\"\", {\n            userId: my_user.id,\n          });\n        }}\n        style={style.button}\n      >\n        <Text style={{ color: \"white\" }}>MES DEMANDES</Text>\n      </TouchableHighlight>\n      <TouchableHighlight\n        onPress={() => {\n          navigation.navigate(\"\", {\n            userId: parseInt(userId, 10),\n          });\n        }}\n        style={style.button}\n      >\n        <Text style={{ color: \"white\" }}>MES FAVORIS</Text>\n      </TouchableHighlight>\n      <TouchableHighlight\n        onPress={() => {\n          navigation.navigate(\"\", {\n            userId: parseInt(userId, 10),\n          });\n        }}\n        style={style.button}\n      >\n        <Text style={{ color: \"white\" }}>PARAMETRES</Text>\n      </TouchableHighlight>\n      <TouchableHighlight\n        onPress={() => {\n          navigation.navigate(\"\", {\n            userId: parseInt(userId, 10),\n          });\n        }}\n        style={style.button}\n      >\n        <Text style={{ color: \"white\" }}>DECONNEXION</Text>\n      </TouchableHighlight>\n    </ScrollView>\n  );\n};\n\nconst style = StyleSheet.create({\n  button: {\n    borderRadius: 5,\n    backgroundColor: COLORS.red1,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 15,\n    margin: 10,\n  },\n});\n\nexport default UserActionsScreen;\n","import * as actionsTypes from './actionsTypes';\n\n\n// ? Recover user exists\n\nexport function addUser(user: IUser) {\n    // user.address = address;\n     console.log(user.address);\n    console.log('adduser');\n    console.log(user);\n    \n    \n    const  action: UserAction = {\n        type: actionsTypes.ADD_USER,\n        user: user\n    }\n    return simulateHttpRequest(action);\n}\n\n// ? Remove user\nexport function removeUser(user: IUser) {\n    const  action: UserAction = {\n        type: actionsTypes.REMOVE_USER,\n        user: user\n    }\n    return simulateHttpRequest(action);\n}\n\n// ? Edit User\nexport function editUser(user: IUser) {\n    console.log('edit user');\n    \n    const  action: UserAction = {\n        type: actionsTypes.EDIT_USER,\n        user: user\n    }\n    return simulateHttpRequest(action);\n}\n\n// ? display User\n// export function displayUser(){\n//     console.log('value user');\n\n//     const action: UserAction = {\n//         type: actionsTypes.GET_USER,\n//         // user: user\n//     }\n//     return simulateHttpRequest(action);\n// }\n\nexport function simulateHttpRequest(action: UserAction){\n    console.log('simulateHttp');\n    \n    return (dispatch: DispatchType) => {\n        setTimeout(()=>{\n            dispatch(action)\n        },500)\n    }\n}","\n// ? Logout\nexport const REMOVE_USER = \"REMOVE_USER\";\n// ? Update\nexport const EDIT_USER = \"EDIT_USER\";\n// ? Login\nexport const ADD_USER = 'ADD_USER';\n// ? Recover User\nexport const GET_USER = 'GET_USER'\n\n\n\n\n","import { store } from \"./../../App\";\n\n// import NsUser from './../models/NsUser';\n// import  IUserData  from './../models/NsUser';\nimport { Address_Complete } from \"./../screens/authScreen/SignUp\";\nconst axios = require(\"axios\");\n\nimport { Dispatch } from \"redux\";\n// import { useDispatch } from 'react-redux';\nimport { addUser } from \"../store/actionsCreator\";\n// import { useCallback } from 'react-redux';\n\n// import { BACK_URI } from 'react-native-dotenv';\n\nrequire(\"dotenv\").config();\n\nconst url = \"http://localhost:3000/\";\n\n// export const signupUser = createAsyncThunk(\n//   'auth/register',\n/*\n * connect: get token and save to store\n * Args:\n *  mail\n *  password\n * Return: 1 if connected or 0 if not\n */\n// Recover Adress request\n\n// ? Login method\n\nasync function login_service(\n  mail: string,\n  password: string,\n  dispatch: Dispatch<any>\n) {\n  // const dispatch: Dispatch<any> = useDispatch();\n  console.log(`auth.service -> login_service: mail: ${mail}`);\n  console.log(`auth.service -> login_service: password: ${password}`);\n  console.log(`auth.service -> login_service: url: ${url + \"auth/login\"}`);\n\n  const loginrequest = await axios({\n    method: \"POST\",\n    url: url + \"auth/login\",\n    data: {\n      mail: mail,\n      password: password,\n    },\n  })\n    .then((response: any) => {\n      console.log(\"am login_service\");\n      console.log(response.data);\n\n      if (response.status == 200) {\n        console.log(\"login service in if\");\n\n        console.log(\"login service after dispatch\");\n\n        const address: IAddress = {\n          street: response.data.address.street,\n          city: response.data.address.city,\n          zipcode: response.data.address.zipcode,\n          complement: response.data.address.complement,\n          number: response.data.address.number,\n          latitude: response.data.address.latitude,\n          longitude: response.data.address.longitude,\n        };\n        const user: IUser = {\n          id: response.data.user.id,\n          first_name: response.data.user.first_name,\n          last_name: response.data.user.last_name,\n          full_name: response.data.user.full_name,\n          phone: response.data.user.phone,\n          url_avatar: response.data.user.url_avatar,\n          credit: response.data.user.credit,\n          mail: response.data.user.mail,\n          note: response.data.user.note,\n          number_notes: response.data.user.number_notes,\n          address: address,\n          accessToken: response.data.accessToken,\n          refreshToken: response.data.refreshToken,\n        };\n\n        dispatch(addUser(user));\n        //  dispatch(displayUser())\n        console.log(\"Display user: \", store.getState().user);\n        console.log();\n\n        // window.localStorage.getItem('accesToken');\n        console.log(\"login service SUCCESS\");\n      }\n    })\n    .catch((error: any) => {\n      console.log(error);\n    });\n    console.log('HHHHHHHH');\n    \nconsole.log(loginrequest);\n\n  return loginrequest;\n}\n\n// }\n// ? Register method\n\nconst register_service = async (\n  fistname: string,\n  lastname: string,\n  phone: string,\n  credit: number,\n  mail: string,\n  password: string,\n  address: Address_Complete\n) => {\n  console.log(url + \"auth/register\");\n  const registerrequest = await axios({\n    method: \"POST\",\n    url: url + \"auth/register\",\n    data: {\n      first_name: fistname,\n      last_name: lastname,\n      phone: phone,\n      mail: mail,\n      password: password,\n      status: \"active\",\n      credit: credit,\n      street: address.street,\n      city: address.city,\n      zipcode: address.zipcode,\n      complement: address.complement,\n      number: address.number,\n      latitude: 0,\n      longitude: 0,\n    },\n  })\n    .then((response: any) => {\n      if (response.status == 200) {\n        window.localStorage.setItem(\"accesToken\", response.data);\n        console.log(response.data);\n        console.log(address.city);\n      }\n    })\n    .catch((error: any) => {\n      console.log(\"not working\");\n      console.log(error);\n    });\n    console.log(registerrequest);\n    \n    return registerrequest;\n};\n\n// ? Logout method\nconst logout_service = () => {\n  const logoutrequest = axios({\n    method: \"POST\",\n    url: url + \"auth/logout\",\n  })\n    .then((disconnect: any) => {\n      localStorage.removeItem(\"accessToken\");\n      console.log(disconnect);\n    })\n    .catch((error: any) => {\n      console.log(\"not work\");\n    });\n  //  .post(url + 'auth/logout', {\n\n  //  })\n};\n// ? Update method\n\nconst update_service = () => {\n  const updaterequest = axios({\n    method: \"POST\",\n    url: url + \"auth/update\",\n  }).then((updateuser: any) => {\n    localStorage.setItem(\"accessToken\", updateuser.data);\n    console.log(updateuser.data);\n  });\n};\n\nexport const authService = { login_service, register_service, logout_service };\n","import NsCategory from \"../models/NsCategory\";\nimport NsOffer from \"../models/NsOffer\";\nimport NsUser from \"../models/NsUser\";\n\nenum Status {\n  EnCours = \"En cours(ouverte)\",\n  Donne = \"Donné(fermée)\",\n  Bannie = \"Bannie(fermée)\",\n}\n\nenum State {\n  CommeNeuf = \"Comme neuf\",\n  BonEtat = \"Bon état\",\n  EtatMoyen = \"État Moyen\",\n  ABricoler = \"À bricoler\",\n}\n\nexport const initOffer = (): NsOffer.IOfferData => {\n  const offer: NsOffer.IOfferData = {\n    id: 0,\n    label: \"\",\n    description: \"\",\n    display_mail: false,\n    display_phone: false,\n    exchange_address: {\n      number: 0,\n      street: \"\",\n      city: \"\",\n      complement: \"\",\n      longitude: 0,\n      latitude: 0,\n      distance: 0,\n      zipcode: \"\",\n    },\n    status: Status.EnCours,\n    state: State.CommeNeuf,\n    // category: {\n    //   id: 1,\n    //   label: \"Informatique\",\n    //   image_url: \"\",\n    // },\n    owner: {\n      id: 0,\n      user_name: \"\",\n      mail: \"\",\n      note: 0,\n      phone: \"\",\n    },\n    created_at: \"\",\n    pictures: [],\n    wanted_by_users: [],\n    is_owner_address: false,\n    category_id: 0,\n  };\n  return offer;\n};\n\nexport const initUserWantedOffer = (): NsUser.IUserWantedOfferData => {\n  const user: NsUser.IUserWantedOfferData = {\n    id: 1,\n    first_name: \"\",\n    last_name: \"\",\n    mail: \"\",\n    phone: \"\",\n    note: \"\",\n    user_want_offers: {\n      validate_by_aquirer: false,\n      validate_by_owner: false,\n    },\n  };\n  return user;\n};\n\nexport const initStates = () => {\n  const states = [\n    { label: \"Comme neuf\", value: \"Comme neuf\" },\n    { label: \"Bon état\", value: \"Bon état\" },\n    { label: \"État moyen\", value: \"État Moyen\" },\n    { label: \"À bricoler\", value: \"À bricoler\" },\n  ];\n  return states;\n};\n\nexport const initCategories = (): NsCategory.ICategory[] => {\n  const categories: NsCategory.ICategory[] = [\n    { id: 1, label: \"Informatique\" },\n    { id: 2, label: \"Jeux-vidéo\" },\n    { id: 3, label: \"Art\" },\n    { id: 4, label: \"DVD et Blu-Ray\" },\n    { id: 5, label: \"Musique\" },\n    { id: 6, label: \"Jouets\" },\n    { id: 7, label: \"Meubles\" },\n    { id: 8, label: \"Vêtements et chaussures\" },\n    { id: 9, label: \"Sports et loisirs\" },\n    { id: 10, label: \"Le monde animal\" },\n    { id: 11, label: \"Autre\" },\n  ];\n  return categories;\n};\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  Button,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport { authService } from \"../../services/auth.service\";\nimport { StackActions } from \"@react-navigation/native\";\nimport ProfileStack from \"../../routes/navigator\";\n\nimport { Dispatch } from \"redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HomeScreen from \"../HomeScreen\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { COLORS } from \"../../constant/colors\";\n\nexport const SignInScreen: React.FC = ({ navigation }: any) => {\n  // ? Initialize State value\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // Retrieve store value\n  const my_user: IUser = useSelector((state: UserState) => state.user);\n  const navigationHook = useNavigation();\n\n  const dispatch: Dispatch<any> = useDispatch();\n\n  const signIn = () => {\n    authService.login_service(email, password, dispatch);\n\n    navigationHook.navigate(\"ProfileScreen\");\n\n    // const pushAction = StackActions.push('ProfileScreen');\n\n    // navigation.dispatch(pushAction);\n  };\n\n  // const test = () => {\n  //   console.log(window.localStorage.getItem('accessToken'));\n  // }\n\n  console.log(\"DONE\");\n  return (\n    <ScrollView\n      style={{ marginHorizontal: 20, marginTop: 10, marginBottom: 40 }}\n    >\n      {/* <Text>Last name: {my_user.last_name}</Text>\n      <Text>Token: {my_user.accessToken}</Text>\n      <Text>Token: {my_user.refreshToken}</Text> */}\n      <View>\n        {/* <View style={styles.inputView}>\n          <TextInput\n            testID={\"email\"}\n            style={styles.TextInput}\n            placeholder=\"Email\"\n            placeholderTextColor=\"#E9383F\"\n            onChangeText={(email) => setEmail(email)}\n          />\n        </View> */}\n        {/* <View style={styles.inputView}>\n          <TextInput\n            testID={\"password\"}\n            style={styles.TextInput}\n            placeholder=\"Password\"\n            placeholderTextColor=\"#E9383F\"\n            secureTextEntry={true}\n            onChangeText={(password) => setPassword(password)}\n          />\n        </View> */}\n        <View style={styles.contentInput}>\n          <Text style={styles.labelInput}>EMAIL</Text>\n          <TextInput\n            testID={\"email\"}\n            style={styles.input}\n            onChangeText={(email) => setEmail(email)}\n            placeholder=\"Email\"\n          />\n        </View>\n        <View style={styles.contentInput}>\n          <Text style={styles.labelInput}>MOT DE PASSE</Text>\n          <TextInput\n            testID={\"password\"}\n            style={styles.input}\n            onChangeText={(password) => setPassword(password)}\n            secureTextEntry={true}\n            placeholder=\"Mot de passe\"\n          />\n        </View>\n        <View style={{ marginTop: 20 }}>\n          <TouchableOpacity onPress={signIn} style={styles.loginBtn}>\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>LOGIN</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.loginBtn}>\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\n              MOT DE PASSE OUBLIE\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.loginBtn}\n            onPress={() => {\n              navigationHook.navigate(\"SignUpScreen\");\n            }}\n          >\n            <Text style={{ color: \"white\", fontWeight: \"bold\" }}>\n              CREER UN COMPTE\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      {/* <Button title='cc' onPress={test}>test</Button> */}\n    </ScrollView>\n  );\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       addUser: user => dispatch(addUser(user))\n//   }\n// };\n\n// export default connect(null, mapDispatchToProps)(SignInScreen);\n\nconst styles = StyleSheet.create({\n  logo: {\n    width: \"20%\",\n    height: \"20%\",\n  },\n  inputView: {\n    backgroundColor: \"#E9383F\",\n    borderRadius: 30,\n    // width: \"70%\",\n    height: 45,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n\n  TextInput: {\n    width: \"100%\",\n    height: 50,\n    padding: 10,\n  },\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n  loginBtn: {\n    borderRadius: 25,\n    padding: 15,\n    marginVertical: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#E9383F\",\n  },\n  contentInput: {\n    marginVertical: 10,\n  },\n  labelInput: {\n    marginBottom: 5,\n    fontWeight: \"bold\",\n    color: COLORS.red1,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: COLORS.red1,\n    borderRadius: 5,\n    padding: 15,\n  },\n});\n","import { useNavigation } from \"@react-navigation/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { View, Text, Button, StyleSheet, ScrollView } from \"react-native\";\nimport { COLORS } from \"../constant/colors\";\nimport UserActionsScreen from \"./profile/UserActionsScreen\";\nimport { useSelector } from \"react-redux\";\nimport { SignInScreen } from \"./authScreen/SignIn\";\n\nconst ProfileScreen: React.FC = () => {\n  const [render, setRender] = useState<JSX.Element>(<View></View>);\n  const navigation = useNavigation();\n  const my_user: IUser = useSelector((state: UserState) => state.user);\n\n  useEffect(() => {\n    console.log(\"1\");\n    generateView();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"2\");\n    generateView();\n  }, [my_user]);\n\n  useEffect(() => {\n    console.log(\"3\");\n    const unsubscribe = navigation.addListener(\"focus\", () => {});\n    return unsubscribe;\n  }, [navigation]);\n\n  console.log(\"USER\" + my_user.accessToken);\n\n  const generateView = () => {\n    const result: JSX.Element = (\n      <View>\n        {/* <View style={style.button}>\n          <Button\n            title=\"LOGIN\"\n            color={COLORS.red1}\n            onPress={() => navigation.navigate(\"SignInScreen\")}\n          />\n        </View>\n        <View style={style.button}>\n          <Button\n            title=\"REGISTER\"\n            color={COLORS.red1}\n            onPress={() => navigation.navigate(\"SignUpScreen\")}\n          />\n        </View> */}\n        {my_user.accessToken ? <UserActionsScreen /> : <SignInScreen />}\n      </View>\n    );\n    setRender(result);\n  };\n\n  return <ScrollView>{render}</ScrollView>;\n};\n\nconst style = StyleSheet.create({\n  button: {\n    marginVertical: 10,\n  },\n});\n\nexport default ProfileScreen;\n","import { useFocusEffect, useNavigation } from \"@react-navigation/native\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  FlatList,\n  ListRenderItem,\n  Image,\n  ActivityIndicator,\n  TouchableOpacity,\n} from \"react-native\";\nimport { COLORS } from \"../../constant/colors\";\nimport { DateHelper } from \"../../helpers/DateHelper\";\nimport NsOffer from \"../../models/NsOffer\";\nimport config from \"./../../config.json\";\n\nconst MyDonnationsScreen: React.FC = ({ route }: any) => {\n  const [listOffers, setListOffers] = useState<NsOffer.IOfferData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {\n      getListOffers();\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  const getListOffers = async () => {\n    const { userId } = route.params;\n    await fetch(`http://${config.ip}:${config.port}/userWantOffers/createdBy/${userId}`)\n      .then((res) => res.json())\n      .then((result: NsOffer.IOfferData[]) => {\n        setListOffers(result);\n        setLoading(false);\n      });\n  };\n\n  const goToDetail = (offer: NsOffer.IOfferData) => {\n    navigation.navigate(\"OfferActionsScreen\", {\n      currentOffer: offer,\n    });\n  };\n\n  const itemOffer: ListRenderItem<NsOffer.IOfferData> = ({ item }) => (\n    <TouchableOpacity style={style.item} onPress={() => goToDetail(item)}>\n      <View style={{ flex: 1, flexDirection: \"row\" }}>\n        <View style={style.contentImage}>\n          {item.pictures.length > 0 ? (\n            <Image\n              style={style.image}\n              source={{\n                uri: `http://${config.ip}:${config.port}/pictures/${item.pictures[0].url}`,\n              }}\n            />\n          ) : (\n            <Image\n              style={style.image}\n              source={require(\"../../assets/logo.png\")}\n            />\n          )}\n        </View>\n        <View style={style.contentText}>\n          <Text\n            style={{ fontSize: 12, color: COLORS.red2, fontWeight: \"bold\" }}\n          >\n            {item.label.toUpperCase()}\n          </Text>\n          <Text style={style.text}>\n            {DateHelper.getNumberOfDays(item.created_at)}\n          </Text>\n          {item.wanted_by_users && item.wanted_by_users?.length > 0 ? (\n            <Text style={style.text}>\n              {item.wanted_by_users?.length + \" demandes en cours\"}\n            </Text>\n          ) : (\n            <Text style={style.text}>Aucune demande en cours</Text>\n          )}\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={style.contentList}>\n      {listOffers && listOffers.length > 0 && !loading ? (\n        <FlatList\n          data={listOffers}\n          renderItem={itemOffer}\n          keyExtractor={(itemOffer, index) => index.toString()}\n        />\n      ) : (\n        <View\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" color=\"#e9383f\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  contentList: {\n    flex: 1,\n    padding: 10,\n    marginBottom: 20,\n  },\n  item: {\n    borderWidth: 1,\n    borderColor: COLORS.red2,\n    borderRadius: 5,\n    padding: 10,\n    marginVertical: 10,\n    backgroundColor: COLORS.white1\n  },\n  contentImage: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  contentText: {\n    flex: 1,\n    justifyContent: \"space-between\",\n  },\n  image: {\n    width: 100,\n    height: 100,\n  },\n  text: {\n    fontSize: 12,\n    color: COLORS.red2,\n  },\n});\n\nexport default MyDonnationsScreen;\n","import { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TextInput,\n  ScrollView,\n  Platform,\n  TouchableHighlight,\n  Dimensions,\n} from \"react-native\";\nimport { RadioButton, Checkbox, Switch } from \"react-native-paper\";\nimport NsOffer from \"../../models/NsOffer\";\nimport { COLORS } from \"../../constant/colors\";\nimport {\n  initCategories,\n  initOffer,\n  initStates,\n} from \"../../functions/initObject\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport config from \"./../../config.json\";\n\nenum State {\n  CommeNeuf = \"Comme neuf\",\n  BonEtat = \"Bon état\",\n  EtatMoyen = \"État Moyen\",\n  ABricoler = \"À bricoler\",\n}\n\nconst UpdateOfferScreen: React.FC = ({ route }: any) => {\n  const [offer, setOffer] = useState<NsOffer.IOfferData>(initOffer());\n  const [render, setRender] = useState<JSX.Element>(<View></View>);\n  const categories = initCategories();\n  const navigation = useNavigation();\n  const { currentOffer } = route.params;\n\n  useEffect(() => {\n    console.log(\"USE EFFECT\");\n    setOffer(JSON.parse(JSON.stringify(currentOffer)));\n    navigation.setOptions({ title: currentOffer.label });\n  }, []);\n\n  useEffect(() => {\n    generateView(false);\n  }, [offer]);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {});\n    return unsubscribe;\n  }, [navigation]);\n\n  const updateOffer = async () => {\n    console.log(offer.label);\n    console.log(currentOffer.label);\n    if (\n      offer.label !== currentOffer.label ||\n      offer.description !== currentOffer.description ||\n      offer.state !== currentOffer.state ||\n      offer.status !== currentOffer.status ||\n      offer.is_owner_address !== currentOffer.is_owner_address ||\n      offer.exchange_address.number !== currentOffer.exchange_address.number ||\n      offer.exchange_address.street !== currentOffer.exchange_address.street ||\n      offer.exchange_address.complement !==\n        currentOffer.exchange_address.complement ||\n      offer.exchange_address.zipcode !==\n        currentOffer.exchange_address.zipcode ||\n      offer.exchange_address.city !== currentOffer.exchange_address.city ||\n      offer.display_mail !== currentOffer.display_mail ||\n      offer.display_phone !== currentOffer.display_phone\n    ) {\n      console.log(\"update\");\n      await fetch(\n        `http://${config.ip}:${config.port}/offers/update/${offer.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(offer),\n        }\n      );\n      // .then((response) => console.log(response.json()));\n      if (offer.is_owner_address) {\n        const newOffer: NsOffer.IOfferData = offer;\n        if (newOffer.owner.address) {\n          newOffer.exchange_address = newOffer.owner.address;\n        }\n      }\n    }\n    navigation.navigate(\"MyDonnationsScreen\", {\n      currentOffer: offer,\n    });\n  };\n\n  const onChangeLabel = (text: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.label = text;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeDescription = (text: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.description = text;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeDisplayPhone = () => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.display_phone = !newOffer.display_phone;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeDisplayMail = () => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.display_mail = !newOffer.display_mail;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeNumberAddress = (value: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    (newOffer.exchange_address.number = value), 10;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeStreetAddress = (value: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.exchange_address.street = value;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeZipcodeAddress = (value: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.exchange_address.zipcode = value;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeCityAddress = (value: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.exchange_address.city = value;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeComlementAddress = (value: string) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.exchange_address.complement = value;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const onChangeIsOwnerAddress = () => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.is_owner_address = !newOffer.is_owner_address;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const defineTextIsOwnerAddress = (): string => {\n    let result = \"\";\n    if (offer.is_owner_address) {\n      result = \"Mon adresse\";\n    } else {\n      result = \"Une autre adresse\";\n    }\n    return result;\n  };\n\n  const onChangeState = (newState: State) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.state = newState;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const generateRadioButtonState = (): JSX.Element[] => {\n    const states: State[] = [\n      State.CommeNeuf,\n      State.BonEtat,\n      State.EtatMoyen,\n      State.ABricoler,\n    ];\n    let result: JSX.Element[] = [];\n    for (const state of states) {\n      result.push(\n        <View\n          key={\"view-radioButton-state-\" + state}\n          style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}\n        >\n          <RadioButton\n            key={\"radioButton-state-\" + state}\n            value={state}\n            color={COLORS.red1}\n            status={offer.state === state ? \"checked\" : \"unchecked\"}\n            onPress={() => onChangeState(state)}\n          />\n          <Text style={{ marginLeft: 10 }}>{state}</Text>\n        </View>\n      );\n    }\n    return result;\n  };\n\n  const onChangeCategory = (indexCategories: number) => {\n    const newOffer: NsOffer.IOfferData = offer;\n    newOffer.category_id = categories[indexCategories].id;\n    setOffer(newOffer);\n    generateView(false);\n  };\n\n  const generateRadioButtonCategories = (): JSX.Element[] => {\n    const result: JSX.Element[] = [];\n    for (const category of categories) {\n      const index = category.id - 1;\n      result.push(\n        <View\n          key={\"view-radioButton-category-\" + category.label}\n          style={{ flex: 1, flexDirection: \"row\", alignItems: \"center\" }}\n        >\n          <RadioButton\n            key={\"radioButton-category-\" + category.label}\n            value={category.label}\n            color={COLORS.red1}\n            status={offer.category_id === category.id ? \"checked\" : \"unchecked\"}\n            onPress={() => onChangeCategory(index)}\n          />\n          <Text style={{ marginLeft: 10 }}>{category.label}</Text>\n        </View>\n      );\n    }\n    return result;\n  };\n\n  const displayPictures = (): JSX.Element => {\n    let result: JSX.Element[] = [];\n    const pictures: NsOffer.IPictureData[] = offer.pictures;\n    console.log(pictures);\n    if (pictures.length < 4) {\n      for (let i = 0; i < 3; i++) {\n        result.push(\n          <View key={\"content-picture-\" + i}>\n            {pictures[i] ? (\n              <Image\n                key={\"picture-\" + i}\n                style={style.image}\n                source={{\n                  uri: `http://${config.ip}:${config.port}/pictures/${pictures[i].url}`,\n                }}\n              />\n            ) : (\n              <Image\n                key={\"picture-\" + i}\n                style={style.image}\n                source={require(\"../../assets/logo.png\")}\n              />\n            )}\n            <View\n              key={\"content-icon\" + i}\n              style={{\n                marginTop: 10,\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n              }}\n            >\n              {pictures[i] ? (\n                <Ionicons\n                  name={\"close\"}\n                  size={25}\n                  color={COLORS.red1}\n                  onPress={() => deletePicture(pictures[i].id, true)}\n                />\n              ) : (\n                <Ionicons\n                  name={\"add\"}\n                  size={25}\n                  color={COLORS.red1}\n                  onPress={() => generateView(true)}\n                />\n              )}\n            </View>\n          </View>\n        );\n      }\n    }\n    return (\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        {result}\n      </ScrollView>\n    );\n  };\n\n  const pickImageFromGallery = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need camera roll permissions to make this work!\");\n    } else {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.5,\n      });\n      if (!result.cancelled) {\n        savePicture(result);\n      }\n    }\n    // generateView(false);\n  };\n\n  const takePicture = async () => {\n    const { status } = await ImagePicker.requestCameraPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need camera roll permissions to make this work!\");\n    } else {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.5,\n      });\n      if (result) {\n        savePicture(result);\n      }\n    }\n    // generateView(false);\n  };\n\n  const modal = (): JSX.Element => {\n    let result: JSX.Element = <View></View>;\n    result = (\n      <View\n        style={{\n          position: \"absolute\",\n          width: Dimensions.get(\"window\").width - 16,\n          height: Dimensions.get(\"window\").height - 188,\n          top: 8,\n          left: 8,\n          zIndex: 999,\n          backgroundColor: COLORS.white1,\n          borderWidth: 2,\n          borderColor: COLORS.red1,\n          borderRadius: 5,\n          flex: 1,\n          flexDirection: \"column\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          paddingVertical: 50,\n        }}\n      >\n        <TouchableHighlight\n          onPress={takePicture}\n          style={{\n            width: 250,\n            paddingVertical: 20,\n            borderRadius: 5,\n            backgroundColor: COLORS.red1,\n          }}\n        >\n          <Text style={{ color: \"white\", textAlign: \"center\" }}>\n            PRENDRE UNE PHOTO\n          </Text>\n        </TouchableHighlight>\n        <TouchableHighlight\n          onPress={pickImageFromGallery}\n          style={{\n            width: 250,\n            paddingVertical: 20,\n            borderRadius: 5,\n            backgroundColor: COLORS.red1,\n          }}\n        >\n          <Text style={{ color: \"white\", textAlign: \"center\" }}>\n            SELECTIONNER UNE IMAGE\n          </Text>\n        </TouchableHighlight>\n        <TouchableHighlight\n          onPress={() => {\n            generateView(false);\n          }}\n          style={{\n            width: 250,\n            paddingVertical: 20,\n            borderRadius: 5,\n            backgroundColor: COLORS.red1,\n          }}\n        >\n          <Text style={{ color: \"white\", textAlign: \"center\" }}>FERMER</Text>\n        </TouchableHighlight>\n      </View>\n    );\n    return result;\n  };\n\n  const savePicture = async (result: any) => {\n    const data: FormData = new FormData();\n    data.append(\"id\", offer.id.toString());\n    if (Platform.OS === \"web\") {\n      const base64 = await fetch(result.uri);\n      const blob = await base64.blob();\n      data.append(\"image\", blob);\n    } else {\n      if (!result.cancelled && result.type === \"image\" && result.uri) {\n        const format = result.uri.split(\".\")[result.uri.split(\".\").length - 1];\n        // fileName = `${new Date().getTime()}.${format}`;\n        // data.append(\"image\", {\n        //   uri: result.uri,\n        //   name: fileName,\n        //   type: `image/${format}`,\n        // });\n        data.append(\"image\", result);\n      }\n    }\n\n    // SAVE IMAGE\n    await fetch(`http://${config.ip}:${config.port}/pictures`, {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => console.log(res))\n      .catch((e) => console.log(e));\n\n    // GET ALL IMAGES\n    await fetch(`http://${config.ip}:${config.port}/pictures/${offer.id}`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((result: NsOffer.IPictureData[]) => {\n        console.log(result);\n        const newOffer: NsOffer.IOfferData = offer;\n        newOffer.pictures = result;\n        setOffer(newOffer);\n      })\n      .catch((e) => console.log(e));\n    generateView(false);\n  };\n\n  const deletePicture = (id: number, reload: boolean) => {\n    console.log(id);\n    fetch(`http://${config.ip}:${config.port}/pictures/offers/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((response) => response.json());\n    const newOffer: NsOffer.IOfferData = offer;\n    const oldPictures: NsOffer.IPictureData[] = newOffer.pictures;\n    let newPictures: NsOffer.IPictureData[] = [];\n    for (const oldPicture of oldPictures) {\n      if (oldPicture.id !== id) {\n        newPictures.push(oldPicture);\n      }\n    }\n    newOffer.pictures = newPictures;\n    setOffer(newOffer);\n    if (reload) {\n      generateView(false);\n    }\n  };\n\n  const generateView = (displayModal: boolean) => {\n    console.log(\"generateView\");\n    const result: JSX.Element = (\n      <View style={style.contentItem}>\n        {displayModal && modal()}\n        <View style={style.contentInput}>\n          <Text style={style.labelInput}>IMAGES</Text>\n          {displayPictures()}\n        </View>\n        <View style={style.contentInput}>\n          <Text style={style.labelInput}>LABEL</Text>\n          <TextInput\n            style={style.input}\n            onChangeText={onChangeLabel}\n            value={offer.label}\n            placeholder=\"Label\"\n          />\n        </View>\n        <View style={style.contentInput}>\n          <Text style={style.labelInput}>DESCRIPTION</Text>\n          <TextInput\n            style={style.input}\n            onChangeText={onChangeDescription}\n            value={offer.description}\n            placeholder=\"Description\"\n            multiline\n          />\n        </View>\n        <View style={style.contentInput}>\n          <Text style={style.labelInput}>ETAT</Text>\n          {generateRadioButtonState()}\n        </View>\n        <View style={style.contentInput}>\n          <Text style={style.labelInput}>CATEGORIE</Text>\n          {generateRadioButtonCategories()}\n        </View>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: COLORS.red1 }}>\n            AFFICHER MON TELEPHONE\n          </Text>\n          <Checkbox\n            color={COLORS.red1}\n            status={offer.display_phone ? \"checked\" : \"unchecked\"}\n            onPress={() => onChangeDisplayPhone()}\n          />\n        </View>\n        <View\n          style={{\n            marginBottom: 20,\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Text style={{ fontWeight: \"bold\", color: COLORS.red1 }}>\n            AFFICHER MON EMAIL\n          </Text>\n          <Checkbox\n            color={COLORS.red1}\n            status={offer.display_mail ? \"checked\" : \"unchecked\"}\n            onPress={() => onChangeDisplayMail()}\n          />\n        </View>\n        <View style={{ marginTop: 5 }}>\n          <Text\n            style={{ fontWeight: \"bold\", color: COLORS.red1, marginBottom: 5 }}\n          >\n            ADRESSE D'ECHANGE\n          </Text>\n          <View\n            style={{\n              borderWidth: 1,\n              borderColor: COLORS.red1,\n              borderRadius: 5,\n              padding: 10,\n            }}\n          >\n            <View\n              style={{\n                marginTop: 10,\n                marginBottom: 10,\n                flex: 1,\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: \"bold\",\n                  fontStyle: \"italic\",\n                  // fontSize: 14,\n                  color: COLORS.red1,\n                }}\n              >\n                {defineTextIsOwnerAddress().toUpperCase()}\n              </Text>\n              <Switch\n                value={offer.is_owner_address}\n                onValueChange={onChangeIsOwnerAddress}\n                color={COLORS.red1}\n              />\n            </View>\n            <View\n              style={{\n                marginHorizontal: 10,\n              }}\n            >\n              {offer.is_owner_address ? (\n                <View\n                  style={{\n                    marginVertical: 10,\n                    marginLeft: 10,\n                    flex: 1,\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Text style={style.ownerAddress}>\n                    {offer.owner?.address?.number +\n                      \" \" +\n                      offer.owner?.address?.street}\n                  </Text>\n                  <Text style={style.ownerAddress}>\n                    {offer.owner?.address?.complement}\n                  </Text>\n                  <Text style={style.ownerAddress}>\n                    {offer.owner?.address?.zipcode +\n                      \" \" +\n                      offer.owner?.address?.city}\n                  </Text>\n                </View>\n              ) : (\n                <View style={{ marginLeft: 10 }}>\n                  <View style={style.contentInput}>\n                    <Text style={style.labelInputAddress}>NUMERO</Text>\n                    <TextInput\n                      style={style.input}\n                      onChangeText={onChangeNumberAddress}\n                      value={\n                        offer.exchange_address.number\n                          ? offer.exchange_address.number.toString()\n                          : \"\"\n                      }\n                      placeholder=\"Numéro\"\n                    />\n                  </View>\n                  <View style={style.contentInput}>\n                    <Text style={style.labelInputAddress}>RUE</Text>\n                    <TextInput\n                      style={style.input}\n                      onChangeText={onChangeStreetAddress}\n                      value={offer.exchange_address.street}\n                      placeholder=\"Rue\"\n                    />\n                  </View>\n                  <View style={style.contentInput}>\n                    <Text style={style.labelInputAddress}>CODE POSTAL</Text>\n                    <TextInput\n                      style={style.input}\n                      onChangeText={onChangeZipcodeAddress}\n                      value={offer.exchange_address.zipcode}\n                      placeholder=\"Code Postal\"\n                    />\n                  </View>\n                  <View style={style.contentInput}>\n                    <Text style={style.labelInputAddress}>VILLE</Text>\n                    <TextInput\n                      style={style.input}\n                      onChangeText={onChangeCityAddress}\n                      value={offer.exchange_address.city}\n                      placeholder=\"Ville\"\n                    />\n                  </View>\n                  <View style={style.contentInput}>\n                    <Text style={style.labelInputAddress}>COMPLEMENT</Text>\n                    <TextInput\n                      style={style.input}\n                      onChangeText={onChangeComlementAddress}\n                      value={offer.exchange_address.complement}\n                      placeholder=\"Complément\"\n                      multiline\n                    />\n                  </View>\n                </View>\n              )}\n            </View>\n          </View>\n        </View>\n\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            marginVertical: 50,\n          }}\n        >\n          <TouchableHighlight onPress={updateOffer} style={style.button}>\n            <Text style={{ color: \"white\" }}>MODIFIER</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            onPress={() => {\n              navigation.navigate(\"MyDonnationsScreen\", {\n                currentOffer: currentOffer,\n              });\n            }}\n            style={style.button}\n          >\n            <Text style={{ color: \"white\" }}>ANNULER</Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n    );\n    setRender(result);\n  };\n\n  return (\n    <ScrollView style={{ backgroundColor: COLORS.white1 }}>{render}</ScrollView>\n  );\n};\n\nconst style = StyleSheet.create({\n  contentItem: {\n    padding: 8,\n    // marginBottom: 50,\n  },\n  icon: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n  },\n  contentImage: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\",\n    width: 250,\n    height: 250,\n    marginHorizontal: 10,\n    borderWidth: 1,\n    borderColor: COLORS.red1,\n    borderRadius: 5,\n  },\n  contentInput: {\n    marginVertical: 10,\n  },\n  labelInput: {\n    marginBottom: 5,\n    fontWeight: \"bold\",\n    color: COLORS.red1,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: COLORS.red1,\n    borderRadius: 5,\n    padding: 10,\n  },\n  labelInputAddress: {\n    marginBottom: 5,\n    fontWeight: \"bold\",\n    fontSize: 12,\n    color: COLORS.red1,\n  },\n  button: {\n    marginVertical: 10,\n    padding: 20,\n    borderRadius: 5,\n    backgroundColor: COLORS.red1,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  ownerAddress: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default UpdateOfferScreen;\n","import { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  TouchableHighlight,\n} from \"react-native\";\nimport { COLORS } from \"../../constant/colors\";\nimport { initOffer } from \"../../functions/initObject\";\nimport NsOffer from \"../../models/NsOffer\";\nimport config from \"./../../config.json\";\n\nconst OfferActionsScreen: React.FC = ({ route }: any) => {\n  const navigation = useNavigation();\n  const [offer, setOffer] = useState<NsOffer.IOfferData>(initOffer());\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {\n      const { currentOffer } = route.params;\n      navigation.setOptions({ title: currentOffer.label });\n      setOffer(currentOffer);\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  const goToUpdateScreen = () => {\n    navigation.navigate(\"UpdateOfferScreen\", {\n      currentOffer: offer,\n    });\n  };\n\n  const goToWantedByUser = () => {\n    navigation.navigate(\"WantedByUserScreen\", {\n      users: offer.wanted_by_users,\n      offerId: offer.id,\n    });\n  };\n\n  const deleteOffer = () => {\n    console.log(offer);\n    const url = `http://${config.ip}:${config.port}/offers/${offer.id}`;\n    console.log(url);\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => console.log(res.json()))\n      .catch((err) => console.log(err));\n\n    navigation.navigate(\"UserActionsScreen\", {\n      currentOffer: offer,\n    });\n  };\n\n  return (\n    <View\n      style={{\n        padding: 16,\n        flex: 1,\n        justifyContent: \"center\",\n        marginVertical: 50,\n      }}\n    >\n      <TouchableHighlight onPress={goToUpdateScreen} style={style.button}>\n        <Text style={{ color: \"white\" }}>MODIFIER L'OFFRE</Text>\n      </TouchableHighlight>\n      <TouchableHighlight onPress={goToWantedByUser} style={style.button}>\n        <Text style={{ color: \"white\" }}>GERER LES DEMANDES</Text>\n      </TouchableHighlight>\n      <TouchableHighlight onPress={deleteOffer} style={style.button}>\n        <Text style={{ color: \"white\" }}>SUPPRIMER</Text>\n      </TouchableHighlight>\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  button: {\n    borderRadius: 5,\n    backgroundColor: COLORS.red1,\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 20,\n    margin: 20,\n  },\n});\n\nexport default OfferActionsScreen;\n","import { useNavigation } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  FlatList,\n  ListRenderItem,\n  ActivityIndicator,\n  StyleSheet,\n} from \"react-native\";\nimport { COLORS } from \"../../constant/colors\";\nimport NsUser from \"../../models/NsUser\";\nimport config from \"./../../config.json\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst WantedByUserScreen: React.FC = ({ route }: any) => {\n  const navigation = useNavigation();\n  const [listUsers, setListUsers] = useState<NsUser.IUserWantedOfferData[]>([]);\n  const { offerId } = route.params;\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener(\"focus\", () => {\n      const { users } = route.params;\n      setListUsers(users);\n    });\n    return unsubscribe;\n  }, [navigation]);\n\n  const updateDemand = (\n    user: NsUser.IUserWantedOfferData,\n    _newValue: boolean\n  ) => {\n    const newListUsers: NsUser.IUserWantedOfferData[] = [];\n    for (const oldUser of listUsers) {\n      if (oldUser.id === user.id) {\n        if (oldUser.user_want_offers) {\n          oldUser.user_want_offers.validate_by_owner = _newValue;\n        }\n      }\n      if (_newValue) {\n        if (oldUser.id !== user.id) {\n          if (oldUser.user_want_offers) {\n            oldUser.user_want_offers.validate_by_owner = false;\n          }\n        }\n      }\n      newListUsers.push(oldUser);\n    }\n    setListUsers(newListUsers);\n    const url: string =\n      `http://${config.ip}:${config.port}/userWantOffers/updateOwnerAcceptDemand/` +\n      offerId +\n      \"/\" +\n      user.id;\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        newValue: _newValue,\n      }),\n    })\n      .then((response) => response.json())\n      .catch((err) => console.error(err));\n  };\n\n  const itemUser: ListRenderItem<NsUser.IUserWantedOfferData> = ({ item }) => (\n    <View\n      style={{\n        padding: 10,\n        // backgroundColor: COLORS.white2,\n        marginVertical: 10,\n        borderWidth: 2,\n        borderColor: COLORS.red1,\n        borderRadius: 5,\n        // height: 140,\n      }}\n    >\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <View style={{}}>\n          <Text style={{ fontWeight: \"bold\", color: COLORS.red1 }}>\n            {(item.first_name + \" \" + item.last_name).toUpperCase()}\n          </Text>\n          <Text style={{ fontStyle: \"italic\" }}>{item.note}</Text>\n          {item.user_want_offers?.validate_by_owner && (\n            <View\n              style={{\n                marginTop: 10,\n              }}\n            >\n              <Text>{item.phone}</Text>\n              <Text>{item.mail}</Text>\n            </View>\n          )}\n        </View>\n        <Text style={{ color: COLORS.red1, fontStyle: \"italic\" }}>\n          {item.user_want_offers?.validate_by_owner\n            ? \"Acceptée\"\n            : \"Non acceptée\"}\n        </Text>\n      </View>\n      <View\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          marginTop: 20,\n        }}\n      >\n        {item.user_want_offers?.validate_by_owner ? (\n          <Ionicons\n            name={\"close\"}\n            size={25}\n            color={COLORS.red1}\n            onPress={() => updateDemand(item, false)}\n          />\n        ) : (\n          <Ionicons\n            name={\"add\"}\n            size={25}\n            color={COLORS.red1}\n            onPress={() => updateDemand(item, true)}\n          />\n        )}\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={{ flex: 1, padding: 10, marginBottom: 20 }}>\n      {listUsers && listUsers.length > 0 ? (\n        <FlatList\n          data={listUsers}\n          renderItem={itemUser}\n          keyExtractor={(itemOffer, index) => index.toString()}\n        />\n      ) : (\n        <View\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" color=\"#e9383f\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst style = StyleSheet.create({\n  contentItem: {},\n});\n\nexport default WantedByUserScreen;\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport { authService } from \"../../services/auth.service\";\nimport { checkMail, checkPassword, checkStr } from \"../../functions/checkInput\";\n\nenum Address_input {\n  STREET,\n  CITY,\n  ZIPCODE,\n  COMPLEMENT,\n  NUMBER_STREET,\n}\n\nexport interface Address_Complete {\n  street: string;\n  city: string;\n  zipcode: string;\n  complement: string;\n  number: number;\n  latitude: number;\n  longitude: number;\n}\n\nconst SignUpScreen: React.FC = () => {\n  //*? Initialize State value\n\n  const [lastname, setLastName] = useState(\"\");\n  const [firstname, setFirstName] = useState(\"\");\n  const [fullname, setFullName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [urlavatar, setUrlAvatar] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [credit, setCredit] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [address, setAddress] = useState<Address_Complete>({\n    street: \"\",\n    city: \"\",\n    zipcode: \"\",\n    complement: \"\",\n    number: 0,\n    latitude: 0,\n    longitude: 0,\n  });\n\n  const comparePassword = (password: string, confirmpassword: string) => {\n    return password === confirmpassword;\n  };\n\n  const updateAddressInput = (str: string, champ: number) => {\n    const newAddress = address;\n    if (champ === Address_input.CITY) {\n      newAddress.city = str;\n    }\n    else if (champ === Address_input.COMPLEMENT) {\n      newAddress.complement = str;\n    }\n    else if (champ === Address_input.NUMBER_STREET) {\n      newAddress.number = parseInt(str, 10);\n    }\n    else if (champ === Address_input.STREET) {\n      newAddress.street = str;\n    }\n    else if (champ === Address_input.ZIPCODE) {\n      newAddress.zipcode = str;\n    }\n    setAddress(newAddress);\n  };\n\n  // ? check Email and password\n\n  const verifyMailFormat = (mail: string) => {\n    checkMail(mail);\n  };\n\n  const verifyPasswordFormat = (password: string) => {\n    checkPassword(password);\n  };\n  const onClickSubmit = () => {\n\n    console.log('START');\n    if (!checkStr(lastname, 3, 26)) {\n      console.log(\"Nom de famille incorrect\");\n      return;\n    }\n    if (!checkStr(firstname, 3, 26)) {\n      console.log(\"Prénom incorrect\");\n      return;\n    }\n    if (!checkMail(mail)) {\n      console.log(\"mail format incorrect\");\n      return;\n    }\n    if (!comparePassword(password, confirmpassword)) {\n      console.log(\n        \"mot de passe et confirmation de celui-ci ne sont pas identique\"\n      );\n      return;\n    }\n    if (!checkPassword(password)) {\n      console.log(\"mauvais format mot de passe\");\n      return;\n    }\n    console.log('DONE');\n    authService.register_service(firstname, lastname, phone, 50, mail, password, address)\n    \n  };\n\n  return (\n    <ScrollView>\n      {/* <Image\n        style={styles.logo}\n        source={require(\"../../../../appshareworld/assets/png2pdf.pdf.png\")}\n      /> */}\n      <Text>\n        Veuillez remplir les informations demandés pour avoir commencer\n        l'utilisation de l'application\n      </Text>\n      <Text>SignUp</Text>\n\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'lastname'}\n          style={styles.TextInput}\n          placeholder=\"Nom de Famille\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(lastname) => setLastName(lastname)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'firstname'}\n          style={styles.TextInput}\n          placeholder=\"Prénom\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(firstname) => setFirstName(firstname)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'phone'}\n          style={styles.TextInput}\n          placeholder=\"Téléphone\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(phone) => setPhone(phone)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'avatar'}\n          style={styles.TextInput}\n          placeholder=\"AvatarUrl\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(urlavatar) => setUrlAvatar(urlavatar)}\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n          testID={'email'}\n          style={styles.TextInput}\n          placeholder=\"Email\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(mail) => setMail(mail)}\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'password'}\n          style={styles.TextInput}\n          placeholder=\"Mot de passe\"\n          placeholderTextColor=\"#E9383F\"\n          secureTextEntry={true}\n          onChangeText={(password) => setPassword(password)}\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'verifypassword'}\n          style={styles.TextInput}\n          placeholder=\"Confirmation mot de passe\"\n          placeholderTextColor=\"#E9383F\"\n          secureTextEntry={true}\n          onChangeText={(confirmpassword) =>\n            setConfirmPassword(confirmpassword)\n          }\n        />\n      </View>\n\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'number'}\n          style={styles.TextInput}\n          placeholder=\"Number\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(value) =>\n            updateAddressInput(value, Address_input.NUMBER_STREET)\n          }\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'street'}\n          style={styles.TextInput}\n          placeholder=\"Street\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(value) =>\n            updateAddressInput(value, Address_input.STREET)\n          }\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'addressmore'}\n          style={styles.TextInput}\n          placeholder=\"Complement\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(value) =>\n            updateAddressInput(value, Address_input.COMPLEMENT)\n          }\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'city'}\n          style={styles.TextInput}\n          placeholder=\"City\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(value) =>\n            updateAddressInput(value, Address_input.CITY)\n          }\n        />\n      </View>\n      <View style={styles.inputView}>\n        <TextInput\n        testID={'zipcode'}\n          style={styles.TextInput}\n          placeholder=\"ZipCode\"\n          placeholderTextColor=\"#E9383F\"\n          onChangeText={(value) =>\n            updateAddressInput(value, Address_input.ZIPCODE)\n          }\n        />\n      </View>\n      <TouchableOpacity onPress={onClickSubmit} testID={'submit'}>\n        <View style={styles.button}>\n          <Text style={styles.buttonText}>Submit</Text>\n        </View>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#E9383F\",\n  },\n  buttonText: {\n    textAlign: \"center\",\n    padding: 20,\n    color: \"#FFF\",\n  },\n  TextInput: {\n    height: 50,\n    flex: 1,\n    padding: 10,\n    marginLeft: 20,\n  },\n  logo: {\n    width: \"20%\",\n    height: \"20%\",\n  },\n  inputView: {\n    backgroundColor: \"#E9383F\",\n    borderRadius: 30,\n    width: \"70%\",\n    height: 10,\n    marginBottom: 20,\n    alignItems: \"center\",\n  },\n});\n\nexport default SignUpScreen;\n","const EMAIL_REGEX =  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst PASSWORD_REGEX = /^(?=.*\\d).{4,8}$/;\n\n/**\n * Check if value email match with rules of regex \n * @param {string} mail - user mail \n * @returns {boolean} return true if match with regex\n */\nexport const checkMail = (mail:string) => {\nreturn EMAIL_REGEX.test(mail) ;\n}\n\n/**\n * Check if value password match with rules of regex \n * @param {string} password - user password\n * @returns {boolean} return true if match with regex\n */\nexport const checkPassword = (password:string) => {\nreturn PASSWORD_REGEX.test(password);\n}\n\n/**\n * check value it's not null or if size respect lenMin and lenMax \n * @param {string} str - user required input  \n * @param {number} lenMin - value size minimum\n * @param {number} lenMax - value size maximum\n * @returns {boolean}  size it's size is correct\n */\nexport const checkStr = (str: string, lenMin: number, lenMax: number) => {\n    const size = str.length\n    return (str !== \"\" && size >= lenMin && size <= lenMax);\n}","import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  TextInput,\n  Button,\n} from \"react-native\";\n\nimport HomeScreen from \"../screens/HomeScreen\";\nimport NotificationScreen from \"../screens/NotificationScreen\";\nimport AddScreen from \"../screens/AddScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\n// import SearchListScreen from '../screens/SearchListScreen';\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport MyDonnationsScreen from \"../screens/profile/MyDonnationsScreen\";\nimport UpdateOfferScreen from \"../screens/offers/UpdateOfferScreen\";\nimport OfferActionsScreen from \"../screens/offers/OfferActionsScreen\";\nimport WantedByUserScreen from \"../screens/offers/WantedByUserScreen\";\nimport UserActionsScreen from \"../screens/profile/UserActionsScreen\";\nimport NsPropsType from \"./propsType\";\nimport { SignInScreen } from \"../screens/authScreen/SignIn\";\nimport SignUpScreen from \"../screens/authScreen/SignUp\";\nimport { authService } from \"../services/auth.service\";\nimport { useNavigation } from \"@react-navigation/core\";\n\nexport interface Props {\n  isDisconnected: boolean;\n}\n\nconst Tab = createBottomTabNavigator();\n\nconst HomeStack = createStackNavigator();\n\nfunction messageDisconnect(props: Props) {\n  const navigation = useNavigation();\n  if (props.isDisconnected == false) {\n    authService.login_service;\n    console.log(\"Connecté\");\n  }\n  if (props.isDisconnected == true) {\n    authService.logout_service();\n    navigation.navigate(\"HomeScreen\");\n    console.log(\"Déconnecté\");\n  }\n}\nfunction HomeStackScreen() {\n  return (\n    <HomeStack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#e9383f\" },\n        headerTintColor: \"#fff\",\n      }}\n    >\n      <HomeStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{ title: \"ShareWorld\" }}\n      />\n    </HomeStack.Navigator>\n  );\n}\nconst NotificationStack = createStackNavigator();\nfunction NotificationStackScreen() {\n  return (\n    <NotificationStack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#e9383f\" },\n        headerTintColor: \"#fff\",\n      }}\n    >\n      <NotificationStack.Screen\n        name=\"NotificationScreen\"\n        component={NotificationScreen}\n        options={{ title: \"Mes Notifications\" }}\n      />\n    </NotificationStack.Navigator>\n  );\n}\n\nconst AddStack = createStackNavigator();\nfunction AddStackScreen() {\n  return (\n    <AddStack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#e9383f\" },\n        headerTintColor: \"#fff\",\n      }}\n    >\n      <AddStack.Screen\n        name=\"Create\"\n        component={AddScreen}\n        options={{ title: \"Créer une offre\" }}\n      />\n    </AddStack.Navigator>\n  );\n}\nconst SearchStack = createStackNavigator<NsPropsType.NavigatorSearchStackParamList>();\nfunction SearchStackScreen() {\n  return (\n    <SearchStack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#e9383f\" },\n        headerTintColor: \"#fff\",\n      }}\n    >\n      <SearchStack.Screen\n        name=\"SearchScreen\"\n        component={SearchScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      {/* <SearchStack.Screen name='SearchListScreen'\n                component={SearchListScreen}\n                options={{\n                    headerShown: false,\n                }}\n            /> */}\n    </SearchStack.Navigator>\n  );\n}\nconst ProfileStack = createStackNavigator();\nfunction ProfileStackScreen() {\n  return (\n    <ProfileStack.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#e9383f\" },\n        headerTintColor: \"#fff\",\n      }}\n    >\n      <ProfileStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ title: \"Mon Compte\" }}\n      />\n      <ProfileStack.Screen\n        name=\"SignInScreen\"\n        component={SignInScreen}\n        options={{ title: \"Connexion\" }}\n      />\n      <ProfileStack.Screen\n        name=\"SignUpScreen\"\n        component={SignUpScreen}\n        options={{ title: \"Créer un compte\" }}\n      />\n      <ProfileStack.Screen\n        name=\"MyDonnationsScreen\"\n        component={MyDonnationsScreen}\n        options={{ title: \"Mes dons\" }}\n      />\n      <ProfileStack.Screen\n        name=\"UserActionsScreen\"\n        component={UserActionsScreen}\n        options={{ title: \"Mon Compte\" }}\n      />\n      <ProfileStack.Screen\n        name=\"OfferActionsScreen\"\n        component={OfferActionsScreen}\n        options={({ route }: any) => ({ title: route.params.name })}\n      />\n      <ProfileStack.Screen\n        name=\"UpdateOfferScreen\"\n        component={UpdateOfferScreen}\n        options={({ route }: any) => ({ title: route.params.name })}\n      />\n      <ProfileStack.Screen\n        name=\"WantedByUserScreen\"\n        component={WantedByUserScreen}\n        options={{ title: \"Gérer les demandes\" }}\n      />\n    </ProfileStack.Navigator>\n  );\n}\n\nconst Navigator: React.FC = () => {\n  return (\n    <Tab.Navigator\n      tabBarOptions={{\n        style: {\n          backgroundColor: \"#e9383f\",\n          height: 60,\n        },\n      }}\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: any;\n          color = \"#fff\";\n          size = 40;\n\n          switch (route.name) {\n            case \"HomeScreen\":\n              iconName = focused ? \"home\" : \"home-outline\";\n              break;\n            case \"NotificationScreen\":\n              iconName = focused ? \"notifications\" : \"notifications-outline\";\n              break;\n            /*  case 'AddScreen':\n                             iconName = focused ? 'add-circle' : 'add-circle-outline'\n                             break; */\n            case \"SearchScreen\":\n              iconName = focused ? \"search\" : \"search-outline\";\n              break;\n            case \"ProfileScreen\":\n              iconName = focused ? \"person\" : \"person-outline\";\n              break;\n            default:\n              break;\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarLabel: () => {\n          return null;\n        },\n      })}\n    >\n      <Tab.Screen name=\"HomeScreen\" component={HomeStackScreen} />\n      <Tab.Screen\n        name=\"NotificationScreen\"\n        component={NotificationStackScreen}\n      />\n      <Tab.Screen\n        name=\"AddScreen\"\n        component={AddStackScreen}\n        options={{\n          tabBarButton: (props) => (\n            <View style={styles.container} pointerEvents=\"box-none\">\n              <TouchableOpacity style={styles.button} onPress={props.onPress}>\n                <Ionicons\n                  name={\"add-circle-outline\"}\n                  style={styles.buttonIcon}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n        }}\n      />\n      <Tab.Screen name=\"SearchScreen\" component={SearchStackScreen} />\n      <Tab.Screen name=\"ProfileScreen\" component={ProfileStackScreen} />\n    </Tab.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    position: \"relative\",\n    width: 75,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  background: {\n    position: \"absolute\",\n    top: 0,\n  },\n  button: {\n    top: -25.5,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 74,\n    height: 74,\n    borderRadius: 38,\n    backgroundColor: \"#e9383f\",\n  },\n  buttonIcon: {\n    fontSize: 78,\n    color: \"#fff\",\n  },\n});\nexport default Navigator;\n","import * as actionsTypes from './actionsTypes';\nimport { combineReducers } from 'redux';\n\nconst initialUserState: UserState = {\n    user: {\n        id: -1,\n        first_name: \"\",\n        last_name: \"\",\n        full_name: \"\",\n        phone: \"\",\n        url_avatar: \"\",\n        credit: 0,\n        mail: \"\",\n        note: 0,\n        number_notes: 0,\n        address: null,\n    }\n}\n\n\n\nconst reducer = (\n    state: UserState = initialUserState, \n    action: UserAction,\n    ):  UserState => {\n        switch(action.type){\n            case actionsTypes.ADD_USER:\n            case actionsTypes.EDIT_USER:\n                console.log('in reducer');\n                \n                const newUser: IUser = action.user;\n                return {...state,\n                       user: newUser\n                }\n            case actionsTypes.REMOVE_USER:\n                    const deleteUser: IUser = initialUserState.user;\n                    return {...state,\n                           user: deleteUser\n                    }\n            // default: return state;\n           \n                    // case actionsTypes.GET_USER:\n                    //        const getuser: IUser | null = action.user;\n                    //        return {... state,\n                    //          user: getuser\n                    //     }\n                    default: return state;\n        }\n    }\n\n    // const rootReducer = combineReducers({\n    //     props: reducer\n    // });\n\nexport default reducer;","// import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Navigator from './src/routes/navigator';\n\nimport {createStore, applyMiddleware, Store} from 'redux';\nimport thunk from 'redux-thunk'; \nimport reducer from './src/store/reducers';\n\n// import { useNavigation } from \"@react-navigation/core\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nexport const store: Store<UserState, UserAction> & {\n   dispatch: DispatchType\n} = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\n\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n    <NavigationContainer>\n      {/*  <StatusBar /> */}\n     \n \n     \n      <Navigator />\n    \n    </NavigationContainer>\n    </Provider>\n  )\n}\n\nexport default App;\n"],"sourceRoot":""}